{
  "id": 0,
  "name": "@supabase/auth-js",
  "kind": 1,
  "kindString": "Project",
  "flags": {},
  "originalName": "",
  "children": [
    {
      "id": 1065,
      "name": "AuthApiError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 1066,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 21,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1067,
              "name": "new AuthApiError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1068,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1069,
                  "name": "status",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1065,
                "name": "AuthApiError"
              },
              "overwrites": {
                "type": "reference",
                "id": 1060,
                "name": "AuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 1059,
            "name": "AuthError.constructor"
          }
        },
        {
          "id": 1070,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 19,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "overwrites": {
            "type": "reference",
            "id": 1063,
            "name": "AuthError.status"
          }
        },
        {
          "id": 1071,
          "name": "toJSON",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 27,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1072,
              "name": "toJSON",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1073,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1075,
                      "name": "message",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 30,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1074,
                      "name": "name",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 29,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1076,
                      "name": "status",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 31,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        1075,
                        1074,
                        1076
                      ]
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            1066
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            1070
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            1071
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 18,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 1058,
          "name": "AuthError"
        }
      ]
    },
    {
      "id": 1058,
      "name": "AuthError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 1059,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 7,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1060,
              "name": "new AuthError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1061,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1062,
                  "name": "status",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1058,
                "name": "AuthError"
              },
              "overwrites": {
                "type": "reference",
                "name": "Error.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "Error.constructor"
          }
        },
        {
          "id": 1063,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 4,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            1059
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            1063
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 3,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "qualifiedName": "Error",
          "package": "typescript",
          "name": "Error"
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 1065,
          "name": "AuthApiError"
        },
        {
          "type": "reference",
          "id": 1078,
          "name": "AuthUnknownError"
        },
        {
          "type": "reference",
          "id": 1086,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 1138,
      "name": "AuthImplicitGrantRedirectError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 1139,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 88,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1140,
              "name": "new AuthImplicitGrantRedirectError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1141,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1142,
                  "name": "details",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1143,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1145,
                              "name": "code",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/errors.ts",
                                  "line": 88,
                                  "character": 57
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1144,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/errors.ts",
                                  "line": 88,
                                  "character": 42
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                1145,
                                1144
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "defaultValue": "null"
                }
              ],
              "type": {
                "type": "reference",
                "id": 1138,
                "name": "AuthImplicitGrantRedirectError"
              },
              "overwrites": {
                "type": "reference",
                "id": 1088,
                "name": "CustomAuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 1087,
            "name": "CustomAuthError.constructor"
          }
        },
        {
          "id": 1146,
          "name": "details",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 87,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 1147,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1149,
                      "name": "code",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 87,
                          "character": 28
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 1148,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 87,
                          "character": 13
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        1149,
                        1148
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "defaultValue": "null"
        },
        {
          "id": 1160,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 51,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1092,
            "name": "CustomAuthError.name"
          }
        },
        {
          "id": 1161,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 52,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1093,
            "name": "CustomAuthError.status"
          }
        },
        {
          "id": 1150,
          "name": "toJSON",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 93,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1151,
              "name": "toJSON",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1152,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1156,
                      "name": "details",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 98,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 1157,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 1159,
                                  "name": "code",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/errors.ts",
                                      "line": 87,
                                      "character": 28
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 1158,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/errors.ts",
                                      "line": 87,
                                      "character": 13
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    1159,
                                    1158
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1154,
                      "name": "message",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 96,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1153,
                      "name": "name",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 95,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1155,
                      "name": "status",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 97,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        1156,
                        1154,
                        1153,
                        1155
                      ]
                    }
                  ]
                }
              },
              "overwrites": {
                "type": "reference",
                "id": 1095,
                "name": "CustomAuthError.toJSON"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 1094,
            "name": "CustomAuthError.toJSON"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            1139
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            1146,
            1160,
            1161
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            1150
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 86,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 1086,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 1125,
      "name": "AuthInvalidCredentialsError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 1126,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 81,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1127,
              "name": "new AuthInvalidCredentialsError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1128,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1125,
                "name": "AuthInvalidCredentialsError"
              },
              "overwrites": {
                "type": "reference",
                "id": 1088,
                "name": "CustomAuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 1087,
            "name": "CustomAuthError.constructor"
          }
        },
        {
          "id": 1129,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 51,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1092,
            "name": "CustomAuthError.name"
          }
        },
        {
          "id": 1130,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 52,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1093,
            "name": "CustomAuthError.status"
          }
        },
        {
          "id": 1131,
          "name": "toJSON",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 59,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1132,
              "name": "toJSON",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1133,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1135,
                      "name": "message",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 62,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1134,
                      "name": "name",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 61,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1136,
                      "name": "status",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 63,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        1135,
                        1134,
                        1136
                      ]
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1095,
                "name": "CustomAuthError.toJSON"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 1094,
            "name": "CustomAuthError.toJSON"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            1126
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            1129,
            1130
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            1131
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 80,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 1086,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 1113,
      "name": "AuthInvalidTokenResponseError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 1114,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 75,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1115,
              "name": "new AuthInvalidTokenResponseError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1113,
                "name": "AuthInvalidTokenResponseError"
              },
              "overwrites": {
                "type": "reference",
                "id": 1088,
                "name": "CustomAuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 1087,
            "name": "CustomAuthError.constructor"
          }
        },
        {
          "id": 1116,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 51,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1092,
            "name": "CustomAuthError.name"
          }
        },
        {
          "id": 1117,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 52,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1093,
            "name": "CustomAuthError.status"
          }
        },
        {
          "id": 1118,
          "name": "toJSON",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 59,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1119,
              "name": "toJSON",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1120,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1122,
                      "name": "message",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 62,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1121,
                      "name": "name",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 61,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1123,
                      "name": "status",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 63,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        1122,
                        1121,
                        1123
                      ]
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1095,
                "name": "CustomAuthError.toJSON"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 1094,
            "name": "CustomAuthError.toJSON"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            1114
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            1116,
            1117
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            1118
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 74,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 1086,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 1163,
      "name": "AuthPKCEGrantCodeExchangeError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 1164,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 105,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1165,
              "name": "new AuthPKCEGrantCodeExchangeError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1166,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1167,
                  "name": "details",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1168,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1170,
                              "name": "code",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/errors.ts",
                                  "line": 105,
                                  "character": 57
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1169,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/errors.ts",
                                  "line": 105,
                                  "character": 42
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                1170,
                                1169
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "defaultValue": "null"
                }
              ],
              "type": {
                "type": "reference",
                "id": 1163,
                "name": "AuthPKCEGrantCodeExchangeError"
              },
              "overwrites": {
                "type": "reference",
                "id": 1088,
                "name": "CustomAuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 1087,
            "name": "CustomAuthError.constructor"
          }
        },
        {
          "id": 1171,
          "name": "details",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 104,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 1172,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1174,
                      "name": "code",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 104,
                          "character": 28
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 1173,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 104,
                          "character": 13
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        1174,
                        1173
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "defaultValue": "null"
        },
        {
          "id": 1185,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 51,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1092,
            "name": "CustomAuthError.name"
          }
        },
        {
          "id": 1186,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 52,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1093,
            "name": "CustomAuthError.status"
          }
        },
        {
          "id": 1175,
          "name": "toJSON",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 110,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1176,
              "name": "toJSON",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1177,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1181,
                      "name": "details",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 115,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 1182,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 1184,
                                  "name": "code",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/errors.ts",
                                      "line": 104,
                                      "character": 28
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 1183,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/errors.ts",
                                      "line": 104,
                                      "character": 13
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    1184,
                                    1183
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1179,
                      "name": "message",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 113,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1178,
                      "name": "name",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 112,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1180,
                      "name": "status",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 114,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        1181,
                        1179,
                        1178,
                        1180
                      ]
                    }
                  ]
                }
              },
              "overwrites": {
                "type": "reference",
                "id": 1095,
                "name": "CustomAuthError.toJSON"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 1094,
            "name": "CustomAuthError.toJSON"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            1164
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            1171,
            1185,
            1186
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            1175
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 103,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 1086,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 1188,
      "name": "AuthRetryableFetchError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 1189,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 121,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1190,
              "name": "new AuthRetryableFetchError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1191,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1192,
                  "name": "status",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1188,
                "name": "AuthRetryableFetchError"
              },
              "overwrites": {
                "type": "reference",
                "id": 1088,
                "name": "CustomAuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 1087,
            "name": "CustomAuthError.constructor"
          }
        },
        {
          "id": 1193,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 51,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1092,
            "name": "CustomAuthError.name"
          }
        },
        {
          "id": 1194,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 52,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1093,
            "name": "CustomAuthError.status"
          }
        },
        {
          "id": 1195,
          "name": "toJSON",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 59,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1196,
              "name": "toJSON",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1197,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1199,
                      "name": "message",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 62,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1198,
                      "name": "name",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 61,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1200,
                      "name": "status",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 63,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        1199,
                        1198,
                        1200
                      ]
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1095,
                "name": "CustomAuthError.toJSON"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 1094,
            "name": "CustomAuthError.toJSON"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            1189
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            1193,
            1194
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            1195
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 120,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 1086,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 1101,
      "name": "AuthSessionMissingError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 1102,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 69,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1103,
              "name": "new AuthSessionMissingError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1101,
                "name": "AuthSessionMissingError"
              },
              "overwrites": {
                "type": "reference",
                "id": 1088,
                "name": "CustomAuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 1087,
            "name": "CustomAuthError.constructor"
          }
        },
        {
          "id": 1104,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 51,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1092,
            "name": "CustomAuthError.name"
          }
        },
        {
          "id": 1105,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 52,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1093,
            "name": "CustomAuthError.status"
          }
        },
        {
          "id": 1106,
          "name": "toJSON",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 59,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1107,
              "name": "toJSON",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1108,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1110,
                      "name": "message",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 62,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1109,
                      "name": "name",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 61,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1111,
                      "name": "status",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 63,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        1110,
                        1109,
                        1111
                      ]
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1095,
                "name": "CustomAuthError.toJSON"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 1094,
            "name": "CustomAuthError.toJSON"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            1102
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            1104,
            1105
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            1106
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 68,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 1086,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 1078,
      "name": "AuthUnknownError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 1079,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 43,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1080,
              "name": "new AuthUnknownError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1081,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1082,
                  "name": "originalError",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1078,
                "name": "AuthUnknownError"
              },
              "overwrites": {
                "type": "reference",
                "id": 1060,
                "name": "AuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 1059,
            "name": "AuthError.constructor"
          }
        },
        {
          "id": 1083,
          "name": "originalError",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 41,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "unknown"
          }
        },
        {
          "id": 1084,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 4,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1063,
            "name": "AuthError.status"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            1079
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            1083,
            1084
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 40,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 1058,
          "name": "AuthError"
        }
      ]
    },
    {
      "id": 1202,
      "name": "AuthWeakPasswordError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "comment": {
        "shortText": "This error is thrown on certain methods when the password used is deemed\nweak. Inspect the reasons to identify what password strength rules are\ninadequate."
      },
      "children": [
        {
          "id": 1203,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 141,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1204,
              "name": "new AuthWeakPasswordError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1205,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1206,
                  "name": "status",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 1207,
                  "name": "reasons",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1202,
                "name": "AuthWeakPasswordError"
              },
              "overwrites": {
                "type": "reference",
                "id": 1088,
                "name": "CustomAuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 1087,
            "name": "CustomAuthError.constructor"
          }
        },
        {
          "id": 1209,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 51,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1092,
            "name": "CustomAuthError.name"
          }
        },
        {
          "id": 1208,
          "name": "reasons",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Reasons why the password is deemed weak."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 139,
              "character": 2
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        },
        {
          "id": 1210,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 52,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1093,
            "name": "CustomAuthError.status"
          }
        },
        {
          "id": 1211,
          "name": "toJSON",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 59,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1212,
              "name": "toJSON",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1213,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1215,
                      "name": "message",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 62,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1214,
                      "name": "name",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 61,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1216,
                      "name": "status",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 63,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        1215,
                        1214,
                        1216
                      ]
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1095,
                "name": "CustomAuthError.toJSON"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 1094,
            "name": "CustomAuthError.toJSON"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            1203
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            1209,
            1208,
            1210
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            1211
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 135,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 1086,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 1086,
      "name": "CustomAuthError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 1087,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 53,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1088,
              "name": "new CustomAuthError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1089,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1090,
                  "name": "name",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1091,
                  "name": "status",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1086,
                "name": "CustomAuthError"
              },
              "overwrites": {
                "type": "reference",
                "id": 1060,
                "name": "AuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 1059,
            "name": "AuthError.constructor"
          }
        },
        {
          "id": 1092,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 51,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "overwrites": {
            "type": "reference",
            "name": "AuthError.name"
          }
        },
        {
          "id": 1093,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 52,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "overwrites": {
            "type": "reference",
            "id": 1063,
            "name": "AuthError.status"
          }
        },
        {
          "id": 1094,
          "name": "toJSON",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 59,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1095,
              "name": "toJSON",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1096,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1098,
                      "name": "message",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 62,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1097,
                      "name": "name",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 61,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1099,
                      "name": "status",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 63,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        1098,
                        1097,
                        1099
                      ]
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            1087
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            1092,
            1093
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            1094
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 50,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 1058,
          "name": "AuthError"
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 1101,
          "name": "AuthSessionMissingError"
        },
        {
          "type": "reference",
          "id": 1113,
          "name": "AuthInvalidTokenResponseError"
        },
        {
          "type": "reference",
          "id": 1125,
          "name": "AuthInvalidCredentialsError"
        },
        {
          "type": "reference",
          "id": 1138,
          "name": "AuthImplicitGrantRedirectError"
        },
        {
          "type": "reference",
          "id": 1163,
          "name": "AuthPKCEGrantCodeExchangeError"
        },
        {
          "type": "reference",
          "id": 1188,
          "name": "AuthRetryableFetchError"
        },
        {
          "type": "reference",
          "id": 1202,
          "name": "AuthWeakPasswordError"
        }
      ]
    },
    {
      "id": 1,
      "name": "GoTrueAdminApi",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 2,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 35,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 3,
              "name": "new GoTrueAdminApi",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 4,
                  "name": "__namedParameters",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 5,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 11,
                          "name": "fetch",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 44,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 12,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 13,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 14,
                                      "name": "input",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "reference",
                                            "qualifiedName": "RequestInfo",
                                            "package": "typescript",
                                            "name": "RequestInfo"
                                          },
                                          {
                                            "type": "reference",
                                            "qualifiedName": "URL",
                                            "package": "typescript",
                                            "name": "URL"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "id": 15,
                                      "name": "init",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "RequestInit",
                                        "package": "typescript",
                                        "name": "RequestInit"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "qualifiedName": "Response",
                                        "package": "typescript",
                                        "name": "Response"
                                      }
                                    ],
                                    "qualifiedName": "Promise",
                                    "package": "typescript",
                                    "name": "Promise"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 7,
                          "name": "headers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 41,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 8,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "indexSignature": {
                                "id": 9,
                                "name": "__index",
                                "kind": 8192,
                                "kindString": "Index signature",
                                "flags": {},
                                "parameters": [
                                  {
                                    "id": 10,
                                    "name": "key",
                                    "kind": 32768,
                                    "flags": {},
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            }
                          }
                        },
                        {
                          "id": 6,
                          "name": "url",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 40,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            11,
                            7,
                            6
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1,
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 16,
          "name": "mfa",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Contains all MFA administration methods."
          },
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 27,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 1012,
            "name": "GoTrueAdminMFAApi",
            "dereferenced": {
              "id": 1012,
              "name": "GoTrueAdminMFAApi",
              "kind": 256,
              "kindString": "Interface",
              "flags": {},
              "comment": {
                "shortText": "Contains the full multi-factor authentication administration API.",
                "tags": [
                  {
                    "tag": "expermental",
                    "text": "\n"
                  }
                ]
              },
              "children": [
                {
                  "id": 1016,
                  "name": "deleteFactor",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 1017,
                      "name": "deleteFactor",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Deletes a factor on a user. This will log the user out of all active\nsessions if the deleted factor was verified.",
                        "tags": [
                          {
                            "tag": "see",
                            "text": "{@link GoTrueMFAApi#unenroll}\n"
                          },
                          {
                            "tag": "expermental",
                            "text": "\n"
                          }
                        ]
                      },
                      "parameters": [
                        {
                          "id": 1018,
                          "name": "params",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 996,
                            "name": "AuthMFAAdminDeleteFactorParams",
                            "dereferenced": {
                              "id": 996,
                              "name": "AuthMFAAdminDeleteFactorParams",
                              "kind": 4194304,
                              "kindString": "Type alias",
                              "flags": {},
                              "comment": {
                                "tags": [
                                  {
                                    "tag": "expermental",
                                    "text": "\n"
                                  }
                                ]
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1028,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 997,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 998,
                                      "name": "id",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "ID of the MFA factor to delete."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 1030,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 999,
                                      "name": "userId",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "ID of the user whose factor is being deleted."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 1033,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        998,
                                        999
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1028,
                                      "character": 45
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 987,
                            "name": "AuthMFAAdminDeleteFactorResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 1013,
                  "name": "listFactors",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 1014,
                      "name": "listFactors",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Lists all factors associated to a user."
                      },
                      "parameters": [
                        {
                          "id": 1015,
                          "name": "params",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 1009,
                            "name": "AuthMFAAdminListFactorsParams",
                            "dereferenced": {
                              "id": 1009,
                              "name": "AuthMFAAdminListFactorsParams",
                              "kind": 4194304,
                              "kindString": "Type alias",
                              "flags": {},
                              "comment": {
                                "tags": [
                                  {
                                    "tag": "expermental",
                                    "text": "\n"
                                  }
                                ]
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1052,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 1010,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 1011,
                                      "name": "userId",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "ID of the user."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 1054,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        1011
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1052,
                                      "character": 44
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 1000,
                            "name": "AuthMFAAdminListFactorsResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [
                    1016,
                    1013
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1062,
                  "character": 17
                }
              ]
            }
          }
        },
        {
          "id": 44,
          "name": "createUser",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 152,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 45,
              "name": "createUser",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Creates a new user.\nThis function should only be called on a server. Never expose your `service_role` key in the browser."
              },
              "parameters": [
                {
                  "id": 46,
                  "name": "attributes",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 685,
                    "name": "AdminUserAttributes",
                    "dereferenced": {
                      "id": 685,
                      "name": "AdminUserAttributes",
                      "kind": 256,
                      "kindString": "Interface",
                      "flags": {},
                      "children": [
                        {
                          "id": 687,
                          "name": "app_metadata",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's application specific metadata. This maps to the `auth.users.app_metadata` column.",
                            "text": "Only a service role can modify.\n\nThe `app_metadata` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\naccess control information.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 398,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        },
                        {
                          "id": 690,
                          "name": "ban_duration",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Determines how long a user is banned for.",
                            "text": "The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n\nFor example, some possible durations include: '300ms', '2h45m'.\n\nSetting the ban duration to 'none' lifts the ban on the user.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 424,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 694,
                          "name": "email",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The user's email."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 349,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "inheritedFrom": {
                            "type": "reference",
                            "name": "Omit.email"
                          }
                        },
                        {
                          "id": 688,
                          "name": "email_confirm",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Confirms the user's email address if set to true.",
                            "text": "Only a service role can modify.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 405,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 693,
                          "name": "nonce",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
                            "text": "Call reauthenticate() to obtain the nonce first.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 366,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "inheritedFrom": {
                            "type": "reference",
                            "name": "Omit.nonce"
                          }
                        },
                        {
                          "id": 692,
                          "name": "password",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The user's password."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 359,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "inheritedFrom": {
                            "type": "reference",
                            "name": "Omit.password"
                          }
                        },
                        {
                          "id": 695,
                          "name": "phone",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The user's phone."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 354,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "inheritedFrom": {
                            "type": "reference",
                            "name": "Omit.phone"
                          }
                        },
                        {
                          "id": 689,
                          "name": "phone_confirm",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Confirms the user's phone number if set to true.",
                            "text": "Only a service role can modify.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 412,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 691,
                          "name": "role",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The `role` claim set in the user's access token JWT.",
                            "text": "When a user signs up, this role is set to `authenticated` by default. You should only modify the `role` if you need to provision several levels of admin access that have different permissions on individual columns in your database.\n\nSetting this role to `service_role` is not recommended as it grants the user admin privileges.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 433,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 686,
                          "name": "user_metadata",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                            "text": "The `user_metadata` should be a JSON object that includes user-specific info, such as their first and last name.\n\nNote: When using the GoTrueAdminApi and wanting to modify a user's metadata,\nthis attribute is used instead of UserAttributes data.\n\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 388,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            687,
                            690,
                            694,
                            688,
                            693,
                            692,
                            695,
                            689,
                            691,
                            686
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 377,
                          "character": 17
                        }
                      ],
                      "extendedTypes": [
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 679,
                              "name": "UserAttributes"
                            },
                            {
                              "type": "literal",
                              "value": "data"
                            }
                          ],
                          "qualifiedName": "Omit",
                          "package": "typescript",
                          "name": "Omit"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 607,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 68,
          "name": "deleteUser",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 268,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 69,
              "name": "deleteUser",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Delete a user. Requires a `service_role` key."
              },
              "parameters": [
                {
                  "id": 70,
                  "name": "id",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The user id you want to remove."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 71,
                  "name": "shouldSoftDelete",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "If true, then the user will be soft-deleted (setting `deleted_at` to the current timestamp and disabling their account while preserving their data) from the auth schema.\nDefaults to false for backward compatibility.\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "defaultValue": "false"
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 607,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 41,
          "name": "generateLink",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 118,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 42,
              "name": "generateLink",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Generates email links and OTPs to be sent via a custom email provider."
              },
              "parameters": [
                {
                  "id": 43,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 855,
                    "name": "GenerateLinkParams",
                    "dereferenced": {
                      "id": 855,
                      "name": "GenerateLinkParams",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 733,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "id": 830,
                            "name": "GenerateSignupLinkParams",
                            "kind": 4194304,
                            "kindString": "Type alias",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 690,
                                "character": 12
                              }
                            ],
                            "type": {
                              "type": "reflection",
                              "declaration": {
                                "id": 831,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                  {
                                    "id": 833,
                                    "name": "email",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 692,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "id": 835,
                                    "name": "options",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {
                                      "isOptional": true
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 694,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 852,
                                          "name": "GenerateLinkOptions"
                                        },
                                        {
                                          "type": "union",
                                          "types": [
                                            {
                                              "type": "literal",
                                              "value": "data"
                                            },
                                            {
                                              "type": "literal",
                                              "value": "redirectTo"
                                            }
                                          ]
                                        }
                                      ],
                                      "qualifiedName": "Pick",
                                      "package": "typescript",
                                      "name": "Pick"
                                    }
                                  },
                                  {
                                    "id": 834,
                                    "name": "password",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 693,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "id": 832,
                                    "name": "type",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 691,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "literal",
                                      "value": "signup"
                                    }
                                  }
                                ],
                                "groups": [
                                  {
                                    "title": "Properties",
                                    "kind": 1024,
                                    "children": [
                                      833,
                                      835,
                                      834,
                                      832
                                    ]
                                  }
                                ],
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 690,
                                    "character": 39
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "id": 836,
                            "name": "GenerateInviteOrMagiclinkParams",
                            "kind": 4194304,
                            "kindString": "Type alias",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 697,
                                "character": 12
                              }
                            ],
                            "type": {
                              "type": "reflection",
                              "declaration": {
                                "id": 837,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                  {
                                    "id": 839,
                                    "name": "email",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "comment": {
                                      "shortText": "The user's email"
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 700,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "id": 840,
                                    "name": "options",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {
                                      "isOptional": true
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 701,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 852,
                                          "name": "GenerateLinkOptions"
                                        },
                                        {
                                          "type": "union",
                                          "types": [
                                            {
                                              "type": "literal",
                                              "value": "data"
                                            },
                                            {
                                              "type": "literal",
                                              "value": "redirectTo"
                                            }
                                          ]
                                        }
                                      ],
                                      "qualifiedName": "Pick",
                                      "package": "typescript",
                                      "name": "Pick"
                                    }
                                  },
                                  {
                                    "id": 838,
                                    "name": "type",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 698,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "union",
                                      "types": [
                                        {
                                          "type": "literal",
                                          "value": "invite"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "magiclink"
                                        }
                                      ]
                                    }
                                  }
                                ],
                                "groups": [
                                  {
                                    "title": "Properties",
                                    "kind": 1024,
                                    "children": [
                                      839,
                                      840,
                                      838
                                    ]
                                  }
                                ],
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 697,
                                    "character": 46
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "id": 841,
                            "name": "GenerateRecoveryLinkParams",
                            "kind": 4194304,
                            "kindString": "Type alias",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 704,
                                "character": 12
                              }
                            ],
                            "type": {
                              "type": "reflection",
                              "declaration": {
                                "id": 842,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                  {
                                    "id": 844,
                                    "name": "email",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "comment": {
                                      "shortText": "The user's email"
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 707,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "id": 845,
                                    "name": "options",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {
                                      "isOptional": true
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 708,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 852,
                                          "name": "GenerateLinkOptions"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "redirectTo"
                                        }
                                      ],
                                      "qualifiedName": "Pick",
                                      "package": "typescript",
                                      "name": "Pick"
                                    }
                                  },
                                  {
                                    "id": 843,
                                    "name": "type",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 705,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "literal",
                                      "value": "recovery"
                                    }
                                  }
                                ],
                                "groups": [
                                  {
                                    "title": "Properties",
                                    "kind": 1024,
                                    "children": [
                                      844,
                                      845,
                                      843
                                    ]
                                  }
                                ],
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 704,
                                    "character": 41
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "id": 846,
                            "name": "GenerateEmailChangeLinkParams",
                            "kind": 4194304,
                            "kindString": "Type alias",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 711,
                                "character": 12
                              }
                            ],
                            "type": {
                              "type": "reflection",
                              "declaration": {
                                "id": 847,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                  {
                                    "id": 849,
                                    "name": "email",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "comment": {
                                      "shortText": "The user's email"
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 714,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "id": 850,
                                    "name": "newEmail",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "comment": {
                                      "shortText": "The user's new email. Only required if type is 'email_change_current' or 'email_change_new'."
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 718,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "id": 851,
                                    "name": "options",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {
                                      "isOptional": true
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 719,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 852,
                                          "name": "GenerateLinkOptions"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "redirectTo"
                                        }
                                      ],
                                      "qualifiedName": "Pick",
                                      "package": "typescript",
                                      "name": "Pick"
                                    }
                                  },
                                  {
                                    "id": 848,
                                    "name": "type",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 712,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "union",
                                      "types": [
                                        {
                                          "type": "literal",
                                          "value": "email_change_current"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "email_change_new"
                                        }
                                      ]
                                    }
                                  }
                                ],
                                "groups": [
                                  {
                                    "title": "Properties",
                                    "kind": 1024,
                                    "children": [
                                      849,
                                      850,
                                      851,
                                      848
                                    ]
                                  }
                                ],
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 711,
                                    "character": 44
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 856,
                    "name": "GenerateLinkResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 61,
          "name": "getUserById",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 221,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 62,
              "name": "getUserById",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Get user by id."
              },
              "parameters": [
                {
                  "id": 63,
                  "name": "uid",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's unique identifier\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 607,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 34,
          "name": "inviteUserByEmail",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 85,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 35,
              "name": "inviteUserByEmail",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Sends an invite link to an email address."
              },
              "parameters": [
                {
                  "id": 36,
                  "name": "email",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The email address of the user."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 37,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Additional options to be included when inviting.\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 38,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 39,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store additional metadata about the user. This maps to the `auth.users.user_metadata` column."
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 89,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        },
                        {
                          "id": 40,
                          "name": "redirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The URL which will be appended to the email link sent to the user's email address. Once clicked the user will end up on this URL."
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 92,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            39,
                            40
                          ]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 607,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 47,
          "name": "listUsers",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 174,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 48,
              "name": "listUsers",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Get a list of users.",
                "text": "This function should only be called on a server. Never expose your `service_role` key in the browser."
              },
              "parameters": [
                {
                  "id": 49,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 1039,
                    "name": "PageParams",
                    "dereferenced": {
                      "id": 1039,
                      "name": "PageParams",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1121,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 1040,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1041,
                              "name": "page",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The page number"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1123,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "number"
                              }
                            },
                            {
                              "id": 1042,
                              "name": "perPage",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Number of items returned per page"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1125,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "number"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                1041,
                                1042
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1121,
                              "character": 25
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 50,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 51,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueAdminApi.ts",
                                  "line": 177,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intersection",
                                "types": [
                                  {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 52,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 54,
                                          "name": "aud",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/GoTrueAdminApi.ts",
                                              "line": 177,
                                              "character": 31
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 53,
                                          "name": "users",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/GoTrueAdminApi.ts",
                                              "line": 177,
                                              "character": 16
                                            }
                                          ],
                                          "type": {
                                            "type": "array",
                                            "elementType": {
                                              "type": "reference",
                                              "id": 656,
                                              "name": "User"
                                            }
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [
                                            54,
                                            53
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "reference",
                                    "id": 1032,
                                    "name": "Pagination"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 55,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueAdminApi.ts",
                                  "line": 177,
                                  "character": 59
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                51,
                                55
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 56,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 57,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueAdminApi.ts",
                                  "line": 178,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 58,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 59,
                                      "name": "users",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueAdminApi.ts",
                                          "line": 178,
                                          "character": 16
                                        }
                                      ],
                                      "type": {
                                        "type": "tuple"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        59
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 60,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueAdminApi.ts",
                                  "line": 178,
                                  "character": 29
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 1058,
                                "name": "AuthError"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                57,
                                60
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 27,
          "name": "signOut",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 60,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 28,
              "name": "signOut",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Removes a logged-in session."
              },
              "parameters": [
                {
                  "id": 29,
                  "name": "jwt",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "A valid, logged-in JWT."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 30,
                  "name": "scope",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The logout sope.\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "global"
                      },
                      {
                        "type": "literal",
                        "value": "local"
                      },
                      {
                        "type": "literal",
                        "value": "others"
                      }
                    ]
                  },
                  "defaultValue": "'global'"
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 31,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 32,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 63,
                              "character": 15
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 33,
                          "name": "error",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 63,
                              "character": 27
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "reference",
                                "id": 1058,
                                "name": "AuthError"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            32,
                            33
                          ]
                        }
                      ]
                    }
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 64,
          "name": "updateUserById",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 243,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 65,
              "name": "updateUserById",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Updates the user data."
              },
              "parameters": [
                {
                  "id": 66,
                  "name": "uid",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 67,
                  "name": "attributes",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The data you want to update.\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 685,
                    "name": "AdminUserAttributes",
                    "dereferenced": {
                      "id": 685,
                      "name": "AdminUserAttributes",
                      "kind": 256,
                      "kindString": "Interface",
                      "flags": {},
                      "children": [
                        {
                          "id": 687,
                          "name": "app_metadata",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's application specific metadata. This maps to the `auth.users.app_metadata` column.",
                            "text": "Only a service role can modify.\n\nThe `app_metadata` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\naccess control information.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 398,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        },
                        {
                          "id": 690,
                          "name": "ban_duration",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Determines how long a user is banned for.",
                            "text": "The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n\nFor example, some possible durations include: '300ms', '2h45m'.\n\nSetting the ban duration to 'none' lifts the ban on the user.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 424,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 694,
                          "name": "email",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The user's email."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 349,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "inheritedFrom": {
                            "type": "reference",
                            "name": "Omit.email"
                          }
                        },
                        {
                          "id": 688,
                          "name": "email_confirm",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Confirms the user's email address if set to true.",
                            "text": "Only a service role can modify.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 405,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 693,
                          "name": "nonce",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
                            "text": "Call reauthenticate() to obtain the nonce first.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 366,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "inheritedFrom": {
                            "type": "reference",
                            "name": "Omit.nonce"
                          }
                        },
                        {
                          "id": 692,
                          "name": "password",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The user's password."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 359,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "inheritedFrom": {
                            "type": "reference",
                            "name": "Omit.password"
                          }
                        },
                        {
                          "id": 695,
                          "name": "phone",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The user's phone."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 354,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "inheritedFrom": {
                            "type": "reference",
                            "name": "Omit.phone"
                          }
                        },
                        {
                          "id": 689,
                          "name": "phone_confirm",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Confirms the user's phone number if set to true.",
                            "text": "Only a service role can modify.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 412,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 691,
                          "name": "role",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The `role` claim set in the user's access token JWT.",
                            "text": "When a user signs up, this role is set to `authenticated` by default. You should only modify the `role` if you need to provision several levels of admin access that have different permissions on individual columns in your database.\n\nSetting this role to `service_role` is not recommended as it grants the user admin privileges.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 433,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 686,
                          "name": "user_metadata",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                            "text": "The `user_metadata` should be a JSON object that includes user-specific info, such as their first and last name.\n\nNote: When using the GoTrueAdminApi and wanting to modify a user's metadata,\nthis attribute is used instead of UserAttributes data.\n\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 388,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            687,
                            690,
                            694,
                            688,
                            693,
                            692,
                            695,
                            689,
                            691,
                            686
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 377,
                          "character": 17
                        }
                      ],
                      "extendedTypes": [
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 679,
                              "name": "UserAttributes"
                            },
                            {
                              "type": "literal",
                              "value": "data"
                            }
                          ],
                          "qualifiedName": "Omit",
                          "package": "typescript",
                          "name": "Omit"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 607,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            2
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            16
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            44,
            68,
            41,
            61,
            34,
            47,
            27,
            64
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/GoTrueAdminApi.ts",
          "line": 25,
          "character": 21
        }
      ]
    },
    {
      "id": 78,
      "name": "GoTrueClient",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 80,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 175,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 81,
              "name": "new GoTrueClient",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "comment": {
                "shortText": "Create a new client for use in the browser."
              },
              "parameters": [
                {
                  "id": 82,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 490,
                    "name": "GoTrueClientOptions",
                    "dereferenced": {
                      "id": 490,
                      "name": "GoTrueClientOptions",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 56,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 491,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 499,
                              "name": "autoRefreshToken",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 66,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 504,
                              "name": "debug",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 76,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  },
                                  {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 505,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 76,
                                          "character": 21
                                        }
                                      ],
                                      "signatures": [
                                        {
                                          "id": 506,
                                          "name": "__type",
                                          "kind": 4096,
                                          "kindString": "Call signature",
                                          "flags": {},
                                          "parameters": [
                                            {
                                              "id": 507,
                                              "name": "message",
                                              "kind": 32768,
                                              "kindString": "Parameter",
                                              "flags": {},
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "id": 508,
                                              "name": "args",
                                              "kind": 32768,
                                              "kindString": "Parameter",
                                              "flags": {
                                                "isRest": true
                                              },
                                              "type": {
                                                "type": "array",
                                                "elementType": {
                                                  "type": "intrinsic",
                                                  "name": "any"
                                                }
                                              }
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "void"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "id": 498,
                              "name": "detectSessionInUrl",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 64,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 502,
                              "name": "fetch",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 72,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "name": "Fetch"
                              }
                            },
                            {
                              "id": 503,
                              "name": "flowType",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 74,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 759,
                                "name": "AuthFlowType",
                                "dereferenced": {
                                  "id": 759,
                                  "name": "AuthFlowType",
                                  "kind": 4194304,
                                  "kindString": "Type alias",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 565,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": "implicit"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "pkce"
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            {
                              "id": 493,
                              "name": "headers",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 60,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 494,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 60,
                                      "character": 12
                                    }
                                  ],
                                  "indexSignature": {
                                    "id": 495,
                                    "name": "__index",
                                    "kind": 8192,
                                    "kindString": "Index signature",
                                    "flags": {},
                                    "parameters": [
                                      {
                                        "id": 496,
                                        "name": "key",
                                        "kind": 32768,
                                        "flags": {},
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "id": 509,
                              "name": "lock",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Provide your own locking mechanism based on the environment. By default no locking is done at this time.",
                                "tags": [
                                  {
                                    "tag": "experimental",
                                    "text": "\n"
                                  }
                                ]
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 82,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 481,
                                "name": "LockFunc",
                                "dereferenced": {
                                  "id": 481,
                                  "name": "LockFunc",
                                  "kind": 4194304,
                                  "kindString": "Type alias",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 54,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 482,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 54,
                                          "character": 23
                                        }
                                      ],
                                      "signatures": [
                                        {
                                          "id": 483,
                                          "name": "__type",
                                          "kind": 4096,
                                          "kindString": "Call signature",
                                          "flags": {},
                                          "comment": {
                                            "shortText": "Provide your own global lock implementation instead of the default\nimplementation. The function should acquire a lock for the duration of the\n`fn` async function, such that no other client instances will be able to\nhold it at the same time.",
                                            "tags": [
                                              {
                                                "tag": "experimental",
                                                "text": "\n"
                                              }
                                            ]
                                          },
                                          "typeParameter": [
                                            {
                                              "id": 489,
                                              "name": "R",
                                              "kind": 131072,
                                              "kindString": "Type parameter",
                                              "flags": {}
                                            }
                                          ],
                                          "parameters": [
                                            {
                                              "id": 484,
                                              "name": "name",
                                              "kind": 32768,
                                              "kindString": "Parameter",
                                              "flags": {},
                                              "comment": {
                                                "shortText": "Name of the lock to be acquired."
                                              },
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "id": 485,
                                              "name": "acquireTimeout",
                                              "kind": 32768,
                                              "kindString": "Parameter",
                                              "flags": {},
                                              "comment": {
                                                "shortText": "If negative, no timeout should occur. If positive it\n                      should throw an Error with an `isAcquireTimeout`\n                      property set to true if the operation fails to be\n                      acquired after this much time (ms)."
                                              },
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "number"
                                              }
                                            },
                                            {
                                              "id": 486,
                                              "name": "fn",
                                              "kind": 32768,
                                              "kindString": "Parameter",
                                              "flags": {},
                                              "comment": {
                                                "shortText": "The operation to execute when the lock is acquired.\n"
                                              },
                                              "type": {
                                                "type": "reflection",
                                                "declaration": {
                                                  "id": 487,
                                                  "name": "__type",
                                                  "kind": 65536,
                                                  "kindString": "Type literal",
                                                  "flags": {},
                                                  "sources": [
                                                    {
                                                      "fileName": "src/lib/types.ts",
                                                      "line": 54,
                                                      "character": 69
                                                    }
                                                  ],
                                                  "signatures": [
                                                    {
                                                      "id": 488,
                                                      "name": "__type",
                                                      "kind": 4096,
                                                      "kindString": "Call signature",
                                                      "flags": {},
                                                      "type": {
                                                        "type": "reference",
                                                        "typeArguments": [
                                                          {
                                                            "type": "reference",
                                                            "id": 489,
                                                            "name": "R"
                                                          }
                                                        ],
                                                        "qualifiedName": "Promise",
                                                        "package": "typescript",
                                                        "name": "Promise"
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ],
                                          "type": {
                                            "type": "reference",
                                            "typeArguments": [
                                              {
                                                "type": "reference",
                                                "id": 489,
                                                "name": "R"
                                              }
                                            ],
                                            "qualifiedName": "Promise",
                                            "package": "typescript",
                                            "name": "Promise"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "id": 500,
                              "name": "persistSession",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 68,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 501,
                              "name": "storage",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 70,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 1019,
                                "name": "SupportedStorage",
                                "dereferenced": {
                                  "id": 1019,
                                  "name": "SupportedStorage",
                                  "kind": 4194304,
                                  "kindString": "Type alias",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1089,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "intersection",
                                    "types": [
                                      {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "typeArguments": [
                                              {
                                                "type": "reference",
                                                "qualifiedName": "Storage",
                                                "package": "typescript",
                                                "name": "Storage"
                                              },
                                              {
                                                "type": "union",
                                                "types": [
                                                  {
                                                    "type": "literal",
                                                    "value": "getItem"
                                                  },
                                                  {
                                                    "type": "literal",
                                                    "value": "setItem"
                                                  },
                                                  {
                                                    "type": "literal",
                                                    "value": "removeItem"
                                                  }
                                                ]
                                              }
                                            ],
                                            "qualifiedName": "Pick",
                                            "package": "typescript",
                                            "name": "Pick"
                                          }
                                        ],
                                        "name": "PromisifyMethods"
                                      },
                                      {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 1020,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 1021,
                                              "name": "isServer",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "If set to `true` signals to the library that the storage medium is used\non a server and the values may not be authentic, such as reading from\nrequest cookies. Implementations should not set this to true if the client\nis used on a server that reads storage information from authenticated\nsources, such as a secure database or file."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 1099,
                                                  "character": 2
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [
                                                1021
                                              ]
                                            }
                                          ],
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 1091,
                                              "character": 4
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            {
                              "id": 497,
                              "name": "storageKey",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 62,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 492,
                              "name": "url",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 58,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                499,
                                504,
                                498,
                                502,
                                503,
                                493,
                                509,
                                500,
                                501,
                                497,
                                492
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 56,
                              "character": 34
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 78,
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 84,
          "name": "admin",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Namespace for the GoTrue admin methods.\nThese methods should only be used in a trusted server-side environment."
          },
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 125,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 1,
            "name": "default",
            "dereferenced": {
              "id": 1,
              "name": "GoTrueAdminApi",
              "kind": 128,
              "kindString": "Class",
              "flags": {},
              "children": [
                {
                  "id": 2,
                  "name": "constructor",
                  "kind": 512,
                  "kindString": "Constructor",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/GoTrueAdminApi.ts",
                      "line": 35,
                      "character": 2
                    }
                  ],
                  "signatures": [
                    {
                      "id": 3,
                      "name": "new GoTrueAdminApi",
                      "kind": 16384,
                      "kindString": "Constructor signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 4,
                          "name": "__namedParameters",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 5,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 11,
                                  "name": "fetch",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueAdminApi.ts",
                                      "line": 44,
                                      "character": 4
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 12,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "signatures": [
                                        {
                                          "id": 13,
                                          "name": "__type",
                                          "kind": 4096,
                                          "kindString": "Call signature",
                                          "flags": {},
                                          "parameters": [
                                            {
                                              "id": 14,
                                              "name": "input",
                                              "kind": 32768,
                                              "kindString": "Parameter",
                                              "flags": {},
                                              "type": {
                                                "type": "union",
                                                "types": [
                                                  {
                                                    "type": "reference",
                                                    "qualifiedName": "RequestInfo",
                                                    "package": "typescript",
                                                    "name": "RequestInfo"
                                                  },
                                                  {
                                                    "type": "reference",
                                                    "qualifiedName": "URL",
                                                    "package": "typescript",
                                                    "name": "URL"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "id": 15,
                                              "name": "init",
                                              "kind": 32768,
                                              "kindString": "Parameter",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "type": {
                                                "type": "reference",
                                                "qualifiedName": "RequestInit",
                                                "package": "typescript",
                                                "name": "RequestInit"
                                              }
                                            }
                                          ],
                                          "type": {
                                            "type": "reference",
                                            "typeArguments": [
                                              {
                                                "type": "reference",
                                                "qualifiedName": "Response",
                                                "package": "typescript",
                                                "name": "Response"
                                              }
                                            ],
                                            "qualifiedName": "Promise",
                                            "package": "typescript",
                                            "name": "Promise"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 7,
                                  "name": "headers",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueAdminApi.ts",
                                      "line": 41,
                                      "character": 4
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 8,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "indexSignature": {
                                        "id": 9,
                                        "name": "__index",
                                        "kind": 8192,
                                        "kindString": "Index signature",
                                        "flags": {},
                                        "parameters": [
                                          {
                                            "id": 10,
                                            "name": "key",
                                            "kind": 32768,
                                            "flags": {},
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "id": 6,
                                  "name": "url",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueAdminApi.ts",
                                      "line": 40,
                                      "character": 4
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    11,
                                    7,
                                    6
                                  ]
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1,
                        "name": "default"
                      }
                    }
                  ]
                },
                {
                  "id": 16,
                  "name": "mfa",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "Contains all MFA administration methods."
                  },
                  "sources": [
                    {
                      "fileName": "src/GoTrueAdminApi.ts",
                      "line": 27,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1012,
                    "name": "GoTrueAdminMFAApi",
                    "dereferenced": {
                      "id": 1012,
                      "name": "GoTrueAdminMFAApi",
                      "kind": 256,
                      "kindString": "Interface",
                      "flags": {},
                      "comment": {
                        "shortText": "Contains the full multi-factor authentication administration API.",
                        "tags": [
                          {
                            "tag": "expermental",
                            "text": "\n"
                          }
                        ]
                      },
                      "children": [
                        {
                          "id": 1016,
                          "name": "deleteFactor",
                          "kind": 2048,
                          "kindString": "Method",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 1017,
                              "name": "deleteFactor",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "comment": {
                                "shortText": "Deletes a factor on a user. This will log the user out of all active\nsessions if the deleted factor was verified.",
                                "tags": [
                                  {
                                    "tag": "see",
                                    "text": "{@link GoTrueMFAApi#unenroll}\n"
                                  },
                                  {
                                    "tag": "expermental",
                                    "text": "\n"
                                  }
                                ]
                              },
                              "parameters": [
                                {
                                  "id": 1018,
                                  "name": "params",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 996,
                                    "name": "AuthMFAAdminDeleteFactorParams",
                                    "dereferenced": {
                                      "id": 996,
                                      "name": "AuthMFAAdminDeleteFactorParams",
                                      "kind": 4194304,
                                      "kindString": "Type alias",
                                      "flags": {},
                                      "comment": {
                                        "tags": [
                                          {
                                            "tag": "expermental",
                                            "text": "\n"
                                          }
                                        ]
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 1028,
                                          "character": 12
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 997,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 998,
                                              "name": "id",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "comment": {
                                                "shortText": "ID of the MFA factor to delete."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 1030,
                                                  "character": 2
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "id": 999,
                                              "name": "userId",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "comment": {
                                                "shortText": "ID of the user whose factor is being deleted."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 1033,
                                                  "character": 2
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [
                                                998,
                                                999
                                              ]
                                            }
                                          ],
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 1028,
                                              "character": 45
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 987,
                                    "name": "AuthMFAAdminDeleteFactorResponse"
                                  }
                                ],
                                "qualifiedName": "Promise",
                                "package": "typescript",
                                "name": "Promise"
                              }
                            }
                          ]
                        },
                        {
                          "id": 1013,
                          "name": "listFactors",
                          "kind": 2048,
                          "kindString": "Method",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 1014,
                              "name": "listFactors",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "comment": {
                                "shortText": "Lists all factors associated to a user."
                              },
                              "parameters": [
                                {
                                  "id": 1015,
                                  "name": "params",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 1009,
                                    "name": "AuthMFAAdminListFactorsParams",
                                    "dereferenced": {
                                      "id": 1009,
                                      "name": "AuthMFAAdminListFactorsParams",
                                      "kind": 4194304,
                                      "kindString": "Type alias",
                                      "flags": {},
                                      "comment": {
                                        "tags": [
                                          {
                                            "tag": "expermental",
                                            "text": "\n"
                                          }
                                        ]
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 1052,
                                          "character": 12
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 1010,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 1011,
                                              "name": "userId",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "comment": {
                                                "shortText": "ID of the user."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 1054,
                                                  "character": 2
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [
                                                1011
                                              ]
                                            }
                                          ],
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 1052,
                                              "character": 44
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 1000,
                                    "name": "AuthMFAAdminListFactorsResponse"
                                  }
                                ],
                                "qualifiedName": "Promise",
                                "package": "typescript",
                                "name": "Promise"
                              }
                            }
                          ]
                        }
                      ],
                      "groups": [
                        {
                          "title": "Methods",
                          "kind": 2048,
                          "children": [
                            1016,
                            1013
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1062,
                          "character": 17
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 44,
                  "name": "createUser",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/GoTrueAdminApi.ts",
                      "line": 152,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 45,
                      "name": "createUser",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Creates a new user.\nThis function should only be called on a server. Never expose your `service_role` key in the browser."
                      },
                      "parameters": [
                        {
                          "id": 46,
                          "name": "attributes",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 685,
                            "name": "AdminUserAttributes",
                            "dereferenced": {
                              "id": 685,
                              "name": "AdminUserAttributes",
                              "kind": 256,
                              "kindString": "Interface",
                              "flags": {},
                              "children": [
                                {
                                  "id": 687,
                                  "name": "app_metadata",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "A custom data object to store the user's application specific metadata. This maps to the `auth.users.app_metadata` column.",
                                    "text": "Only a service role can modify.\n\nThe `app_metadata` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\naccess control information.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 398,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "object"
                                  }
                                },
                                {
                                  "id": 690,
                                  "name": "ban_duration",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Determines how long a user is banned for.",
                                    "text": "The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n\nFor example, some possible durations include: '300ms', '2h45m'.\n\nSetting the ban duration to 'none' lifts the ban on the user.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 424,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 694,
                                  "name": "email",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The user's email."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 349,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "inheritedFrom": {
                                    "type": "reference",
                                    "name": "Omit.email"
                                  }
                                },
                                {
                                  "id": 688,
                                  "name": "email_confirm",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Confirms the user's email address if set to true.",
                                    "text": "Only a service role can modify.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 405,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                },
                                {
                                  "id": 693,
                                  "name": "nonce",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
                                    "text": "Call reauthenticate() to obtain the nonce first.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 366,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "inheritedFrom": {
                                    "type": "reference",
                                    "name": "Omit.nonce"
                                  }
                                },
                                {
                                  "id": 692,
                                  "name": "password",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The user's password."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 359,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "inheritedFrom": {
                                    "type": "reference",
                                    "name": "Omit.password"
                                  }
                                },
                                {
                                  "id": 695,
                                  "name": "phone",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The user's phone."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 354,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "inheritedFrom": {
                                    "type": "reference",
                                    "name": "Omit.phone"
                                  }
                                },
                                {
                                  "id": 689,
                                  "name": "phone_confirm",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Confirms the user's phone number if set to true.",
                                    "text": "Only a service role can modify.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 412,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                },
                                {
                                  "id": 691,
                                  "name": "role",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The `role` claim set in the user's access token JWT.",
                                    "text": "When a user signs up, this role is set to `authenticated` by default. You should only modify the `role` if you need to provision several levels of admin access that have different permissions on individual columns in your database.\n\nSetting this role to `service_role` is not recommended as it grants the user admin privileges.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 433,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 686,
                                  "name": "user_metadata",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                                    "text": "The `user_metadata` should be a JSON object that includes user-specific info, such as their first and last name.\n\nNote: When using the GoTrueAdminApi and wanting to modify a user's metadata,\nthis attribute is used instead of UserAttributes data.\n\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 388,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "object"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    687,
                                    690,
                                    694,
                                    688,
                                    693,
                                    692,
                                    695,
                                    689,
                                    691,
                                    686
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 377,
                                  "character": 17
                                }
                              ],
                              "extendedTypes": [
                                {
                                  "type": "reference",
                                  "typeArguments": [
                                    {
                                      "type": "reference",
                                      "id": 679,
                                      "name": "UserAttributes"
                                    },
                                    {
                                      "type": "literal",
                                      "value": "data"
                                    }
                                  ],
                                  "qualifiedName": "Omit",
                                  "package": "typescript",
                                  "name": "Omit"
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 607,
                            "name": "UserResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 68,
                  "name": "deleteUser",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/GoTrueAdminApi.ts",
                      "line": 268,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 69,
                      "name": "deleteUser",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Delete a user. Requires a `service_role` key."
                      },
                      "parameters": [
                        {
                          "id": 70,
                          "name": "id",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The user id you want to remove."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 71,
                          "name": "shouldSoftDelete",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "If true, then the user will be soft-deleted (setting `deleted_at` to the current timestamp and disabling their account while preserving their data) from the auth schema.\nDefaults to false for backward compatibility.\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          "defaultValue": "false"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 607,
                            "name": "UserResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 41,
                  "name": "generateLink",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/GoTrueAdminApi.ts",
                      "line": 118,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 42,
                      "name": "generateLink",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Generates email links and OTPs to be sent via a custom email provider."
                      },
                      "parameters": [
                        {
                          "id": 43,
                          "name": "params",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 855,
                            "name": "GenerateLinkParams",
                            "dereferenced": {
                              "id": 855,
                              "name": "GenerateLinkParams",
                              "kind": 4194304,
                              "kindString": "Type alias",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 733,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "id": 830,
                                    "name": "GenerateSignupLinkParams",
                                    "kind": 4194304,
                                    "kindString": "Type alias",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 690,
                                        "character": 12
                                      }
                                    ],
                                    "type": {
                                      "type": "reflection",
                                      "declaration": {
                                        "id": 831,
                                        "name": "__type",
                                        "kind": 65536,
                                        "kindString": "Type literal",
                                        "flags": {},
                                        "children": [
                                          {
                                            "id": 833,
                                            "name": "email",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 692,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "id": 835,
                                            "name": "options",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {
                                              "isOptional": true
                                            },
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 694,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "reference",
                                              "typeArguments": [
                                                {
                                                  "type": "reference",
                                                  "id": 852,
                                                  "name": "GenerateLinkOptions"
                                                },
                                                {
                                                  "type": "union",
                                                  "types": [
                                                    {
                                                      "type": "literal",
                                                      "value": "data"
                                                    },
                                                    {
                                                      "type": "literal",
                                                      "value": "redirectTo"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "qualifiedName": "Pick",
                                              "package": "typescript",
                                              "name": "Pick"
                                            }
                                          },
                                          {
                                            "id": 834,
                                            "name": "password",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 693,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "id": 832,
                                            "name": "type",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 691,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "literal",
                                              "value": "signup"
                                            }
                                          }
                                        ],
                                        "groups": [
                                          {
                                            "title": "Properties",
                                            "kind": 1024,
                                            "children": [
                                              833,
                                              835,
                                              834,
                                              832
                                            ]
                                          }
                                        ],
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 690,
                                            "character": 39
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "id": 836,
                                    "name": "GenerateInviteOrMagiclinkParams",
                                    "kind": 4194304,
                                    "kindString": "Type alias",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 697,
                                        "character": 12
                                      }
                                    ],
                                    "type": {
                                      "type": "reflection",
                                      "declaration": {
                                        "id": 837,
                                        "name": "__type",
                                        "kind": 65536,
                                        "kindString": "Type literal",
                                        "flags": {},
                                        "children": [
                                          {
                                            "id": 839,
                                            "name": "email",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "comment": {
                                              "shortText": "The user's email"
                                            },
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 700,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "id": 840,
                                            "name": "options",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {
                                              "isOptional": true
                                            },
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 701,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "reference",
                                              "typeArguments": [
                                                {
                                                  "type": "reference",
                                                  "id": 852,
                                                  "name": "GenerateLinkOptions"
                                                },
                                                {
                                                  "type": "union",
                                                  "types": [
                                                    {
                                                      "type": "literal",
                                                      "value": "data"
                                                    },
                                                    {
                                                      "type": "literal",
                                                      "value": "redirectTo"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "qualifiedName": "Pick",
                                              "package": "typescript",
                                              "name": "Pick"
                                            }
                                          },
                                          {
                                            "id": 838,
                                            "name": "type",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 698,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "union",
                                              "types": [
                                                {
                                                  "type": "literal",
                                                  "value": "invite"
                                                },
                                                {
                                                  "type": "literal",
                                                  "value": "magiclink"
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "groups": [
                                          {
                                            "title": "Properties",
                                            "kind": 1024,
                                            "children": [
                                              839,
                                              840,
                                              838
                                            ]
                                          }
                                        ],
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 697,
                                            "character": 46
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "id": 841,
                                    "name": "GenerateRecoveryLinkParams",
                                    "kind": 4194304,
                                    "kindString": "Type alias",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 704,
                                        "character": 12
                                      }
                                    ],
                                    "type": {
                                      "type": "reflection",
                                      "declaration": {
                                        "id": 842,
                                        "name": "__type",
                                        "kind": 65536,
                                        "kindString": "Type literal",
                                        "flags": {},
                                        "children": [
                                          {
                                            "id": 844,
                                            "name": "email",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "comment": {
                                              "shortText": "The user's email"
                                            },
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 707,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "id": 845,
                                            "name": "options",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {
                                              "isOptional": true
                                            },
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 708,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "reference",
                                              "typeArguments": [
                                                {
                                                  "type": "reference",
                                                  "id": 852,
                                                  "name": "GenerateLinkOptions"
                                                },
                                                {
                                                  "type": "literal",
                                                  "value": "redirectTo"
                                                }
                                              ],
                                              "qualifiedName": "Pick",
                                              "package": "typescript",
                                              "name": "Pick"
                                            }
                                          },
                                          {
                                            "id": 843,
                                            "name": "type",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 705,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "literal",
                                              "value": "recovery"
                                            }
                                          }
                                        ],
                                        "groups": [
                                          {
                                            "title": "Properties",
                                            "kind": 1024,
                                            "children": [
                                              844,
                                              845,
                                              843
                                            ]
                                          }
                                        ],
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 704,
                                            "character": 41
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "id": 846,
                                    "name": "GenerateEmailChangeLinkParams",
                                    "kind": 4194304,
                                    "kindString": "Type alias",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 711,
                                        "character": 12
                                      }
                                    ],
                                    "type": {
                                      "type": "reflection",
                                      "declaration": {
                                        "id": 847,
                                        "name": "__type",
                                        "kind": 65536,
                                        "kindString": "Type literal",
                                        "flags": {},
                                        "children": [
                                          {
                                            "id": 849,
                                            "name": "email",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "comment": {
                                              "shortText": "The user's email"
                                            },
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 714,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "id": 850,
                                            "name": "newEmail",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "comment": {
                                              "shortText": "The user's new email. Only required if type is 'email_change_current' or 'email_change_new'."
                                            },
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 718,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "id": 851,
                                            "name": "options",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {
                                              "isOptional": true
                                            },
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 719,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "reference",
                                              "typeArguments": [
                                                {
                                                  "type": "reference",
                                                  "id": 852,
                                                  "name": "GenerateLinkOptions"
                                                },
                                                {
                                                  "type": "literal",
                                                  "value": "redirectTo"
                                                }
                                              ],
                                              "qualifiedName": "Pick",
                                              "package": "typescript",
                                              "name": "Pick"
                                            }
                                          },
                                          {
                                            "id": 848,
                                            "name": "type",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 712,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "union",
                                              "types": [
                                                {
                                                  "type": "literal",
                                                  "value": "email_change_current"
                                                },
                                                {
                                                  "type": "literal",
                                                  "value": "email_change_new"
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "groups": [
                                          {
                                            "title": "Properties",
                                            "kind": 1024,
                                            "children": [
                                              849,
                                              850,
                                              851,
                                              848
                                            ]
                                          }
                                        ],
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 711,
                                            "character": 44
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 856,
                            "name": "GenerateLinkResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 61,
                  "name": "getUserById",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/GoTrueAdminApi.ts",
                      "line": 221,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 62,
                      "name": "getUserById",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Get user by id."
                      },
                      "parameters": [
                        {
                          "id": 63,
                          "name": "uid",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The user's unique identifier\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 607,
                            "name": "UserResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 34,
                  "name": "inviteUserByEmail",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/GoTrueAdminApi.ts",
                      "line": 85,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 35,
                      "name": "inviteUserByEmail",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Sends an invite link to an email address."
                      },
                      "parameters": [
                        {
                          "id": 36,
                          "name": "email",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The email address of the user."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 37,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "Additional options to be included when inviting.\n"
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 38,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 39,
                                  "name": "data",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "A custom data object to store additional metadata about the user. This maps to the `auth.users.user_metadata` column."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueAdminApi.ts",
                                      "line": 89,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "object"
                                  }
                                },
                                {
                                  "id": 40,
                                  "name": "redirectTo",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The URL which will be appended to the email link sent to the user's email address. Once clicked the user will end up on this URL."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueAdminApi.ts",
                                      "line": 92,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    39,
                                    40
                                  ]
                                }
                              ]
                            }
                          },
                          "defaultValue": "{}"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 607,
                            "name": "UserResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 47,
                  "name": "listUsers",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/GoTrueAdminApi.ts",
                      "line": 174,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 48,
                      "name": "listUsers",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Get a list of users.",
                        "text": "This function should only be called on a server. Never expose your `service_role` key in the browser."
                      },
                      "parameters": [
                        {
                          "id": 49,
                          "name": "params",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n"
                          },
                          "type": {
                            "type": "reference",
                            "id": 1039,
                            "name": "PageParams",
                            "dereferenced": {
                              "id": 1039,
                              "name": "PageParams",
                              "kind": 4194304,
                              "kindString": "Type alias",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1121,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 1040,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 1041,
                                      "name": "page",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "The page number"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 1123,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    },
                                    {
                                      "id": 1042,
                                      "name": "perPage",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Number of items returned per page"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 1125,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        1041,
                                        1042
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1121,
                                      "character": 25
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 50,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 51,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueAdminApi.ts",
                                          "line": 177,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "intersection",
                                        "types": [
                                          {
                                            "type": "reflection",
                                            "declaration": {
                                              "id": 52,
                                              "name": "__type",
                                              "kind": 65536,
                                              "kindString": "Type literal",
                                              "flags": {},
                                              "children": [
                                                {
                                                  "id": 54,
                                                  "name": "aud",
                                                  "kind": 1024,
                                                  "kindString": "Property",
                                                  "flags": {},
                                                  "sources": [
                                                    {
                                                      "fileName": "src/GoTrueAdminApi.ts",
                                                      "line": 177,
                                                      "character": 31
                                                    }
                                                  ],
                                                  "type": {
                                                    "type": "intrinsic",
                                                    "name": "string"
                                                  }
                                                },
                                                {
                                                  "id": 53,
                                                  "name": "users",
                                                  "kind": 1024,
                                                  "kindString": "Property",
                                                  "flags": {},
                                                  "sources": [
                                                    {
                                                      "fileName": "src/GoTrueAdminApi.ts",
                                                      "line": 177,
                                                      "character": 16
                                                    }
                                                  ],
                                                  "type": {
                                                    "type": "array",
                                                    "elementType": {
                                                      "type": "reference",
                                                      "id": 656,
                                                      "name": "User"
                                                    }
                                                  }
                                                }
                                              ],
                                              "groups": [
                                                {
                                                  "title": "Properties",
                                                  "kind": 1024,
                                                  "children": [
                                                    54,
                                                    53
                                                  ]
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "reference",
                                            "id": 1032,
                                            "name": "Pagination"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "id": 55,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueAdminApi.ts",
                                          "line": 177,
                                          "character": 59
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        51,
                                        55
                                      ]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 56,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 57,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueAdminApi.ts",
                                          "line": 178,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 58,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 59,
                                              "name": "users",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/GoTrueAdminApi.ts",
                                                  "line": 178,
                                                  "character": 16
                                                }
                                              ],
                                              "type": {
                                                "type": "tuple"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [
                                                59
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 60,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueAdminApi.ts",
                                          "line": 178,
                                          "character": 29
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 1058,
                                        "name": "AuthError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        57,
                                        60
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 27,
                  "name": "signOut",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/GoTrueAdminApi.ts",
                      "line": 60,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 28,
                      "name": "signOut",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Removes a logged-in session."
                      },
                      "parameters": [
                        {
                          "id": 29,
                          "name": "jwt",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "A valid, logged-in JWT."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 30,
                          "name": "scope",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The logout sope.\n"
                          },
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "global"
                              },
                              {
                                "type": "literal",
                                "value": "local"
                              },
                              {
                                "type": "literal",
                                "value": "others"
                              }
                            ]
                          },
                          "defaultValue": "'global'"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 31,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 32,
                                  "name": "data",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueAdminApi.ts",
                                      "line": 63,
                                      "character": 15
                                    }
                                  ],
                                  "type": {
                                    "type": "literal",
                                    "value": null
                                  }
                                },
                                {
                                  "id": 33,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueAdminApi.ts",
                                      "line": 63,
                                      "character": 27
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "reference",
                                        "id": 1058,
                                        "name": "AuthError"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    32,
                                    33
                                  ]
                                }
                              ]
                            }
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 64,
                  "name": "updateUserById",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/GoTrueAdminApi.ts",
                      "line": 243,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 65,
                      "name": "updateUserById",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Updates the user data."
                      },
                      "parameters": [
                        {
                          "id": 66,
                          "name": "uid",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 67,
                          "name": "attributes",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The data you want to update.\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
                          },
                          "type": {
                            "type": "reference",
                            "id": 685,
                            "name": "AdminUserAttributes",
                            "dereferenced": {
                              "id": 685,
                              "name": "AdminUserAttributes",
                              "kind": 256,
                              "kindString": "Interface",
                              "flags": {},
                              "children": [
                                {
                                  "id": 687,
                                  "name": "app_metadata",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "A custom data object to store the user's application specific metadata. This maps to the `auth.users.app_metadata` column.",
                                    "text": "Only a service role can modify.\n\nThe `app_metadata` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\naccess control information.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 398,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "object"
                                  }
                                },
                                {
                                  "id": 690,
                                  "name": "ban_duration",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Determines how long a user is banned for.",
                                    "text": "The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n\nFor example, some possible durations include: '300ms', '2h45m'.\n\nSetting the ban duration to 'none' lifts the ban on the user.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 424,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 694,
                                  "name": "email",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The user's email."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 349,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "inheritedFrom": {
                                    "type": "reference",
                                    "name": "Omit.email"
                                  }
                                },
                                {
                                  "id": 688,
                                  "name": "email_confirm",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Confirms the user's email address if set to true.",
                                    "text": "Only a service role can modify.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 405,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                },
                                {
                                  "id": 693,
                                  "name": "nonce",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
                                    "text": "Call reauthenticate() to obtain the nonce first.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 366,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "inheritedFrom": {
                                    "type": "reference",
                                    "name": "Omit.nonce"
                                  }
                                },
                                {
                                  "id": 692,
                                  "name": "password",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The user's password."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 359,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "inheritedFrom": {
                                    "type": "reference",
                                    "name": "Omit.password"
                                  }
                                },
                                {
                                  "id": 695,
                                  "name": "phone",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The user's phone."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 354,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "inheritedFrom": {
                                    "type": "reference",
                                    "name": "Omit.phone"
                                  }
                                },
                                {
                                  "id": 689,
                                  "name": "phone_confirm",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Confirms the user's phone number if set to true.",
                                    "text": "Only a service role can modify.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 412,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                },
                                {
                                  "id": 691,
                                  "name": "role",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The `role` claim set in the user's access token JWT.",
                                    "text": "When a user signs up, this role is set to `authenticated` by default. You should only modify the `role` if you need to provision several levels of admin access that have different permissions on individual columns in your database.\n\nSetting this role to `service_role` is not recommended as it grants the user admin privileges.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 433,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 686,
                                  "name": "user_metadata",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                                    "text": "The `user_metadata` should be a JSON object that includes user-specific info, such as their first and last name.\n\nNote: When using the GoTrueAdminApi and wanting to modify a user's metadata,\nthis attribute is used instead of UserAttributes data.\n\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 388,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "object"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    687,
                                    690,
                                    694,
                                    688,
                                    693,
                                    692,
                                    695,
                                    689,
                                    691,
                                    686
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 377,
                                  "character": 17
                                }
                              ],
                              "extendedTypes": [
                                {
                                  "type": "reference",
                                  "typeArguments": [
                                    {
                                      "type": "reference",
                                      "id": 679,
                                      "name": "UserAttributes"
                                    },
                                    {
                                      "type": "literal",
                                      "value": "data"
                                    }
                                  ],
                                  "qualifiedName": "Omit",
                                  "package": "typescript",
                                  "name": "Omit"
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 607,
                            "name": "UserResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Constructors",
                  "kind": 512,
                  "children": [
                    2
                  ]
                },
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    16
                  ]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [
                    44,
                    68,
                    41,
                    61,
                    34,
                    47,
                    27,
                    64
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/GoTrueAdminApi.ts",
                  "line": 25,
                  "character": 21
                }
              ]
            }
          }
        },
        {
          "id": 85,
          "name": "mfa",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Namespace for the MFA methods."
          },
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 129,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 967,
            "name": "GoTrueMFAApi",
            "dereferenced": {
              "id": 967,
              "name": "GoTrueMFAApi",
              "kind": 256,
              "kindString": "Interface",
              "flags": {},
              "comment": {
                "shortText": "Contains the full multi-factor authentication API."
              },
              "children": [
                {
                  "id": 971,
                  "name": "challenge",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 972,
                      "name": "challenge",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Prepares a challenge used to verify that a user has access to a MFA\nfactor."
                      },
                      "parameters": [
                        {
                          "id": 973,
                          "name": "params",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 890,
                            "name": "MFAChallengeParams",
                            "dereferenced": {
                              "id": 890,
                              "name": "MFAChallengeParams",
                              "kind": 4194304,
                              "kindString": "Type alias",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 810,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 891,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 892,
                                      "name": "factorId",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "ID of the factor to be challenged. Returned in enroll()."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 812,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        892
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 810,
                                      "character": 33
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 935,
                            "name": "AuthMFAChallengeResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 980,
                  "name": "challengeAndVerify",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 981,
                      "name": "challengeAndVerify",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Helper method which creates a challenge and immediately uses the given code to verify against it thereafter. The verification code is\nprovided by the user by entering a code seen in their authenticator app."
                      },
                      "parameters": [
                        {
                          "id": 982,
                          "name": "params",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 893,
                            "name": "MFAChallengeAndVerifyParams",
                            "dereferenced": {
                              "id": 893,
                              "name": "MFAChallengeAndVerifyParams",
                              "kind": 4194304,
                              "kindString": "Type alias",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 815,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 894,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 896,
                                      "name": "code",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "Verification code provided by the user."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 819,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 895,
                                      "name": "factorId",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "ID of the factor being verified. Returned in enroll()."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 817,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        896,
                                        895
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 815,
                                      "character": 42
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 897,
                            "name": "AuthMFAVerifyResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 968,
                  "name": "enroll",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 969,
                      "name": "enroll",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Starts the enrollment process for a new Multi-Factor Authentication (MFA)\nfactor. This method creates a new `unverified` factor.\nTo verify a factor, present the QR code or secret to the user and ask them to add it to their\nauthenticator app.\nThe user has to enter the code from their authenticator app to verify it.",
                        "text": "Upon verifying a factor, all other sessions are logged out and the current session's authenticator level is promoted to `aal2`.\n\n"
                      },
                      "parameters": [
                        {
                          "id": 970,
                          "name": "params",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 877,
                            "name": "MFAEnrollParams",
                            "dereferenced": {
                              "id": 877,
                              "name": "MFAEnrollParams",
                              "kind": 4194304,
                              "kindString": "Type alias",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 785,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 878,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 879,
                                      "name": "factorType",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "The type of factor being enrolled."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 787,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": "totp"
                                      }
                                    },
                                    {
                                      "id": 881,
                                      "name": "friendlyName",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Human readable name assigned to the factor."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 791,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 880,
                                      "name": "issuer",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Domain which the user is enrolled with."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 789,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        879,
                                        881,
                                        880
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 785,
                                      "character": 30
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 910,
                            "name": "AuthMFAEnrollResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 985,
                  "name": "getAuthenticatorAssuranceLevel",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 986,
                      "name": "getAuthenticatorAssuranceLevel",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Returns the Authenticator Assurance Level (AAL) for the active session.",
                        "text": "- `aal1` (or `null`) means that the user's identity has been verified only\nwith a conventional login (email+password, OTP, magic link, social login,\netc.).\n- `aal2` means that the user's identity has been verified both with a conventional login and at least one MFA factor.\n\nAlthough this method returns a promise, it's fairly quick (microseconds)\nand rarely uses the network. You can use this to check whether the current\nuser needs to be shown a screen to verify their MFA factors.\n\n"
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 956,
                            "name": "AuthMFAGetAuthenticatorAssuranceLevelResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 983,
                  "name": "listFactors",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 984,
                      "name": "listFactors",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Returns the list of MFA factors enabled for this user.",
                        "tags": [
                          {
                            "tag": "see",
                            "text": "{@link GoTrueMFAApi#enroll}"
                          },
                          {
                            "tag": "see",
                            "text": "{@link GoTrueMFAApi#getAuthenticatorAssuranceLevel}"
                          },
                          {
                            "tag": "see",
                            "text": "{@link GoTrueClient#getUser}\n\n"
                          }
                        ]
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 945,
                            "name": "AuthMFAListFactorsResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 977,
                  "name": "unenroll",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 978,
                      "name": "unenroll",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Unenroll removes a MFA factor.\nA user has to have an `aal2` authenticator level in order to unenroll a `verified` factor."
                      },
                      "parameters": [
                        {
                          "id": 979,
                          "name": "params",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 882,
                            "name": "MFAUnenrollParams",
                            "dereferenced": {
                              "id": 882,
                              "name": "MFAUnenrollParams",
                              "kind": 4194304,
                              "kindString": "Type alias",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 794,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 883,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 884,
                                      "name": "factorId",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "ID of the factor being unenrolled."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 796,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        884
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 794,
                                      "character": 32
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 926,
                            "name": "AuthMFAUnenrollResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 974,
                  "name": "verify",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 975,
                      "name": "verify",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Verifies a code against a challenge. The verification code is\nprovided by the user by entering a code seen in their authenticator app."
                      },
                      "parameters": [
                        {
                          "id": 976,
                          "name": "params",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 885,
                            "name": "MFAVerifyParams",
                            "dereferenced": {
                              "id": 885,
                              "name": "MFAVerifyParams",
                              "kind": 4194304,
                              "kindString": "Type alias",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 799,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 886,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 888,
                                      "name": "challengeId",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "ID of the challenge being verified. Returned in challenge()."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 804,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 889,
                                      "name": "code",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "Verification code provided by the user."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 807,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 887,
                                      "name": "factorId",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "ID of the factor being verified. Returned in enroll()."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 801,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        888,
                                        889,
                                        887
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 799,
                                      "character": 30
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 897,
                            "name": "AuthMFAVerifyResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [
                    971,
                    980,
                    968,
                    985,
                    983,
                    977,
                    974
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 949,
                  "character": 17
                }
              ]
            }
          }
        },
        {
          "id": 143,
          "name": "exchangeCodeForSession",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 571,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 144,
              "name": "exchangeCodeForSession",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Log in an existing user by exchanging an Auth Code issued during the PKCE flow."
              },
              "parameters": [
                {
                  "id": 145,
                  "name": "authCode",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 557,
                    "name": "AuthTokenResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 182,
          "name": "getSession",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 926,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 183,
              "name": "getSession",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Returns the session, refreshing it if necessary.",
                "text": "The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n\n**IMPORTANT:** This method loads values directly from the storage attached\nto the client. If that storage is based on request cookies for example,\nthe values in it may not be authentic and therefore it's strongly advised\nagainst using this method and its results in such circumstances. A warning\nwill be emitted if this is detected. Use {@link #getUser()} instead.\n"
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 184,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 185,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1028,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 186,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 187,
                                      "name": "session",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueClient.ts",
                                          "line": 1029,
                                          "character": 14
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 618,
                                        "name": "Session"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        187
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 188,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1031,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                185,
                                188
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 189,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 190,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1034,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 191,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 192,
                                      "name": "session",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueClient.ts",
                                          "line": 1035,
                                          "character": 14
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        192
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 193,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1037,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 1058,
                                "name": "AuthError"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                190,
                                193
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 194,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 195,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1040,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 196,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 197,
                                      "name": "session",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueClient.ts",
                                          "line": 1041,
                                          "character": 14
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        197
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 198,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1043,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                195,
                                198
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 245,
          "name": "getUser",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1166,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 246,
              "name": "getUser",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Gets the current user details if there is an existing session. This method\nperforms a network request to the Supabase Auth server, so the returned\nvalue is authentic and can be used to base authorization rules on."
              },
              "parameters": [
                {
                  "id": 247,
                  "name": "jwt",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 607,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 349,
          "name": "getUserIdentities",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1710,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 350,
              "name": "getUserIdentities",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Gets all the identities linked to a user."
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 351,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 352,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1712,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 353,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 354,
                                      "name": "identities",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueClient.ts",
                                          "line": 1713,
                                          "character": 10
                                        }
                                      ],
                                      "type": {
                                        "type": "array",
                                        "elementType": {
                                          "type": "reference",
                                          "id": 630,
                                          "name": "UserIdentity"
                                        }
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        354
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 355,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1715,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                352,
                                355
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 356,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 357,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1717,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            },
                            {
                              "id": 358,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1717,
                                  "character": 20
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 1058,
                                "name": "AuthError"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                357,
                                358
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 127,
          "name": "initialize",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 278,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 128,
              "name": "initialize",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Initializes the client session either from the url or from storage.\nThis method is automatically called when instantiating the client, but should also be called\nmanually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc)."
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 1022,
                    "name": "InitializeResult"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 359,
          "name": "linkIdentity",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1734,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 360,
              "name": "linkIdentity",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Links an oauth identity to an existing user.\nThis method supports the PKCE flow."
              },
              "parameters": [
                {
                  "id": 361,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 760,
                    "name": "SignInWithOAuthCredentials",
                    "dereferenced": {
                      "id": 760,
                      "name": "SignInWithOAuthCredentials",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 566,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 761,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 763,
                              "name": "options",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 569,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 764,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 767,
                                      "name": "queryParams",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "An object of query params"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 575,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 768,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 575,
                                              "character": 18
                                            }
                                          ],
                                          "indexSignature": {
                                            "id": 769,
                                            "name": "__index",
                                            "kind": 8192,
                                            "kindString": "Index signature",
                                            "flags": {},
                                            "parameters": [
                                              {
                                                "id": 770,
                                                "name": "key",
                                                "kind": 32768,
                                                "flags": {},
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "id": 765,
                                      "name": "redirectTo",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "A URL to send the user to after they are confirmed."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 571,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 766,
                                      "name": "scopes",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "A space-separated list of scopes granted to the OAuth application."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 573,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 771,
                                      "name": "skipBrowserRedirect",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "If set to true does not immediately redirect the current browser context to visit the OAuth authorization page for the provider."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 577,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        767,
                                        765,
                                        766,
                                        771
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 569,
                                      "character": 12
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 762,
                              "name": "provider",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "One of the providers supported by GoTrue."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 568,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 478,
                                "name": "Provider",
                                "dereferenced": {
                                  "id": 478,
                                  "name": "Provider",
                                  "kind": 4194304,
                                  "kindString": "Type alias",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "One of the providers supported by GoTrue."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 5,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": "apple"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "azure"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "bitbucket"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "discord"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "facebook"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "figma"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "github"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "gitlab"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "google"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "kakao"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "keycloak"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "linkedin"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "linkedin_oidc"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "notion"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "slack"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "spotify"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "twitch"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "twitter"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "workos"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "zoom"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "fly"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                763,
                                762
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 566,
                              "character": 41
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 585,
                    "name": "OAuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 321,
          "name": "onAuthStateChange",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1608,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 322,
              "name": "onAuthStateChange",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Receive a notification every time an auth event happens."
              },
              "parameters": [
                {
                  "id": 323,
                  "name": "callback",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "A callback function to be invoked when an auth event happens.\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 324,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 325,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 326,
                              "name": "event",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "id": 480,
                                "name": "AuthChangeEvent"
                              }
                            },
                            {
                              "id": 327,
                              "name": "session",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "reference",
                                    "id": 618,
                                    "name": "Session"
                                  }
                                ]
                              }
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "void"
                              },
                              {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "intrinsic",
                                    "name": "void"
                                  }
                                ],
                                "qualifiedName": "Promise",
                                "package": "typescript",
                                "name": "Promise"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 328,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 329,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/GoTrueClient.ts",
                          "line": 1611,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 330,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 331,
                              "name": "subscription",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1611,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 696,
                                "name": "Subscription",
                                "dereferenced": {
                                  "id": 696,
                                  "name": "Subscription",
                                  "kind": 256,
                                  "kindString": "Interface",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 697,
                                      "name": "id",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "The subscriber UUID. This will be set by the client."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 440,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 698,
                                      "name": "callback",
                                      "kind": 2048,
                                      "kindString": "Method",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 444,
                                          "character": 2
                                        }
                                      ],
                                      "signatures": [
                                        {
                                          "id": 699,
                                          "name": "callback",
                                          "kind": 4096,
                                          "kindString": "Call signature",
                                          "flags": {},
                                          "comment": {
                                            "shortText": "The function to call every time there is an event. eg: (eventName) => {}"
                                          },
                                          "parameters": [
                                            {
                                              "id": 700,
                                              "name": "event",
                                              "kind": 32768,
                                              "kindString": "Parameter",
                                              "flags": {},
                                              "type": {
                                                "type": "reference",
                                                "id": 480,
                                                "name": "AuthChangeEvent",
                                                "dereferenced": {
                                                  "id": 480,
                                                  "name": "AuthChangeEvent",
                                                  "kind": 4194304,
                                                  "kindString": "Type alias",
                                                  "flags": {},
                                                  "sources": [
                                                    {
                                                      "fileName": "src/lib/types.ts",
                                                      "line": 30,
                                                      "character": 12
                                                    }
                                                  ],
                                                  "type": {
                                                    "type": "union",
                                                    "types": [
                                                      {
                                                        "type": "literal",
                                                        "value": "INITIAL_SESSION"
                                                      },
                                                      {
                                                        "type": "literal",
                                                        "value": "PASSWORD_RECOVERY"
                                                      },
                                                      {
                                                        "type": "literal",
                                                        "value": "SIGNED_IN"
                                                      },
                                                      {
                                                        "type": "literal",
                                                        "value": "SIGNED_OUT"
                                                      },
                                                      {
                                                        "type": "literal",
                                                        "value": "TOKEN_REFRESHED"
                                                      },
                                                      {
                                                        "type": "literal",
                                                        "value": "USER_UPDATED"
                                                      },
                                                      {
                                                        "id": 479,
                                                        "name": "AuthChangeEventMFA",
                                                        "kind": 4194304,
                                                        "kindString": "Type alias",
                                                        "flags": {},
                                                        "sources": [
                                                          {
                                                            "fileName": "src/lib/types.ts",
                                                            "line": 28,
                                                            "character": 12
                                                          }
                                                        ],
                                                        "type": {
                                                          "type": "literal",
                                                          "value": "MFA_CHALLENGE_VERIFIED"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "id": 701,
                                              "name": "session",
                                              "kind": 32768,
                                              "kindString": "Parameter",
                                              "flags": {},
                                              "type": {
                                                "type": "union",
                                                "types": [
                                                  {
                                                    "type": "literal",
                                                    "value": null
                                                  },
                                                  {
                                                    "type": "reference",
                                                    "id": 618,
                                                    "name": "Session"
                                                  }
                                                ]
                                              }
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "void"
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "id": 702,
                                      "name": "unsubscribe",
                                      "kind": 2048,
                                      "kindString": "Method",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 448,
                                          "character": 2
                                        }
                                      ],
                                      "signatures": [
                                        {
                                          "id": 703,
                                          "name": "unsubscribe",
                                          "kind": 4096,
                                          "kindString": "Call signature",
                                          "flags": {},
                                          "comment": {
                                            "shortText": "Call this to remove the listener."
                                          },
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "void"
                                          }
                                        }
                                      ]
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        697
                                      ]
                                    },
                                    {
                                      "title": "Methods",
                                      "kind": 2048,
                                      "children": [
                                        698,
                                        702
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 436,
                                      "character": 17
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                331
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        329
                      ]
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 175,
          "name": "reauthenticate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 838,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 176,
              "name": "reauthenticate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Sends a reauthentication OTP to the user's email or phone number.\nRequires the user to be signed-in."
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 515,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 282,
          "name": "refreshSession",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1374,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 283,
              "name": "refreshSession",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Returns a new session, regardless of expiry status.\nTakes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\nIf the current session's refresh token is invalid, an error will be thrown."
              },
              "parameters": [
                {
                  "id": 284,
                  "name": "currentSession",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The current session. If passed in, it must contain a refresh token.\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 285,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 286,
                          "name": "refresh_token",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 1374,
                              "character": 42
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            286
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 515,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 179,
          "name": "resend",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 873,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 180,
              "name": "resend",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP."
              },
              "parameters": [
                {
                  "id": 181,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 803,
                    "name": "ResendParams",
                    "dereferenced": {
                      "id": 803,
                      "name": "ResendParams",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 646,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 804,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 806,
                                  "name": "email",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 649,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 807,
                                  "name": "options",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 650,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 808,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 810,
                                          "name": "captchaToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Verification token received when the user completes the captcha on the site."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 654,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 809,
                                          "name": "emailRedirectTo",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A URL to send the user to after they have signed-in."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 652,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [
                                            810,
                                            809
                                          ]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 650,
                                          "character": 16
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 805,
                                  "name": "type",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 648,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 802,
                                        "name": "EmailOtpType"
                                      },
                                      {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "literal",
                                            "value": "signup"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "email_change"
                                          }
                                        ]
                                      }
                                    ],
                                    "qualifiedName": "Extract",
                                    "package": "typescript",
                                    "name": "Extract"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    806,
                                    807,
                                    805
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 647,
                                  "character": 4
                                }
                              ]
                            }
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 811,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 814,
                                  "name": "options",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 660,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 815,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 816,
                                          "name": "captchaToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Verification token received when the user completes the captcha on the site."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 662,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [
                                            816
                                          ]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 660,
                                          "character": 16
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 813,
                                  "name": "phone",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 659,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 812,
                                  "name": "type",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 658,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 801,
                                        "name": "MobileOtpType"
                                      },
                                      {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "literal",
                                            "value": "sms"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "phone_change"
                                          }
                                        ]
                                      }
                                    ],
                                    "qualifiedName": "Extract",
                                    "package": "typescript",
                                    "name": "Extract"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    814,
                                    813,
                                    812
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 657,
                                  "character": 4
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 542,
                    "name": "AuthOtpResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 335,
          "name": "resetPasswordForEmail",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1664,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 336,
              "name": "resetPasswordForEmail",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Sends a password reset request to an email address. This method supports the PKCE flow."
              },
              "parameters": [
                {
                  "id": 337,
                  "name": "email",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The email address of the user."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 338,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 339,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 341,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 1668,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 340,
                          "name": "redirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The URL to send the user to after they click the password reset link."
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 1667,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            341,
                            340
                          ]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 342,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 343,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1672,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 344,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {}
                                }
                              }
                            },
                            {
                              "id": 345,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1673,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                343,
                                345
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 346,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 347,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1675,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            },
                            {
                              "id": 348,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1675,
                                  "character": 20
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 1058,
                                "name": "AuthError"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                347,
                                348
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 270,
          "name": "setSession",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1299,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 271,
              "name": "setSession",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\nIf the refresh token or access token in the current session is invalid, an error will be thrown."
              },
              "parameters": [
                {
                  "id": 272,
                  "name": "currentSession",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The current session that minimally contains an access token and refresh token.\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 273,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 274,
                          "name": "access_token",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 1300,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 275,
                          "name": "refresh_token",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 1301,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            274,
                            275
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 515,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 131,
          "name": "signInAnonymously",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 368,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 132,
              "name": "signInAnonymously",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Creates a new anonymous user.",
                "returns": "A session where the is_anonymous claim in the access token JWT set to true\n"
              },
              "parameters": [
                {
                  "id": 133,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 706,
                    "name": "SignInAnonymouslyCredentials",
                    "dereferenced": {
                      "id": 706,
                      "name": "SignInAnonymouslyCredentials",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 455,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 707,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 708,
                              "name": "options",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 456,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 709,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 711,
                                      "name": "captchaToken",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Verification token received when the user completes the captcha on the site."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 464,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 710,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                                        "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 462,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "object"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        711,
                                        710
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 456,
                                      "character": 12
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                708
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 455,
                              "character": 43
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 515,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 163,
          "name": "signInWithIdToken",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 621,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 164,
              "name": "signInWithIdToken",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Allows signing in with an OIDC ID token. The authentication provider used\nshould be enabled and configured."
              },
              "parameters": [
                {
                  "id": 165,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 772,
                    "name": "SignInWithIdTokenCredentials",
                    "dereferenced": {
                      "id": 772,
                      "name": "SignInWithIdTokenCredentials",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 581,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 773,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 776,
                              "name": "access_token",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If the ID token contains an `at_hash` claim, then the hash of this value is compared to the value in the ID token."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 587,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 777,
                              "name": "nonce",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If the ID token contains a `nonce` claim, then the hash of this value is compared to the value in the ID token."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 589,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 778,
                              "name": "options",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 590,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 779,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 780,
                                      "name": "captchaToken",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Verification token received when the user completes the captcha on the site."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 592,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        780
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 590,
                                      "character": 12
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 774,
                              "name": "provider",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "Provider name or OIDC `iss` value identifying which provider should be used to verify the provided token. Supported names: `google`, `apple`, `azure`, `facebook`, `keycloak` (deprecated)."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 583,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": "google"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "apple"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "azure"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "facebook"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 775,
                              "name": "token",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "OIDC ID token issued by the specified provider. The `iss` claim in the ID token must match the supplied provider. Some ID tokens contain an `at_hash` which require that you provide an `access_token` value to be accepted properly. If the token contains a `nonce` claim you must supply the nonce used to obtain the ID token."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 585,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                776,
                                777,
                                778,
                                774,
                                775
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 581,
                              "character": 43
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 557,
                    "name": "AuthTokenResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 140,
          "name": "signInWithOAuth",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 557,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 141,
              "name": "signInWithOAuth",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Log in an existing user via a third-party provider.\nThis method supports the PKCE flow."
              },
              "parameters": [
                {
                  "id": 142,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 760,
                    "name": "SignInWithOAuthCredentials",
                    "dereferenced": {
                      "id": 760,
                      "name": "SignInWithOAuthCredentials",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 566,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 761,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 763,
                              "name": "options",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 569,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 764,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 767,
                                      "name": "queryParams",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "An object of query params"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 575,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 768,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 575,
                                              "character": 18
                                            }
                                          ],
                                          "indexSignature": {
                                            "id": 769,
                                            "name": "__index",
                                            "kind": 8192,
                                            "kindString": "Index signature",
                                            "flags": {},
                                            "parameters": [
                                              {
                                                "id": 770,
                                                "name": "key",
                                                "kind": 32768,
                                                "flags": {},
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "id": 765,
                                      "name": "redirectTo",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "A URL to send the user to after they are confirmed."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 571,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 766,
                                      "name": "scopes",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "A space-separated list of scopes granted to the OAuth application."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 573,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 771,
                                      "name": "skipBrowserRedirect",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "If set to true does not immediately redirect the current browser context to visit the OAuth authorization page for the provider."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 577,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        767,
                                        765,
                                        766,
                                        771
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 569,
                                      "character": 12
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 762,
                              "name": "provider",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "One of the providers supported by GoTrue."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 568,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 478,
                                "name": "Provider",
                                "dereferenced": {
                                  "id": 478,
                                  "name": "Provider",
                                  "kind": 4194304,
                                  "kindString": "Type alias",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "One of the providers supported by GoTrue."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 5,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": "apple"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "azure"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "bitbucket"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "discord"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "facebook"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "figma"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "github"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "gitlab"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "google"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "kakao"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "keycloak"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "linkedin"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "linkedin_oidc"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "notion"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "slack"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "spotify"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "twitch"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "twitter"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "workos"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "zoom"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "fly"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                763,
                                762
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 566,
                              "character": 41
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 585,
                    "name": "OAuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 166,
          "name": "signInWithOtp",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 678,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 167,
              "name": "signInWithOtp",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Log in a user using magiclink or a one-time password (OTP).",
                "text": "If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\nIf the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\nIf you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n\nBe aware that you may get back an error message that will not distinguish\nbetween the cases where the account does not exist or, that the account\ncan only be accessed via social login.\n\nDo note that you will need to configure a Whatsapp sender on Twilio\nif you are using phone sign in with the 'whatsapp' channel. The whatsapp\nchannel is not supported on other providers\nat this time.\nThis method supports PKCE when an email is passed.\n"
              },
              "parameters": [
                {
                  "id": 168,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 742,
                    "name": "SignInWithPasswordlessCredentials",
                    "dereferenced": {
                      "id": 742,
                      "name": "SignInWithPasswordlessCredentials",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 527,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 743,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 744,
                                  "name": "email",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The user's email address."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 530,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 745,
                                  "name": "options",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 531,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 746,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 750,
                                          "name": "captchaToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Verification token received when the user completes the captcha on the site."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 543,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 749,
                                          "name": "data",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 541,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "object"
                                          }
                                        },
                                        {
                                          "id": 747,
                                          "name": "emailRedirectTo",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "The redirect url embedded in the email link"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 533,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 748,
                                          "name": "shouldCreateUser",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "If set to false, this method will not create a new user. Defaults to true."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 535,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "boolean"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [
                                            750,
                                            749,
                                            747,
                                            748
                                          ]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 531,
                                          "character": 16
                                        }
                                      ]
                                    }
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    744,
                                    745
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 528,
                                  "character": 4
                                }
                              ]
                            }
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 751,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 753,
                                  "name": "options",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 549,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 754,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 757,
                                          "name": "captchaToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Verification token received when the user completes the captcha on the site."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 559,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 758,
                                          "name": "channel",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Messaging channel to use (e.g. whatsapp or sms)"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 561,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "union",
                                            "types": [
                                              {
                                                "type": "literal",
                                                "value": "sms"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "whatsapp"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "id": 756,
                                          "name": "data",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 557,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "object"
                                          }
                                        },
                                        {
                                          "id": 755,
                                          "name": "shouldCreateUser",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "If set to false, this method will not create a new user. Defaults to true."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 551,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "boolean"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [
                                            757,
                                            758,
                                            756,
                                            755
                                          ]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 549,
                                          "character": 16
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 752,
                                  "name": "phone",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The user's phone number."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 548,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    753,
                                    752
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 546,
                                  "character": 4
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 542,
                    "name": "AuthOtpResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 137,
          "name": "signInWithPassword",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 492,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 138,
              "name": "signInWithPassword",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Log in an existing user with an email and password or phone and password.",
                "text": "Be aware that you may get back an error message that will not distinguish\nbetween the cases where the account does not exist or that the\nemail/phone and password combination is wrong or that the account can only\nbe accessed via social login.\n"
              },
              "parameters": [
                {
                  "id": 139,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 729,
                    "name": "SignInWithPasswordCredentials",
                    "dereferenced": {
                      "id": 729,
                      "name": "SignInWithPasswordCredentials",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 505,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 730,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 731,
                                  "name": "email",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The user's email address."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 508,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 733,
                                  "name": "options",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 511,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 734,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 735,
                                          "name": "captchaToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Verification token received when the user completes the captcha on the site."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 513,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [
                                            735
                                          ]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 511,
                                          "character": 16
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 732,
                                  "name": "password",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The user's password."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 510,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    731,
                                    733,
                                    732
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 506,
                                  "character": 4
                                }
                              ]
                            }
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 736,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 739,
                                  "name": "options",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 521,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 740,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 741,
                                          "name": "captchaToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Verification token received when the user completes the captcha on the site."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 523,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [
                                            741
                                          ]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 521,
                                          "character": 16
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 738,
                                  "name": "password",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The user's password."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 520,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 737,
                                  "name": "phone",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The user's phone number."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 518,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    739,
                                    738,
                                    737
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 516,
                                  "character": 4
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 570,
                    "name": "AuthTokenResponsePassword"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 172,
          "name": "signInWithSSO",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 799,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 173,
              "name": "signInWithSSO",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Attempts a single-sign on using an enterprise Identity Provider. A\nsuccessful SSO attempt will redirect the current page to the identity\nprovider authorization page. The redirect URL is implementation and SSO\nprotocol specific.",
                "text": "You can use it by providing a SSO domain. Typically you can extract this\ndomain by asking users for their email address. If this domain is\nregistered on the Auth instance the redirect will use that organization's\ncurrently active SSO Identity Provider for the login.\n\nIf you have built an organization-specific login page, you can use the\norganization's SSO Identity Provider UUID directly instead.\n"
              },
              "parameters": [
                {
                  "id": 174,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 817,
                    "name": "SignInWithSSO",
                    "dereferenced": {
                      "id": 817,
                      "name": "SignInWithSSO",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 666,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 818,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 820,
                                  "name": "options",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 671,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 821,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 823,
                                          "name": "captchaToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Verification token received when the user completes the captcha on the site."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 675,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 822,
                                          "name": "redirectTo",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A URL to send the user to after they have signed-in."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 673,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [
                                            823,
                                            822
                                          ]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 671,
                                          "character": 16
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 819,
                                  "name": "providerId",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "UUID of the SSO provider to invoke single-sign on to."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 669,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    820,
                                    819
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 667,
                                  "character": 4
                                }
                              ]
                            }
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 824,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 825,
                                  "name": "domain",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "Domain name of the organization for which to invoke single-sign on."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 680,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 826,
                                  "name": "options",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 682,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 827,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 829,
                                          "name": "captchaToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Verification token received when the user completes the captcha on the site."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 686,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 828,
                                          "name": "redirectTo",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A URL to send the user to after they have signed-in."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 684,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [
                                            829,
                                            828
                                          ]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 682,
                                          "character": 16
                                        }
                                      ]
                                    }
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    825,
                                    826
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 678,
                                  "character": 4
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 598,
                    "name": "SSOResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 311,
          "name": "signOut",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1568,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 312,
              "name": "signOut",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.",
                "text": "For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\nThere is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n\nIf using `others` scope, no `SIGNED_OUT` event is fired!\n"
              },
              "parameters": [
                {
                  "id": 313,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 1043,
                    "name": "SignOut",
                    "dereferenced": {
                      "id": 1043,
                      "name": "SignOut",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1128,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 1044,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1045,
                              "name": "scope",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Determines which sessions should be\nlogged out. Global means all\nsessions by this account. Local\nmeans only this session. Others\nmeans all other sessions except the\ncurrent one. When using others,\nthere is no sign-out event fired on\nthe current session!"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1139,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": "global"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "local"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "others"
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                1045
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1128,
                              "character": 22
                            }
                          ]
                        }
                      }
                    }
                  },
                  "defaultValue": "..."
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 314,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 315,
                          "name": "error",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 1568,
                              "character": 67
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "reference",
                                "id": 1058,
                                "name": "AuthError"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            315
                          ]
                        }
                      ]
                    }
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 134,
          "name": "signUp",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 413,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 135,
              "name": "signUp",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Creates a new user.",
                "text": "Be aware that if a user account exists in the system you may get back an\nerror message that attempts to hide this information from the user.\nThis method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n",
                "returns": "A logged-in session if the server has \"autoconfirm\" ON"
              },
              "parameters": [
                {
                  "id": 136,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 712,
                    "name": "SignUpWithPasswordCredentials",
                    "dereferenced": {
                      "id": 712,
                      "name": "SignUpWithPasswordCredentials",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 468,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 713,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 714,
                                  "name": "email",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The user's email address."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 471,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 716,
                                  "name": "options",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 474,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 717,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 720,
                                          "name": "captchaToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Verification token received when the user completes the captcha on the site."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 484,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 719,
                                          "name": "data",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 482,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "object"
                                          }
                                        },
                                        {
                                          "id": 718,
                                          "name": "emailRedirectTo",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "The redirect url embedded in the email link"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 476,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [
                                            720,
                                            719,
                                            718
                                          ]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 474,
                                          "character": 16
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 715,
                                  "name": "password",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The user's password."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 473,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    714,
                                    716,
                                    715
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 469,
                                  "character": 4
                                }
                              ]
                            }
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 721,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 724,
                                  "name": "options",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 492,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 725,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 727,
                                          "name": "captchaToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Verification token received when the user completes the captcha on the site. Requires a configured WhatsApp sender on Twilio"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 500,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 728,
                                          "name": "channel",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Messaging channel to use (e.g. whatsapp or sms)"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 502,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "union",
                                            "types": [
                                              {
                                                "type": "literal",
                                                "value": "sms"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "whatsapp"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "id": 726,
                                          "name": "data",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 498,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "object"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [
                                            727,
                                            728,
                                            726
                                          ]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 492,
                                          "character": 16
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 723,
                                  "name": "password",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The user's password."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 491,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 722,
                                  "name": "phone",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The user's phone number."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 489,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    724,
                                    723,
                                    722
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 487,
                                  "character": 4
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 515,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 417,
          "name": "startAutoRefresh",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 2142,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 418,
              "name": "startAutoRefresh",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Starts an auto-refresh process in the background. The session is checked\nevery few seconds. Close to the time of expiration a process is started to\nrefresh the session. If refreshing fails it will be retried for as long as\nnecessary.",
                "text": "If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\nto call this function, it will be called for you.\n\nOn browsers the refresh process works only when the tab/window is in the\nforeground to conserve resources as well as prevent race conditions and\nflooding auth with requests. If you call this method any managed\nvisibility change callback will be removed and you must manage visibility\nchanges on your own.\n\nOn non-browser platforms the refresh process works *continuously* in the\nbackground, which may not be desirable. You should hook into your\nplatform's foreground indication mechanism and call these methods\nappropriately to conserve resources.\n\n{@see #stopAutoRefresh}\n"
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 419,
          "name": "stopAutoRefresh",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 2155,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 420,
              "name": "stopAutoRefresh",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Stops an active auto refresh process running in the background (if any).",
                "text": "If you call this method any managed visibility change callback will be\nremoved and you must manage visibility changes on your own.\n\nSee {@link #startAutoRefresh} for more details.\n"
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 362,
          "name": "unlinkIdentity",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1770,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 363,
              "name": "unlinkIdentity",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked."
              },
              "parameters": [
                {
                  "id": 364,
                  "name": "identity",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 630,
                    "name": "UserIdentity",
                    "dereferenced": {
                      "id": 630,
                      "name": "UserIdentity",
                      "kind": 256,
                      "kindString": "Interface",
                      "flags": {},
                      "children": [
                        {
                          "id": 639,
                          "name": "created_at",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 279,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 631,
                          "name": "id",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 272,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 633,
                          "name": "identity_data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 274,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 634,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "indexSignature": {
                                "id": 635,
                                "name": "__index",
                                "kind": 8192,
                                "kindString": "Index signature",
                                "flags": {},
                                "parameters": [
                                  {
                                    "id": 636,
                                    "name": "key",
                                    "kind": 32768,
                                    "flags": {},
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          }
                        },
                        {
                          "id": 637,
                          "name": "identity_id",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 277,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 640,
                          "name": "last_sign_in_at",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 280,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 638,
                          "name": "provider",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 278,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 641,
                          "name": "updated_at",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 281,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 632,
                          "name": "user_id",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 273,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            639,
                            631,
                            633,
                            637,
                            640,
                            638,
                            641,
                            632
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 271,
                          "character": 17
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 365,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 366,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1772,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 367,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {}
                                }
                              }
                            },
                            {
                              "id": 368,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1773,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                366,
                                368
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 369,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 370,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1775,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            },
                            {
                              "id": 371,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1775,
                                  "character": 20
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 1058,
                                "name": "AuthError"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                370,
                                371
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 251,
          "name": "updateUser",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1219,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 252,
              "name": "updateUser",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Updates user data for a logged in user."
              },
              "parameters": [
                {
                  "id": 253,
                  "name": "attributes",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 679,
                    "name": "UserAttributes",
                    "dereferenced": {
                      "id": 679,
                      "name": "UserAttributes",
                      "kind": 256,
                      "kindString": "Interface",
                      "flags": {},
                      "children": [
                        {
                          "id": 684,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 374,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        },
                        {
                          "id": 680,
                          "name": "email",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The user's email."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 349,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 683,
                          "name": "nonce",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
                            "text": "Call reauthenticate() to obtain the nonce first.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 366,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 682,
                          "name": "password",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The user's password."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 359,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 681,
                          "name": "phone",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The user's phone."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 354,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            684,
                            680,
                            683,
                            682,
                            681
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 345,
                          "character": 17
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 254,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 255,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 256,
                          "name": "emailRedirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 1222,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            256
                          ]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 607,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 169,
          "name": "verifyOtp",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 733,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 170,
              "name": "verifyOtp",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Log in a user given a User supplied OTP or TokenHash received through mobile or email."
              },
              "parameters": [
                {
                  "id": 171,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 781,
                    "name": "VerifyOtpParams",
                    "dereferenced": {
                      "id": 781,
                      "name": "VerifyOtpParams",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 596,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "id": 782,
                            "name": "VerifyMobileOtpParams",
                            "kind": 256,
                            "kindString": "Interface",
                            "flags": {},
                            "children": [
                              {
                                "id": 786,
                                "name": "options",
                                "kind": 1024,
                                "kindString": "Property",
                                "flags": {
                                  "isOptional": true
                                },
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 604,
                                    "character": 2
                                  }
                                ],
                                "type": {
                                  "type": "reflection",
                                  "declaration": {
                                    "id": 787,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {},
                                    "children": [
                                      {
                                        "id": 789,
                                        "name": "captchaToken",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {
                                          "isOptional": true
                                        },
                                        "comment": {
                                          "shortText": "Verification token received when the user completes the captcha on the site.",
                                          "tags": [
                                            {
                                              "tag": "deprecated",
                                              "text": "\n"
                                            }
                                          ]
                                        },
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 613,
                                            "character": 4
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "id": 788,
                                        "name": "redirectTo",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {
                                          "isOptional": true
                                        },
                                        "comment": {
                                          "shortText": "A URL to send the user to after they are confirmed."
                                        },
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 606,
                                            "character": 4
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      }
                                    ],
                                    "groups": [
                                      {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [
                                          789,
                                          788
                                        ]
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "id": 783,
                                "name": "phone",
                                "kind": 1024,
                                "kindString": "Property",
                                "flags": {},
                                "comment": {
                                  "shortText": "The user's phone number."
                                },
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 599,
                                    "character": 2
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              },
                              {
                                "id": 784,
                                "name": "token",
                                "kind": 1024,
                                "kindString": "Property",
                                "flags": {},
                                "comment": {
                                  "shortText": "The otp sent to the user's phone number."
                                },
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 601,
                                    "character": 2
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              },
                              {
                                "id": 785,
                                "name": "type",
                                "kind": 1024,
                                "kindString": "Property",
                                "flags": {},
                                "comment": {
                                  "shortText": "The user's verification type."
                                },
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 603,
                                    "character": 2
                                  }
                                ],
                                "type": {
                                  "type": "reference",
                                  "id": 801,
                                  "name": "MobileOtpType",
                                  "dereferenced": {
                                    "id": 801,
                                    "name": "MobileOtpType",
                                    "kind": 4194304,
                                    "kindString": "Type alias",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 643,
                                        "character": 12
                                      }
                                    ],
                                    "type": {
                                      "type": "union",
                                      "types": [
                                        {
                                          "type": "literal",
                                          "value": "sms"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "phone_change"
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            ],
                            "groups": [
                              {
                                "title": "Properties",
                                "kind": 1024,
                                "children": [
                                  786,
                                  783,
                                  784,
                                  785
                                ]
                              }
                            ],
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 597,
                                "character": 17
                              }
                            ]
                          },
                          {
                            "id": 790,
                            "name": "VerifyEmailOtpParams",
                            "kind": 256,
                            "kindString": "Interface",
                            "flags": {},
                            "children": [
                              {
                                "id": 791,
                                "name": "email",
                                "kind": 1024,
                                "kindString": "Property",
                                "flags": {},
                                "comment": {
                                  "shortText": "The user's email address."
                                },
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 618,
                                    "character": 2
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              },
                              {
                                "id": 794,
                                "name": "options",
                                "kind": 1024,
                                "kindString": "Property",
                                "flags": {
                                  "isOptional": true
                                },
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 623,
                                    "character": 2
                                  }
                                ],
                                "type": {
                                  "type": "reflection",
                                  "declaration": {
                                    "id": 795,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {},
                                    "children": [
                                      {
                                        "id": 797,
                                        "name": "captchaToken",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {
                                          "isOptional": true
                                        },
                                        "comment": {
                                          "shortText": "Verification token received when the user completes the captcha on the site.",
                                          "tags": [
                                            {
                                              "tag": "deprecated",
                                              "text": "\n"
                                            }
                                          ]
                                        },
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 631,
                                            "character": 4
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "id": 796,
                                        "name": "redirectTo",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {
                                          "isOptional": true
                                        },
                                        "comment": {
                                          "shortText": "A URL to send the user to after they are confirmed."
                                        },
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 625,
                                            "character": 4
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      }
                                    ],
                                    "groups": [
                                      {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [
                                          797,
                                          796
                                        ]
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "id": 792,
                                "name": "token",
                                "kind": 1024,
                                "kindString": "Property",
                                "flags": {},
                                "comment": {
                                  "shortText": "The otp sent to the user's email address."
                                },
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 620,
                                    "character": 2
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              },
                              {
                                "id": 793,
                                "name": "type",
                                "kind": 1024,
                                "kindString": "Property",
                                "flags": {},
                                "comment": {
                                  "shortText": "The user's verification type."
                                },
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 622,
                                    "character": 2
                                  }
                                ],
                                "type": {
                                  "type": "reference",
                                  "id": 802,
                                  "name": "EmailOtpType",
                                  "dereferenced": {
                                    "id": 802,
                                    "name": "EmailOtpType",
                                    "kind": 4194304,
                                    "kindString": "Type alias",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 644,
                                        "character": 12
                                      }
                                    ],
                                    "type": {
                                      "type": "union",
                                      "types": [
                                        {
                                          "type": "literal",
                                          "value": "signup"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "invite"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "magiclink"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "recovery"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "email_change"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "email"
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            ],
                            "groups": [
                              {
                                "title": "Properties",
                                "kind": 1024,
                                "children": [
                                  791,
                                  794,
                                  792,
                                  793
                                ]
                              }
                            ],
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 616,
                                "character": 17
                              }
                            ]
                          },
                          {
                            "id": 798,
                            "name": "VerifyTokenHashParams",
                            "kind": 256,
                            "kindString": "Interface",
                            "flags": {},
                            "children": [
                              {
                                "id": 799,
                                "name": "token_hash",
                                "kind": 1024,
                                "kindString": "Property",
                                "flags": {},
                                "comment": {
                                  "shortText": "The token hash used in an email link"
                                },
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 637,
                                    "character": 2
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              },
                              {
                                "id": 800,
                                "name": "type",
                                "kind": 1024,
                                "kindString": "Property",
                                "flags": {},
                                "comment": {
                                  "shortText": "The user's verification type."
                                },
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 640,
                                    "character": 2
                                  }
                                ],
                                "type": {
                                  "type": "reference",
                                  "id": 802,
                                  "name": "EmailOtpType",
                                  "dereferenced": {
                                    "id": 802,
                                    "name": "EmailOtpType",
                                    "kind": 4194304,
                                    "kindString": "Type alias",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 644,
                                        "character": 12
                                      }
                                    ],
                                    "type": {
                                      "type": "union",
                                      "types": [
                                        {
                                          "type": "literal",
                                          "value": "signup"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "invite"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "magiclink"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "recovery"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "email_change"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "email"
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            ],
                            "groups": [
                              {
                                "title": "Properties",
                                "kind": 1024,
                                "children": [
                                  799,
                                  800
                                ]
                              }
                            ],
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 635,
                                "character": 17
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 515,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            80
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            84,
            85
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            143,
            182,
            245,
            349,
            127,
            359,
            321,
            175,
            282,
            179,
            335,
            270,
            131,
            163,
            140,
            166,
            137,
            172,
            311,
            134,
            417,
            419,
            362,
            251,
            169
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/GoTrueClient.ts",
          "line": 116,
          "character": 21
        }
      ]
    },
    {
      "id": 470,
      "name": "NavigatorLockAcquireTimeoutError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 471,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "signatures": [
            {
              "id": 472,
              "name": "new NavigatorLockAcquireTimeoutError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 473,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 470,
                "name": "NavigatorLockAcquireTimeoutError"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "LockAcquireTimeoutError.constructor"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "LockAcquireTimeoutError.constructor"
          }
        },
        {
          "id": 474,
          "name": "isAcquireTimeout",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPublic": true,
            "isReadonly": true
          },
          "sources": [
            {
              "fileName": "src/lib/locks.ts",
              "line": 24,
              "character": 18
            }
          ],
          "type": {
            "type": "literal",
            "value": true
          },
          "defaultValue": "true",
          "inheritedFrom": {
            "type": "reference",
            "name": "LockAcquireTimeoutError.isAcquireTimeout"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            471
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            474
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/locks.ts",
          "line": 31,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "name": "LockAcquireTimeoutError"
        }
      ]
    },
    {
      "id": 627,
      "name": "AMREntry",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "comment": {
        "shortText": "An authentication methord reference (AMR) entry.",
        "text": "An entry designates what method was used by the user to verify their\nidentity and at what time.\n",
        "tags": [
          {
            "tag": "see",
            "text": "{@link GoTrueMFAApi#getAuthenticatorAssuranceLevel}.\n"
          }
        ]
      },
      "children": [
        {
          "id": 628,
          "name": "method",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Authentication method name."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 262,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 629,
          "name": "timestamp",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Timestamp when the method was successfully used. Represents number of\nseconds since 1st January 1970 (UNIX epoch) in UTC."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 268,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            628,
            629
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 260,
          "character": 17
        }
      ]
    },
    {
      "id": 685,
      "name": "AdminUserAttributes",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 687,
          "name": "app_metadata",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "A custom data object to store the user's application specific metadata. This maps to the `auth.users.app_metadata` column.",
            "text": "Only a service role can modify.\n\nThe `app_metadata` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\naccess control information.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 398,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "object"
          }
        },
        {
          "id": 690,
          "name": "ban_duration",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "Determines how long a user is banned for.",
            "text": "The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n\nFor example, some possible durations include: '300ms', '2h45m'.\n\nSetting the ban duration to 'none' lifts the ban on the user.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 424,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 694,
          "name": "email",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The user's email."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 349,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.email"
          }
        },
        {
          "id": 688,
          "name": "email_confirm",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "Confirms the user's email address if set to true.",
            "text": "Only a service role can modify.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 405,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 693,
          "name": "nonce",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
            "text": "Call reauthenticate() to obtain the nonce first.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 366,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.nonce"
          }
        },
        {
          "id": 692,
          "name": "password",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The user's password."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 359,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.password"
          }
        },
        {
          "id": 695,
          "name": "phone",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The user's phone."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 354,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.phone"
          }
        },
        {
          "id": 689,
          "name": "phone_confirm",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "Confirms the user's phone number if set to true.",
            "text": "Only a service role can modify.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 412,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 691,
          "name": "role",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The `role` claim set in the user's access token JWT.",
            "text": "When a user signs up, this role is set to `authenticated` by default. You should only modify the `role` if you need to provision several levels of admin access that have different permissions on individual columns in your database.\n\nSetting this role to `service_role` is not recommended as it grants the user admin privileges.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 433,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 686,
          "name": "user_metadata",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
            "text": "The `user_metadata` should be a JSON object that includes user-specific info, such as their first and last name.\n\nNote: When using the GoTrueAdminApi and wanting to modify a user's metadata,\nthis attribute is used instead of UserAttributes data.\n\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 388,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "object"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            687,
            690,
            694,
            688,
            693,
            692,
            695,
            689,
            691,
            686
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 377,
          "character": 17
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "typeArguments": [
            {
              "type": "reference",
              "id": 679,
              "name": "UserAttributes"
            },
            {
              "type": "literal",
              "value": "data"
            }
          ],
          "qualifiedName": "Omit",
          "package": "typescript",
          "name": "Omit"
        }
      ]
    },
    {
      "id": 642,
      "name": "Factor",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "comment": {
        "shortText": "A MFA factor.",
        "tags": [
          {
            "tag": "see",
            "text": "{@link GoTrueMFAApi#enroll}"
          },
          {
            "tag": "see",
            "text": "{@link GoTrueMFAApi#listFactors}"
          },
          {
            "tag": "see",
            "text": "{@link GoTrueMFAAdminApi#listFactors}\n"
          }
        ]
      },
      "children": [
        {
          "id": 647,
          "name": "created_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 307,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 645,
          "name": "factor_type",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Type of factor. Only `totp` supported with this version but may change in\nfuture versions."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 302,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 644,
          "name": "friendly_name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 296,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 643,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "ID of the factor."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 293,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 646,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Factor's status."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 305,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "verified"
              },
              {
                "type": "literal",
                "value": "unverified"
              }
            ]
          }
        },
        {
          "id": 648,
          "name": "updated_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 308,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            647,
            645,
            644,
            643,
            646,
            648
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 291,
          "character": 17
        }
      ]
    },
    {
      "id": 852,
      "name": "GenerateLinkOptions",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 853,
          "name": "data",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 728,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "object"
          }
        },
        {
          "id": 854,
          "name": "redirectTo",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The URL which will be appended to the email link generated."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 730,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            853,
            854
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 722,
          "character": 17
        }
      ]
    },
    {
      "id": 1012,
      "name": "GoTrueAdminMFAApi",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "comment": {
        "shortText": "Contains the full multi-factor authentication administration API.",
        "tags": [
          {
            "tag": "expermental",
            "text": "\n"
          }
        ]
      },
      "children": [
        {
          "id": 1016,
          "name": "deleteFactor",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 1017,
              "name": "deleteFactor",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Deletes a factor on a user. This will log the user out of all active\nsessions if the deleted factor was verified.",
                "tags": [
                  {
                    "tag": "see",
                    "text": "{@link GoTrueMFAApi#unenroll}\n"
                  },
                  {
                    "tag": "expermental",
                    "text": "\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1018,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 996,
                    "name": "AuthMFAAdminDeleteFactorParams",
                    "dereferenced": {
                      "id": 996,
                      "name": "AuthMFAAdminDeleteFactorParams",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "comment": {
                        "tags": [
                          {
                            "tag": "expermental",
                            "text": "\n"
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1028,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 997,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 998,
                              "name": "id",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "ID of the MFA factor to delete."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1030,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 999,
                              "name": "userId",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "ID of the user whose factor is being deleted."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1033,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                998,
                                999
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1028,
                              "character": 45
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 987,
                    "name": "AuthMFAAdminDeleteFactorResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 1013,
          "name": "listFactors",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 1014,
              "name": "listFactors",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Lists all factors associated to a user."
              },
              "parameters": [
                {
                  "id": 1015,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 1009,
                    "name": "AuthMFAAdminListFactorsParams",
                    "dereferenced": {
                      "id": 1009,
                      "name": "AuthMFAAdminListFactorsParams",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "comment": {
                        "tags": [
                          {
                            "tag": "expermental",
                            "text": "\n"
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1052,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 1010,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1011,
                              "name": "userId",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "ID of the user."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1054,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                1011
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1052,
                              "character": 44
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 1000,
                    "name": "AuthMFAAdminListFactorsResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            1016,
            1013
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1062,
          "character": 17
        }
      ]
    },
    {
      "id": 967,
      "name": "GoTrueMFAApi",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "comment": {
        "shortText": "Contains the full multi-factor authentication API."
      },
      "children": [
        {
          "id": 971,
          "name": "challenge",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 972,
              "name": "challenge",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Prepares a challenge used to verify that a user has access to a MFA\nfactor."
              },
              "parameters": [
                {
                  "id": 973,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 890,
                    "name": "MFAChallengeParams",
                    "dereferenced": {
                      "id": 890,
                      "name": "MFAChallengeParams",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 810,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 891,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 892,
                              "name": "factorId",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "ID of the factor to be challenged. Returned in enroll()."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 812,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                892
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 810,
                              "character": 33
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 935,
                    "name": "AuthMFAChallengeResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 980,
          "name": "challengeAndVerify",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 981,
              "name": "challengeAndVerify",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Helper method which creates a challenge and immediately uses the given code to verify against it thereafter. The verification code is\nprovided by the user by entering a code seen in their authenticator app."
              },
              "parameters": [
                {
                  "id": 982,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 893,
                    "name": "MFAChallengeAndVerifyParams",
                    "dereferenced": {
                      "id": 893,
                      "name": "MFAChallengeAndVerifyParams",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 815,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 894,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 896,
                              "name": "code",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "Verification code provided by the user."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 819,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 895,
                              "name": "factorId",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "ID of the factor being verified. Returned in enroll()."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 817,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                896,
                                895
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 815,
                              "character": 42
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 897,
                    "name": "AuthMFAVerifyResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 968,
          "name": "enroll",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 969,
              "name": "enroll",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Starts the enrollment process for a new Multi-Factor Authentication (MFA)\nfactor. This method creates a new `unverified` factor.\nTo verify a factor, present the QR code or secret to the user and ask them to add it to their\nauthenticator app.\nThe user has to enter the code from their authenticator app to verify it.",
                "text": "Upon verifying a factor, all other sessions are logged out and the current session's authenticator level is promoted to `aal2`.\n\n"
              },
              "parameters": [
                {
                  "id": 970,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 877,
                    "name": "MFAEnrollParams",
                    "dereferenced": {
                      "id": 877,
                      "name": "MFAEnrollParams",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 785,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 878,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 879,
                              "name": "factorType",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "The type of factor being enrolled."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 787,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": "totp"
                              }
                            },
                            {
                              "id": 881,
                              "name": "friendlyName",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Human readable name assigned to the factor."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 791,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 880,
                              "name": "issuer",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Domain which the user is enrolled with."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 789,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                879,
                                881,
                                880
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 785,
                              "character": 30
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 910,
                    "name": "AuthMFAEnrollResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 985,
          "name": "getAuthenticatorAssuranceLevel",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 986,
              "name": "getAuthenticatorAssuranceLevel",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Returns the Authenticator Assurance Level (AAL) for the active session.",
                "text": "- `aal1` (or `null`) means that the user's identity has been verified only\nwith a conventional login (email+password, OTP, magic link, social login,\netc.).\n- `aal2` means that the user's identity has been verified both with a conventional login and at least one MFA factor.\n\nAlthough this method returns a promise, it's fairly quick (microseconds)\nand rarely uses the network. You can use this to check whether the current\nuser needs to be shown a screen to verify their MFA factors.\n\n"
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 956,
                    "name": "AuthMFAGetAuthenticatorAssuranceLevelResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 983,
          "name": "listFactors",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 984,
              "name": "listFactors",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Returns the list of MFA factors enabled for this user.",
                "tags": [
                  {
                    "tag": "see",
                    "text": "{@link GoTrueMFAApi#enroll}"
                  },
                  {
                    "tag": "see",
                    "text": "{@link GoTrueMFAApi#getAuthenticatorAssuranceLevel}"
                  },
                  {
                    "tag": "see",
                    "text": "{@link GoTrueClient#getUser}\n\n"
                  }
                ]
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 945,
                    "name": "AuthMFAListFactorsResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 977,
          "name": "unenroll",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 978,
              "name": "unenroll",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Unenroll removes a MFA factor.\nA user has to have an `aal2` authenticator level in order to unenroll a `verified` factor."
              },
              "parameters": [
                {
                  "id": 979,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 882,
                    "name": "MFAUnenrollParams",
                    "dereferenced": {
                      "id": 882,
                      "name": "MFAUnenrollParams",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 794,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 883,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 884,
                              "name": "factorId",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "ID of the factor being unenrolled."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 796,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                884
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 794,
                              "character": 32
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 926,
                    "name": "AuthMFAUnenrollResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 974,
          "name": "verify",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 975,
              "name": "verify",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Verifies a code against a challenge. The verification code is\nprovided by the user by entering a code seen in their authenticator app."
              },
              "parameters": [
                {
                  "id": 976,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 885,
                    "name": "MFAVerifyParams",
                    "dereferenced": {
                      "id": 885,
                      "name": "MFAVerifyParams",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 799,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 886,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 888,
                              "name": "challengeId",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "ID of the challenge being verified. Returned in challenge()."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 804,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 889,
                              "name": "code",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "Verification code provided by the user."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 807,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 887,
                              "name": "factorId",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "ID of the factor being verified. Returned in enroll()."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 801,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                888,
                                889,
                                887
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 799,
                              "character": 30
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 897,
                    "name": "AuthMFAVerifyResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            971,
            980,
            968,
            985,
            983,
            977,
            974
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 949,
          "character": 17
        }
      ]
    },
    {
      "id": 618,
      "name": "Session",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 621,
          "name": "access_token",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The access token jwt. It is recommended to set the JWT_EXPIRY to a shorter expiry value."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 235,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 624,
          "name": "expires_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "A timestamp of when the token will expire. Returned when a login is confirmed."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 247,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 623,
          "name": "expires_in",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The number of seconds until the token expires (since it was issued). Returned when a login is confirmed."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 243,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 620,
          "name": "provider_refresh_token",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The oauth provider refresh token. If present, this can be used to refresh the provider_token via the oauth provider's API.\nNot all oauth providers return a provider refresh token. If the provider_refresh_token is missing, please refer to the oauth provider's documentation for information on how to obtain the provider refresh token."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 231,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "intrinsic",
                "name": "string"
              }
            ]
          }
        },
        {
          "id": 619,
          "name": "provider_token",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The oauth provider token. If present, this can be used to make external API requests to the oauth provider used."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 226,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "intrinsic",
                "name": "string"
              }
            ]
          }
        },
        {
          "id": 622,
          "name": "refresh_token",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "A one-time used refresh token that never expires."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 239,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 625,
          "name": "token_type",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 248,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 626,
          "name": "user",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 249,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 656,
            "name": "User",
            "dereferenced": {
              "id": 656,
              "name": "User",
              "kind": 256,
              "kindString": "Interface",
              "flags": {},
              "children": [
                {
                  "id": 667,
                  "name": "action_link",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 331,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 658,
                  "name": "app_metadata",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 322,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 649,
                    "name": "UserAppMetadata",
                    "dereferenced": {
                      "id": 649,
                      "name": "UserAppMetadata",
                      "kind": 256,
                      "kindString": "Interface",
                      "flags": {},
                      "children": [
                        {
                          "id": 650,
                          "name": "provider",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 312,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            650
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 311,
                          "character": 17
                        }
                      ],
                      "indexSignature": {
                        "id": 651,
                        "name": "__index",
                        "kind": 8192,
                        "kindString": "Index signature",
                        "flags": {},
                        "parameters": [
                          {
                            "id": 652,
                            "name": "key",
                            "kind": 32768,
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      }
                    }
                  }
                },
                {
                  "id": 660,
                  "name": "aud",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 324,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 661,
                  "name": "confirmation_sent_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 325,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 671,
                  "name": "confirmed_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 335,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 670,
                  "name": "created_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 334,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 668,
                  "name": "email",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 332,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 663,
                  "name": "email_change_sent_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 327,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 672,
                  "name": "email_confirmed_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 336,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 678,
                  "name": "factors",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 342,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "id": 642,
                      "name": "Factor"
                    }
                  }
                },
                {
                  "id": 657,
                  "name": "id",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 321,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 677,
                  "name": "identities",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 341,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "id": 630,
                      "name": "UserIdentity"
                    }
                  }
                },
                {
                  "id": 666,
                  "name": "invited_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 330,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 674,
                  "name": "last_sign_in_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 338,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 664,
                  "name": "new_email",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 328,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 665,
                  "name": "new_phone",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 329,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 669,
                  "name": "phone",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 333,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 673,
                  "name": "phone_confirmed_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 337,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 662,
                  "name": "recovery_sent_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 326,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 675,
                  "name": "role",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 339,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 676,
                  "name": "updated_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 340,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 659,
                  "name": "user_metadata",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 323,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 653,
                    "name": "UserMetadata",
                    "dereferenced": {
                      "id": 653,
                      "name": "UserMetadata",
                      "kind": 256,
                      "kindString": "Interface",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 316,
                          "character": 17
                        }
                      ],
                      "indexSignature": {
                        "id": 654,
                        "name": "__index",
                        "kind": 8192,
                        "kindString": "Index signature",
                        "flags": {},
                        "parameters": [
                          {
                            "id": 655,
                            "name": "key",
                            "kind": 32768,
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      }
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    667,
                    658,
                    660,
                    661,
                    671,
                    670,
                    668,
                    663,
                    672,
                    678,
                    657,
                    677,
                    666,
                    674,
                    664,
                    665,
                    669,
                    673,
                    662,
                    675,
                    676,
                    659
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 320,
                  "character": 17
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            621,
            624,
            623,
            620,
            619,
            622,
            625,
            626
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 222,
          "character": 17
        }
      ]
    },
    {
      "id": 696,
      "name": "Subscription",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 697,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The subscriber UUID. This will be set by the client."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 440,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 698,
          "name": "callback",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 444,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 699,
              "name": "callback",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "The function to call every time there is an event. eg: (eventName) => {}"
              },
              "parameters": [
                {
                  "id": 700,
                  "name": "event",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 480,
                    "name": "AuthChangeEvent",
                    "dereferenced": {
                      "id": 480,
                      "name": "AuthChangeEvent",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 30,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "INITIAL_SESSION"
                          },
                          {
                            "type": "literal",
                            "value": "PASSWORD_RECOVERY"
                          },
                          {
                            "type": "literal",
                            "value": "SIGNED_IN"
                          },
                          {
                            "type": "literal",
                            "value": "SIGNED_OUT"
                          },
                          {
                            "type": "literal",
                            "value": "TOKEN_REFRESHED"
                          },
                          {
                            "type": "literal",
                            "value": "USER_UPDATED"
                          },
                          {
                            "id": 479,
                            "name": "AuthChangeEventMFA",
                            "kind": 4194304,
                            "kindString": "Type alias",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 28,
                                "character": 12
                              }
                            ],
                            "type": {
                              "type": "literal",
                              "value": "MFA_CHALLENGE_VERIFIED"
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                {
                  "id": 701,
                  "name": "session",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 618,
                        "name": "Session"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 702,
          "name": "unsubscribe",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 448,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 703,
              "name": "unsubscribe",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Call this to remove the listener."
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            697
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            698,
            702
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 436,
          "character": 17
        }
      ]
    },
    {
      "id": 704,
      "name": "UpdatableFactorAttributes",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 705,
          "name": "friendlyName",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 452,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            705
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 451,
          "character": 17
        }
      ]
    },
    {
      "id": 656,
      "name": "User",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 667,
          "name": "action_link",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 331,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 658,
          "name": "app_metadata",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 322,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 649,
            "name": "UserAppMetadata",
            "dereferenced": {
              "id": 649,
              "name": "UserAppMetadata",
              "kind": 256,
              "kindString": "Interface",
              "flags": {},
              "children": [
                {
                  "id": 650,
                  "name": "provider",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 312,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    650
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 311,
                  "character": 17
                }
              ],
              "indexSignature": {
                "id": 651,
                "name": "__index",
                "kind": 8192,
                "kindString": "Index signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 652,
                    "name": "key",
                    "kind": 32768,
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "any"
                }
              }
            }
          }
        },
        {
          "id": 660,
          "name": "aud",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 324,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 661,
          "name": "confirmation_sent_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 325,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 671,
          "name": "confirmed_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 335,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 670,
          "name": "created_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 334,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 668,
          "name": "email",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 332,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 663,
          "name": "email_change_sent_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 327,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 672,
          "name": "email_confirmed_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 336,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 678,
          "name": "factors",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 342,
              "character": 2
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 642,
              "name": "Factor"
            }
          }
        },
        {
          "id": 657,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 321,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 677,
          "name": "identities",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 341,
              "character": 2
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 630,
              "name": "UserIdentity"
            }
          }
        },
        {
          "id": 666,
          "name": "invited_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 330,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 674,
          "name": "last_sign_in_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 338,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 664,
          "name": "new_email",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 328,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 665,
          "name": "new_phone",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 329,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 669,
          "name": "phone",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 333,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 673,
          "name": "phone_confirmed_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 337,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 662,
          "name": "recovery_sent_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 326,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 675,
          "name": "role",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 339,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 676,
          "name": "updated_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 340,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 659,
          "name": "user_metadata",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 323,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 653,
            "name": "UserMetadata",
            "dereferenced": {
              "id": 653,
              "name": "UserMetadata",
              "kind": 256,
              "kindString": "Interface",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 316,
                  "character": 17
                }
              ],
              "indexSignature": {
                "id": 654,
                "name": "__index",
                "kind": 8192,
                "kindString": "Index signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 655,
                    "name": "key",
                    "kind": 32768,
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "any"
                }
              }
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            667,
            658,
            660,
            661,
            671,
            670,
            668,
            663,
            672,
            678,
            657,
            677,
            666,
            674,
            664,
            665,
            669,
            673,
            662,
            675,
            676,
            659
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 320,
          "character": 17
        }
      ]
    },
    {
      "id": 649,
      "name": "UserAppMetadata",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 650,
          "name": "provider",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 312,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            650
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 311,
          "character": 17
        }
      ],
      "indexSignature": {
        "id": 651,
        "name": "__index",
        "kind": 8192,
        "kindString": "Index signature",
        "flags": {},
        "parameters": [
          {
            "id": 652,
            "name": "key",
            "kind": 32768,
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        }
      }
    },
    {
      "id": 679,
      "name": "UserAttributes",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 684,
          "name": "data",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 374,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "object"
          }
        },
        {
          "id": 680,
          "name": "email",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The user's email."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 349,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 683,
          "name": "nonce",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
            "text": "Call reauthenticate() to obtain the nonce first.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 366,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 682,
          "name": "password",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The user's password."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 359,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 681,
          "name": "phone",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The user's phone."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 354,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            684,
            680,
            683,
            682,
            681
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 345,
          "character": 17
        }
      ]
    },
    {
      "id": 630,
      "name": "UserIdentity",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 639,
          "name": "created_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 279,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 631,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 272,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 633,
          "name": "identity_data",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 274,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 634,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "indexSignature": {
                "id": 635,
                "name": "__index",
                "kind": 8192,
                "kindString": "Index signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 636,
                    "name": "key",
                    "kind": 32768,
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "any"
                }
              }
            }
          }
        },
        {
          "id": 637,
          "name": "identity_id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 277,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 640,
          "name": "last_sign_in_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 280,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 638,
          "name": "provider",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 278,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 641,
          "name": "updated_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 281,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 632,
          "name": "user_id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 273,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            639,
            631,
            633,
            637,
            640,
            638,
            641,
            632
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 271,
          "character": 17
        }
      ]
    },
    {
      "id": 653,
      "name": "UserMetadata",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 316,
          "character": 17
        }
      ],
      "indexSignature": {
        "id": 654,
        "name": "__index",
        "kind": 8192,
        "kindString": "Index signature",
        "flags": {},
        "parameters": [
          {
            "id": 655,
            "name": "key",
            "kind": 32768,
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        }
      }
    },
    {
      "id": 790,
      "name": "VerifyEmailOtpParams",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 791,
          "name": "email",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The user's email address."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 618,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 794,
          "name": "options",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 623,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 795,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 797,
                  "name": "captchaToken",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Verification token received when the user completes the captcha on the site.",
                    "tags": [
                      {
                        "tag": "deprecated",
                        "text": "\n"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 631,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 796,
                  "name": "redirectTo",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "A URL to send the user to after they are confirmed."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 625,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    797,
                    796
                  ]
                }
              ]
            }
          }
        },
        {
          "id": 792,
          "name": "token",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The otp sent to the user's email address."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 620,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 793,
          "name": "type",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The user's verification type."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 622,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 802,
            "name": "EmailOtpType",
            "dereferenced": {
              "id": 802,
              "name": "EmailOtpType",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 644,
                  "character": 12
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "signup"
                  },
                  {
                    "type": "literal",
                    "value": "invite"
                  },
                  {
                    "type": "literal",
                    "value": "magiclink"
                  },
                  {
                    "type": "literal",
                    "value": "recovery"
                  },
                  {
                    "type": "literal",
                    "value": "email_change"
                  },
                  {
                    "type": "literal",
                    "value": "email"
                  }
                ]
              }
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            791,
            794,
            792,
            793
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 616,
          "character": 17
        }
      ]
    },
    {
      "id": 782,
      "name": "VerifyMobileOtpParams",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 786,
          "name": "options",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 604,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 787,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 789,
                  "name": "captchaToken",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Verification token received when the user completes the captcha on the site.",
                    "tags": [
                      {
                        "tag": "deprecated",
                        "text": "\n"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 613,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 788,
                  "name": "redirectTo",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "A URL to send the user to after they are confirmed."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 606,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    789,
                    788
                  ]
                }
              ]
            }
          }
        },
        {
          "id": 783,
          "name": "phone",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The user's phone number."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 599,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 784,
          "name": "token",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The otp sent to the user's phone number."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 601,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 785,
          "name": "type",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The user's verification type."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 603,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 801,
            "name": "MobileOtpType",
            "dereferenced": {
              "id": 801,
              "name": "MobileOtpType",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 643,
                  "character": 12
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "sms"
                  },
                  {
                    "type": "literal",
                    "value": "phone_change"
                  }
                ]
              }
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            786,
            783,
            784,
            785
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 597,
          "character": 17
        }
      ]
    },
    {
      "id": 798,
      "name": "VerifyTokenHashParams",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 799,
          "name": "token_hash",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The token hash used in an email link"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 637,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 800,
          "name": "type",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The user's verification type."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 640,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 802,
            "name": "EmailOtpType",
            "dereferenced": {
              "id": 802,
              "name": "EmailOtpType",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 644,
                  "character": 12
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "signup"
                  },
                  {
                    "type": "literal",
                    "value": "invite"
                  },
                  {
                    "type": "literal",
                    "value": "magiclink"
                  },
                  {
                    "type": "literal",
                    "value": "recovery"
                  },
                  {
                    "type": "literal",
                    "value": "email_change"
                  },
                  {
                    "type": "literal",
                    "value": "email"
                  }
                ]
              }
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            799,
            800
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 635,
          "character": 17
        }
      ]
    },
    {
      "id": 480,
      "name": "AuthChangeEvent",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 30,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "INITIAL_SESSION"
          },
          {
            "type": "literal",
            "value": "PASSWORD_RECOVERY"
          },
          {
            "type": "literal",
            "value": "SIGNED_IN"
          },
          {
            "type": "literal",
            "value": "SIGNED_OUT"
          },
          {
            "type": "literal",
            "value": "TOKEN_REFRESHED"
          },
          {
            "type": "literal",
            "value": "USER_UPDATED"
          },
          {
            "id": 479,
            "name": "AuthChangeEventMFA",
            "kind": 4194304,
            "kindString": "Type alias",
            "flags": {},
            "sources": [
              {
                "fileName": "src/lib/types.ts",
                "line": 28,
                "character": 12
              }
            ],
            "type": {
              "type": "literal",
              "value": "MFA_CHALLENGE_VERIFIED"
            }
          }
        ]
      }
    },
    {
      "id": 479,
      "name": "AuthChangeEventMFA",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 28,
          "character": 12
        }
      ],
      "type": {
        "type": "literal",
        "value": "MFA_CHALLENGE_VERIFIED"
      }
    },
    {
      "id": 759,
      "name": "AuthFlowType",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 565,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "implicit"
          },
          {
            "type": "literal",
            "value": "pkce"
          }
        ]
      }
    },
    {
      "id": 996,
      "name": "AuthMFAAdminDeleteFactorParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "tags": [
          {
            "tag": "expermental",
            "text": "\n"
          }
        ]
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1028,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 997,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 998,
              "name": "id",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the MFA factor to delete."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1030,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 999,
              "name": "userId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the user whose factor is being deleted."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1033,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                998,
                999
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1028,
              "character": 45
            }
          ]
        }
      }
    },
    {
      "id": 987,
      "name": "AuthMFAAdminDeleteFactorResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "tags": [
          {
            "tag": "expermental",
            "text": "\n"
          }
        ]
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1015,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 988,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 989,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1017,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 990,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 991,
                          "name": "id",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "ID of the factor that was successfully deleted."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1019,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            991
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1017,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 992,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1021,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    989,
                    992
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1016,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 993,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 994,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1023,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 995,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1023,
                      "character": 18
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1058,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    994,
                    995
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1023,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 1009,
      "name": "AuthMFAAdminListFactorsParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "tags": [
          {
            "tag": "expermental",
            "text": "\n"
          }
        ]
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1052,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 1010,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 1011,
              "name": "userId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the user."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1054,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                1011
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1052,
              "character": 44
            }
          ]
        }
      }
    },
    {
      "id": 1000,
      "name": "AuthMFAAdminListFactorsResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "tags": [
          {
            "tag": "expermental",
            "text": "\n"
          }
        ]
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1039,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 1001,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1002,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1041,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1003,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 1004,
                          "name": "factors",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "All factors attached to the user."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1043,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 642,
                              "name": "Factor"
                            }
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            1004
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1041,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1005,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1045,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    1002,
                    1005
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1040,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 1006,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1007,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1047,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 1008,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1047,
                      "character": 18
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1058,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    1007,
                    1008
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1047,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 935,
      "name": "AuthMFAChallengeResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 892,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 936,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 937,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 894,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 938,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 940,
                          "name": "expires_at",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Timestamp in UNIX seconds when this challenge will no longer be usable."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 899,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        },
                        {
                          "id": 939,
                          "name": "id",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "ID of the newly created challenge."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 896,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            940,
                            939
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 894,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 941,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 901,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    937,
                    941
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 893,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 942,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 943,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 903,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 944,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 903,
                      "character": 18
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1058,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    943,
                    944
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 903,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 910,
      "name": "AuthMFAEnrollResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 847,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 911,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 912,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 849,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 913,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 921,
                          "name": "friendly_name",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Friendly name of the factor, useful for distinguishing between factors"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 873,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 914,
                          "name": "id",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "ID of the factor that was just enrolled (in an unverified state)."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 851,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 916,
                          "name": "totp",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "TOTP enrollment information."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 857,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 917,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 918,
                                  "name": "qr_code",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "Contains a QR code encoding the authenticator URI. You can\nconvert it to a URL by prepending `data:image/svg+xml;utf-8,` to\nthe value. Avoid logging this value to the console."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 861,
                                      "character": 10
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 919,
                                  "name": "secret",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The TOTP secret (also encoded in the QR code). Show this secret\nin a password-style field to the user, in case they are unable to\nscan the QR code. Avoid logging this value to the console."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 866,
                                      "character": 10
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 920,
                                  "name": "uri",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The authenticator URI encoded within the QR code, should you need\nto use it. Avoid loggin this value to the console."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 870,
                                      "character": 10
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    918,
                                    919,
                                    920
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 857,
                                  "character": 14
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 915,
                          "name": "type",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Type of MFA factor. Only `totp` supported for now."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 854,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "totp"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            921,
                            914,
                            916,
                            915
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 849,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 922,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 875,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    912,
                    922
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 848,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 923,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 924,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 878,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 925,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 879,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1058,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    924,
                    925
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 877,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 956,
      "name": "AuthMFAGetAuthenticatorAssuranceLevelResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 920,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 957,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 958,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 922,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 959,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 962,
                          "name": "currentAuthenticationMethods",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "A list of all authentication methods attached to this session. Use\nthe information here to detect the last time a user verified a\nfactor, for example if implementing a step-up scenario."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 939,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 627,
                              "name": "AMREntry"
                            }
                          }
                        },
                        {
                          "id": 960,
                          "name": "currentLevel",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Current AAL level of the session."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 924,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "id": 955,
                                "name": "AuthenticatorAssuranceLevels"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        },
                        {
                          "id": 961,
                          "name": "nextLevel",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Next possible AAL level for the session. If the next level is higher\nthan the current one, the user should go through MFA.",
                            "tags": [
                              {
                                "tag": "see",
                                "text": "{@link GoTrueMFAApi#challenge}\n"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 932,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "id": 955,
                                "name": "AuthenticatorAssuranceLevels"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            962,
                            960,
                            961
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 922,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 963,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 941,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    958,
                    963
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 921,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 964,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 965,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 943,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 966,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 943,
                      "character": 18
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1058,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    965,
                    966
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 943,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 945,
      "name": "AuthMFAListFactorsResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 905,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 946,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 947,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 907,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 948,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 949,
                          "name": "all",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "All available factors (verified and unverified)."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 909,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 642,
                              "name": "Factor"
                            }
                          }
                        },
                        {
                          "id": 950,
                          "name": "totp",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Only verified TOTP factors. (A subset of `all`.)"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 912,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 642,
                              "name": "Factor"
                            }
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            949,
                            950
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 907,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 951,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 914,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    947,
                    951
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 906,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 952,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 953,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 916,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 954,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 916,
                      "character": 18
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1058,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    953,
                    954
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 916,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 926,
      "name": "AuthMFAUnenrollResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 882,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 927,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 928,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 884,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 929,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 930,
                          "name": "id",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "ID of the factor that was successfully unenrolled."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 886,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            930
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 884,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 931,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 888,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    928,
                    931
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 883,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 932,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 933,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 890,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 934,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 890,
                      "character": 18
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1058,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    933,
                    934
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 890,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 897,
      "name": "AuthMFAVerifyResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 822,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 898,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 899,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 824,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 900,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 901,
                          "name": "access_token",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "New access token (JWT) after successful verification."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 826,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 903,
                          "name": "expires_in",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Number of seconds in which the access token will expire."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 832,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        },
                        {
                          "id": 904,
                          "name": "refresh_token",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Refresh token you can use to obtain new access tokens when expired."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 835,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 902,
                          "name": "token_type",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Type of token, typically `Bearer`."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 829,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 905,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Updated user profile."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 838,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 656,
                            "name": "User"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            901,
                            903,
                            904,
                            902,
                            905
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 824,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 906,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 840,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    899,
                    906
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 823,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 907,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 908,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 843,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 909,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 844,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1058,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    908,
                    909
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 842,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 542,
      "name": "AuthOtpResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "shortText": "AuthOtpResponse is returned when OTP is used.",
        "text": "{@see AuthRsponse}\n"
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 129,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 543,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 544,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 131,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 545,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 548,
                          "name": "messageId",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 131,
                              "character": 41
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        },
                        {
                          "id": 547,
                          "name": "session",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 131,
                              "character": 26
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 546,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 131,
                              "character": 14
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            548,
                            547,
                            546
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 131,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 549,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 132,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    544,
                    549
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 130,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 550,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 551,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 135,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 552,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 555,
                          "name": "messageId",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 135,
                              "character": 41
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        },
                        {
                          "id": 554,
                          "name": "session",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 135,
                              "character": 26
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 553,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 135,
                              "character": 14
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            555,
                            554,
                            553
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 135,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 556,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 136,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1058,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    551,
                    556
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 134,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 515,
      "name": "AuthResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 91,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 516,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 517,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 93,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 518,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 520,
                          "name": "session",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 95,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "id": 618,
                                "name": "Session"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        },
                        {
                          "id": 519,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 94,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "id": 656,
                                "name": "User"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            520,
                            519
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 93,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 521,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 97,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    517,
                    521
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 92,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 522,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 523,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 100,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 524,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 526,
                          "name": "session",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 102,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 525,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 101,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            526,
                            525
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 100,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 527,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 104,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1058,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    523,
                    527
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 99,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 528,
      "name": "AuthResponsePassword",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 107,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 529,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 530,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 109,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 531,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 533,
                          "name": "session",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 111,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "id": 618,
                                "name": "Session"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        },
                        {
                          "id": 532,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 110,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "id": 656,
                                "name": "User"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        },
                        {
                          "id": 534,
                          "name": "weak_password",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 112,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "id": 511,
                                "name": "WeakPassword"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            533,
                            532,
                            534
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 109,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 535,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 114,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    530,
                    535
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 108,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 536,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 537,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 117,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 538,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 540,
                          "name": "session",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 119,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 539,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 118,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            540,
                            539
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 117,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 541,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 121,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1058,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    537,
                    541
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 116,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 557,
      "name": "AuthTokenResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 139,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 558,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 559,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 141,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 560,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 562,
                          "name": "session",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 143,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 618,
                            "name": "Session"
                          }
                        },
                        {
                          "id": 561,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 142,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 656,
                            "name": "User"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            562,
                            561
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 141,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 563,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 145,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    559,
                    563
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 140,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 564,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 565,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 148,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 566,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 568,
                          "name": "session",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 150,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 567,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 149,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            568,
                            567
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 148,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 569,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 152,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1058,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    565,
                    569
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 147,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 570,
      "name": "AuthTokenResponsePassword",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 155,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 571,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 572,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 157,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 573,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 575,
                          "name": "session",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 159,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 618,
                            "name": "Session"
                          }
                        },
                        {
                          "id": 574,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 158,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 656,
                            "name": "User"
                          }
                        },
                        {
                          "id": 576,
                          "name": "weakPassword",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 160,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 511,
                            "name": "WeakPassword"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            575,
                            574,
                            576
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 157,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 577,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 162,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    572,
                    577
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 156,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 578,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 579,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 165,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 580,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 582,
                          "name": "session",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 167,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 581,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 166,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 583,
                          "name": "weakPassword",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 168,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            582,
                            581,
                            583
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 165,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 584,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 170,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1058,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    579,
                    584
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 164,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 955,
      "name": "AuthenticatorAssuranceLevels",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 918,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "aal1"
          },
          {
            "type": "literal",
            "value": "aal2"
          }
        ]
      }
    },
    {
      "id": 1025,
      "name": "CallRefreshTokenResult",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1104,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 1026,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1028,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1107,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 1027,
                  "name": "session",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1106,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 618,
                    "name": "Session"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    1028,
                    1027
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1105,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 1029,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1031,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1111,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1058,
                    "name": "AuthError"
                  }
                },
                {
                  "id": 1030,
                  "name": "session",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1110,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    1031,
                    1030
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1109,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 802,
      "name": "EmailOtpType",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 644,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "signup"
          },
          {
            "type": "literal",
            "value": "invite"
          },
          {
            "type": "literal",
            "value": "magiclink"
          },
          {
            "type": "literal",
            "value": "recovery"
          },
          {
            "type": "literal",
            "value": "email_change"
          },
          {
            "type": "literal",
            "value": "email"
          }
        ]
      }
    },
    {
      "id": 846,
      "name": "GenerateEmailChangeLinkParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 711,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 847,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 849,
              "name": "email",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's email"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 714,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 850,
              "name": "newEmail",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's new email. Only required if type is 'email_change_current' or 'email_change_new'."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 718,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 851,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 719,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 852,
                    "name": "GenerateLinkOptions"
                  },
                  {
                    "type": "literal",
                    "value": "redirectTo"
                  }
                ],
                "qualifiedName": "Pick",
                "package": "typescript",
                "name": "Pick"
              }
            },
            {
              "id": 848,
              "name": "type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 712,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "email_change_current"
                  },
                  {
                    "type": "literal",
                    "value": "email_change_new"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                849,
                850,
                851,
                848
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 711,
              "character": 44
            }
          ]
        }
      }
    },
    {
      "id": 836,
      "name": "GenerateInviteOrMagiclinkParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 697,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 837,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 839,
              "name": "email",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's email"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 700,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 840,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 701,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 852,
                    "name": "GenerateLinkOptions"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "data"
                      },
                      {
                        "type": "literal",
                        "value": "redirectTo"
                      }
                    ]
                  }
                ],
                "qualifiedName": "Pick",
                "package": "typescript",
                "name": "Pick"
              }
            },
            {
              "id": 838,
              "name": "type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 698,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "invite"
                  },
                  {
                    "type": "literal",
                    "value": "magiclink"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                839,
                840,
                838
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 697,
              "character": 46
            }
          ]
        }
      }
    },
    {
      "id": 855,
      "name": "GenerateLinkParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 733,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "id": 830,
            "name": "GenerateSignupLinkParams",
            "kind": 4194304,
            "kindString": "Type alias",
            "flags": {},
            "sources": [
              {
                "fileName": "src/lib/types.ts",
                "line": 690,
                "character": 12
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 831,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 833,
                    "name": "email",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 692,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 835,
                    "name": "options",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 694,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 852,
                          "name": "GenerateLinkOptions"
                        },
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "data"
                            },
                            {
                              "type": "literal",
                              "value": "redirectTo"
                            }
                          ]
                        }
                      ],
                      "qualifiedName": "Pick",
                      "package": "typescript",
                      "name": "Pick"
                    }
                  },
                  {
                    "id": 834,
                    "name": "password",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 693,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 832,
                    "name": "type",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 691,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "literal",
                      "value": "signup"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "kind": 1024,
                    "children": [
                      833,
                      835,
                      834,
                      832
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 690,
                    "character": 39
                  }
                ]
              }
            }
          },
          {
            "id": 836,
            "name": "GenerateInviteOrMagiclinkParams",
            "kind": 4194304,
            "kindString": "Type alias",
            "flags": {},
            "sources": [
              {
                "fileName": "src/lib/types.ts",
                "line": 697,
                "character": 12
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 837,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 839,
                    "name": "email",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                      "shortText": "The user's email"
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 700,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 840,
                    "name": "options",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 701,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 852,
                          "name": "GenerateLinkOptions"
                        },
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "data"
                            },
                            {
                              "type": "literal",
                              "value": "redirectTo"
                            }
                          ]
                        }
                      ],
                      "qualifiedName": "Pick",
                      "package": "typescript",
                      "name": "Pick"
                    }
                  },
                  {
                    "id": 838,
                    "name": "type",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 698,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "invite"
                        },
                        {
                          "type": "literal",
                          "value": "magiclink"
                        }
                      ]
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "kind": 1024,
                    "children": [
                      839,
                      840,
                      838
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 697,
                    "character": 46
                  }
                ]
              }
            }
          },
          {
            "id": 841,
            "name": "GenerateRecoveryLinkParams",
            "kind": 4194304,
            "kindString": "Type alias",
            "flags": {},
            "sources": [
              {
                "fileName": "src/lib/types.ts",
                "line": 704,
                "character": 12
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 842,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 844,
                    "name": "email",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                      "shortText": "The user's email"
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 707,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 845,
                    "name": "options",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 708,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 852,
                          "name": "GenerateLinkOptions"
                        },
                        {
                          "type": "literal",
                          "value": "redirectTo"
                        }
                      ],
                      "qualifiedName": "Pick",
                      "package": "typescript",
                      "name": "Pick"
                    }
                  },
                  {
                    "id": 843,
                    "name": "type",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 705,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "literal",
                      "value": "recovery"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "kind": 1024,
                    "children": [
                      844,
                      845,
                      843
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 704,
                    "character": 41
                  }
                ]
              }
            }
          },
          {
            "id": 846,
            "name": "GenerateEmailChangeLinkParams",
            "kind": 4194304,
            "kindString": "Type alias",
            "flags": {},
            "sources": [
              {
                "fileName": "src/lib/types.ts",
                "line": 711,
                "character": 12
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 847,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 849,
                    "name": "email",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                      "shortText": "The user's email"
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 714,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 850,
                    "name": "newEmail",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                      "shortText": "The user's new email. Only required if type is 'email_change_current' or 'email_change_new'."
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 718,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 851,
                    "name": "options",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 719,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 852,
                          "name": "GenerateLinkOptions"
                        },
                        {
                          "type": "literal",
                          "value": "redirectTo"
                        }
                      ],
                      "qualifiedName": "Pick",
                      "package": "typescript",
                      "name": "Pick"
                    }
                  },
                  {
                    "id": 848,
                    "name": "type",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 712,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "email_change_current"
                        },
                        {
                          "type": "literal",
                          "value": "email_change_new"
                        }
                      ]
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "kind": 1024,
                    "children": [
                      849,
                      850,
                      851,
                      848
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 711,
                    "character": 44
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "id": 869,
      "name": "GenerateLinkProperties",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "shortText": "The properties related to the email link generated"
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 756,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 870,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 871,
              "name": "action_link",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The email link to send to the user.\nThe action_link follows the following format: auth/v1/verify?type={verification_type}&token={hashed_token}&redirect_to={redirect_to}"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 761,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 872,
              "name": "email_otp",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The raw email OTP.\nYou should send this in the email if you want your users to verify using an OTP instead of the action link."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 766,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 873,
              "name": "hashed_token",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The hashed token appended to the action link."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 770,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 874,
              "name": "redirect_to",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The URL appended to the action link."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 772,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 875,
              "name": "verification_type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The verification type that the email link is associated to."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 774,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 876,
                "name": "GenerateLinkType",
                "dereferenced": {
                  "id": 876,
                  "name": "GenerateLinkType",
                  "kind": 4194304,
                  "kindString": "Type alias",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 777,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "signup"
                      },
                      {
                        "type": "literal",
                        "value": "invite"
                      },
                      {
                        "type": "literal",
                        "value": "magiclink"
                      },
                      {
                        "type": "literal",
                        "value": "recovery"
                      },
                      {
                        "type": "literal",
                        "value": "email_change_current"
                      },
                      {
                        "type": "literal",
                        "value": "email_change_new"
                      }
                    ]
                  }
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                871,
                872,
                873,
                874,
                875
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 756,
              "character": 37
            }
          ]
        }
      }
    },
    {
      "id": 856,
      "name": "GenerateLinkResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 739,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 857,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 858,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 741,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 859,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 860,
                          "name": "properties",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 742,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 869,
                            "name": "GenerateLinkProperties"
                          }
                        },
                        {
                          "id": 861,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 743,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 656,
                            "name": "User"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            860,
                            861
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 741,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 862,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 745,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    858,
                    862
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 740,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 863,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 864,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 748,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 865,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 866,
                          "name": "properties",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 749,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 867,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 750,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            866,
                            867
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 748,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 868,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 752,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1058,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    864,
                    868
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 747,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 876,
      "name": "GenerateLinkType",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 777,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "signup"
          },
          {
            "type": "literal",
            "value": "invite"
          },
          {
            "type": "literal",
            "value": "magiclink"
          },
          {
            "type": "literal",
            "value": "recovery"
          },
          {
            "type": "literal",
            "value": "email_change_current"
          },
          {
            "type": "literal",
            "value": "email_change_new"
          }
        ]
      }
    },
    {
      "id": 841,
      "name": "GenerateRecoveryLinkParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 704,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 842,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 844,
              "name": "email",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's email"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 707,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 845,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 708,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 852,
                    "name": "GenerateLinkOptions"
                  },
                  {
                    "type": "literal",
                    "value": "redirectTo"
                  }
                ],
                "qualifiedName": "Pick",
                "package": "typescript",
                "name": "Pick"
              }
            },
            {
              "id": 843,
              "name": "type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 705,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "recovery"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                844,
                845,
                843
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 704,
              "character": 41
            }
          ]
        }
      }
    },
    {
      "id": 830,
      "name": "GenerateSignupLinkParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 690,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 831,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 833,
              "name": "email",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 692,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 835,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 694,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 852,
                    "name": "GenerateLinkOptions"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "data"
                      },
                      {
                        "type": "literal",
                        "value": "redirectTo"
                      }
                    ]
                  }
                ],
                "qualifiedName": "Pick",
                "package": "typescript",
                "name": "Pick"
              }
            },
            {
              "id": 834,
              "name": "password",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 693,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 832,
              "name": "type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 691,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "signup"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                833,
                835,
                834,
                832
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 690,
              "character": 39
            }
          ]
        }
      }
    },
    {
      "id": 490,
      "name": "GoTrueClientOptions",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 56,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 491,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 499,
              "name": "autoRefreshToken",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 66,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 504,
              "name": "debug",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 76,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 505,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 76,
                          "character": 21
                        }
                      ],
                      "signatures": [
                        {
                          "id": 506,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 507,
                              "name": "message",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 508,
                              "name": "args",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "id": 498,
              "name": "detectSessionInUrl",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 64,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 502,
              "name": "fetch",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 72,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "name": "Fetch"
              }
            },
            {
              "id": 503,
              "name": "flowType",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 74,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 759,
                "name": "AuthFlowType",
                "dereferenced": {
                  "id": 759,
                  "name": "AuthFlowType",
                  "kind": 4194304,
                  "kindString": "Type alias",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 565,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "implicit"
                      },
                      {
                        "type": "literal",
                        "value": "pkce"
                      }
                    ]
                  }
                }
              }
            },
            {
              "id": 493,
              "name": "headers",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 60,
                  "character": 2
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 494,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 60,
                      "character": 12
                    }
                  ],
                  "indexSignature": {
                    "id": 495,
                    "name": "__index",
                    "kind": 8192,
                    "kindString": "Index signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 496,
                        "name": "key",
                        "kind": 32768,
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                }
              }
            },
            {
              "id": 509,
              "name": "lock",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Provide your own locking mechanism based on the environment. By default no locking is done at this time.",
                "tags": [
                  {
                    "tag": "experimental",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 82,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 481,
                "name": "LockFunc",
                "dereferenced": {
                  "id": 481,
                  "name": "LockFunc",
                  "kind": 4194304,
                  "kindString": "Type alias",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 54,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 482,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 54,
                          "character": 23
                        }
                      ],
                      "signatures": [
                        {
                          "id": 483,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "Provide your own global lock implementation instead of the default\nimplementation. The function should acquire a lock for the duration of the\n`fn` async function, such that no other client instances will be able to\nhold it at the same time.",
                            "tags": [
                              {
                                "tag": "experimental",
                                "text": "\n"
                              }
                            ]
                          },
                          "typeParameter": [
                            {
                              "id": 489,
                              "name": "R",
                              "kind": 131072,
                              "kindString": "Type parameter",
                              "flags": {}
                            }
                          ],
                          "parameters": [
                            {
                              "id": 484,
                              "name": "name",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "comment": {
                                "shortText": "Name of the lock to be acquired."
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 485,
                              "name": "acquireTimeout",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "comment": {
                                "shortText": "If negative, no timeout should occur. If positive it\n                      should throw an Error with an `isAcquireTimeout`\n                      property set to true if the operation fails to be\n                      acquired after this much time (ms)."
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "number"
                              }
                            },
                            {
                              "id": 486,
                              "name": "fn",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "comment": {
                                "shortText": "The operation to execute when the lock is acquired.\n"
                              },
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 487,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 54,
                                      "character": 69
                                    }
                                  ],
                                  "signatures": [
                                    {
                                      "id": 488,
                                      "name": "__type",
                                      "kind": 4096,
                                      "kindString": "Call signature",
                                      "flags": {},
                                      "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "id": 489,
                                            "name": "R"
                                          }
                                        ],
                                        "qualifiedName": "Promise",
                                        "package": "typescript",
                                        "name": "Promise"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 489,
                                "name": "R"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            },
            {
              "id": 500,
              "name": "persistSession",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 68,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 501,
              "name": "storage",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 70,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 1019,
                "name": "SupportedStorage",
                "dereferenced": {
                  "id": 1019,
                  "name": "SupportedStorage",
                  "kind": 4194304,
                  "kindString": "Type alias",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1089,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "qualifiedName": "Storage",
                                "package": "typescript",
                                "name": "Storage"
                              },
                              {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": "getItem"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "setItem"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "removeItem"
                                  }
                                ]
                              }
                            ],
                            "qualifiedName": "Pick",
                            "package": "typescript",
                            "name": "Pick"
                          }
                        ],
                        "name": "PromisifyMethods"
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1020,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1021,
                              "name": "isServer",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If set to `true` signals to the library that the storage medium is used\non a server and the values may not be authentic, such as reading from\nrequest cookies. Implementations should not set this to true if the client\nis used on a server that reads storage information from authenticated\nsources, such as a secure database or file."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1099,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                1021
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1091,
                              "character": 4
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              }
            },
            {
              "id": 497,
              "name": "storageKey",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 62,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 492,
              "name": "url",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 58,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                499,
                504,
                498,
                502,
                503,
                493,
                509,
                500,
                501,
                497,
                492
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 56,
              "character": 34
            }
          ]
        }
      }
    },
    {
      "id": 1022,
      "name": "InitializeResult",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1102,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 1023,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 1024,
              "name": "error",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1102,
                  "character": 33
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 1058,
                    "name": "AuthError"
                  },
                  {
                    "type": "literal",
                    "value": null
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                1024
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1102,
              "character": 31
            }
          ]
        }
      }
    },
    {
      "id": 481,
      "name": "LockFunc",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 54,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 482,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 54,
              "character": 23
            }
          ],
          "signatures": [
            {
              "id": 483,
              "name": "__type",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Provide your own global lock implementation instead of the default\nimplementation. The function should acquire a lock for the duration of the\n`fn` async function, such that no other client instances will be able to\nhold it at the same time.",
                "tags": [
                  {
                    "tag": "experimental",
                    "text": "\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 489,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 484,
                  "name": "name",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Name of the lock to be acquired."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 485,
                  "name": "acquireTimeout",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "If negative, no timeout should occur. If positive it\n                      should throw an Error with an `isAcquireTimeout`\n                      property set to true if the operation fails to be\n                      acquired after this much time (ms)."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 486,
                  "name": "fn",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The operation to execute when the lock is acquired.\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 487,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 54,
                          "character": 69
                        }
                      ],
                      "signatures": [
                        {
                          "id": 488,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 489,
                                "name": "R"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 489,
                    "name": "R"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        }
      }
    },
    {
      "id": 893,
      "name": "MFAChallengeAndVerifyParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 815,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 894,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 896,
              "name": "code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Verification code provided by the user."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 819,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 895,
              "name": "factorId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the factor being verified. Returned in enroll()."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 817,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                896,
                895
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 815,
              "character": 42
            }
          ]
        }
      }
    },
    {
      "id": 890,
      "name": "MFAChallengeParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 810,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 891,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 892,
              "name": "factorId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the factor to be challenged. Returned in enroll()."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 812,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                892
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 810,
              "character": 33
            }
          ]
        }
      }
    },
    {
      "id": 877,
      "name": "MFAEnrollParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 785,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 878,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 879,
              "name": "factorType",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The type of factor being enrolled."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 787,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "totp"
              }
            },
            {
              "id": 881,
              "name": "friendlyName",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Human readable name assigned to the factor."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 791,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 880,
              "name": "issuer",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Domain which the user is enrolled with."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 789,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                879,
                881,
                880
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 785,
              "character": 30
            }
          ]
        }
      }
    },
    {
      "id": 882,
      "name": "MFAUnenrollParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 794,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 883,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 884,
              "name": "factorId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the factor being unenrolled."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 796,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                884
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 794,
              "character": 32
            }
          ]
        }
      }
    },
    {
      "id": 885,
      "name": "MFAVerifyParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 799,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 886,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 888,
              "name": "challengeId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the challenge being verified. Returned in challenge()."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 804,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 889,
              "name": "code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Verification code provided by the user."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 807,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 887,
              "name": "factorId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the factor being verified. Returned in enroll()."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 801,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                888,
                889,
                887
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 799,
              "character": 30
            }
          ]
        }
      }
    },
    {
      "id": 801,
      "name": "MobileOtpType",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 643,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "sms"
          },
          {
            "type": "literal",
            "value": "phone_change"
          }
        ]
      }
    },
    {
      "id": 585,
      "name": "OAuthResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 173,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 586,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 587,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 175,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 588,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 589,
                          "name": "provider",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 176,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 478,
                            "name": "Provider"
                          }
                        },
                        {
                          "id": 590,
                          "name": "url",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 177,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            589,
                            590
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 175,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 591,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 179,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    587,
                    591
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 174,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 592,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 593,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 182,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 594,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 595,
                          "name": "provider",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 183,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 478,
                            "name": "Provider"
                          }
                        },
                        {
                          "id": 596,
                          "name": "url",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 184,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            595,
                            596
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 182,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 597,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 186,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1058,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    593,
                    597
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 181,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 1039,
      "name": "PageParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1121,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 1040,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 1041,
              "name": "page",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "The page number"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1123,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 1042,
              "name": "perPage",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Number of items returned per page"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1125,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                1041,
                1042
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1121,
              "character": 25
            }
          ]
        }
      }
    },
    {
      "id": 1032,
      "name": "Pagination",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1114,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 1033,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 1035,
              "name": "lastPage",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1117,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 1034,
              "name": "nextPage",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1116,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "number"
                  },
                  {
                    "type": "literal",
                    "value": null
                  }
                ]
              }
            },
            {
              "id": 1036,
              "name": "total",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1118,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                1035,
                1034,
                1036
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1114,
              "character": 25
            }
          ],
          "indexSignature": {
            "id": 1037,
            "name": "__index",
            "kind": 8192,
            "kindString": "Index signature",
            "flags": {},
            "parameters": [
              {
                "id": 1038,
                "name": "key",
                "kind": 32768,
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        }
      }
    },
    {
      "id": 478,
      "name": "Provider",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "shortText": "One of the providers supported by GoTrue."
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 5,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "apple"
          },
          {
            "type": "literal",
            "value": "azure"
          },
          {
            "type": "literal",
            "value": "bitbucket"
          },
          {
            "type": "literal",
            "value": "discord"
          },
          {
            "type": "literal",
            "value": "facebook"
          },
          {
            "type": "literal",
            "value": "figma"
          },
          {
            "type": "literal",
            "value": "github"
          },
          {
            "type": "literal",
            "value": "gitlab"
          },
          {
            "type": "literal",
            "value": "google"
          },
          {
            "type": "literal",
            "value": "kakao"
          },
          {
            "type": "literal",
            "value": "keycloak"
          },
          {
            "type": "literal",
            "value": "linkedin"
          },
          {
            "type": "literal",
            "value": "linkedin_oidc"
          },
          {
            "type": "literal",
            "value": "notion"
          },
          {
            "type": "literal",
            "value": "slack"
          },
          {
            "type": "literal",
            "value": "spotify"
          },
          {
            "type": "literal",
            "value": "twitch"
          },
          {
            "type": "literal",
            "value": "twitter"
          },
          {
            "type": "literal",
            "value": "workos"
          },
          {
            "type": "literal",
            "value": "zoom"
          },
          {
            "type": "literal",
            "value": "fly"
          }
        ]
      }
    },
    {
      "id": 803,
      "name": "ResendParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 646,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 804,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 806,
                  "name": "email",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 649,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 807,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 650,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 808,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 810,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 654,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 809,
                          "name": "emailRedirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A URL to send the user to after they have signed-in."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 652,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            810,
                            809
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 650,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 805,
                  "name": "type",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 648,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 802,
                        "name": "EmailOtpType"
                      },
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "signup"
                          },
                          {
                            "type": "literal",
                            "value": "email_change"
                          }
                        ]
                      }
                    ],
                    "qualifiedName": "Extract",
                    "package": "typescript",
                    "name": "Extract"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    806,
                    807,
                    805
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 647,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 811,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 814,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 660,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 815,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 816,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 662,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            816
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 660,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 813,
                  "name": "phone",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 659,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 812,
                  "name": "type",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 658,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 801,
                        "name": "MobileOtpType"
                      },
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "sms"
                          },
                          {
                            "type": "literal",
                            "value": "phone_change"
                          }
                        ]
                      }
                    ],
                    "qualifiedName": "Extract",
                    "package": "typescript",
                    "name": "Extract"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    814,
                    813,
                    812
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 657,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 598,
      "name": "SSOResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 189,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 599,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 600,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 191,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 601,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 602,
                          "name": "url",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "URL to open in a browser which will complete the sign-in flow by\ntaking the user to the identity provider's authentication flow.",
                            "text": "On browsers you can set the URL to `window.location.href` to take\nthe user to the authentication flow.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 199,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            602
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 191,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 603,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 201,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    600,
                    603
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 190,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 604,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 605,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 204,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 606,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 205,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1058,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    605,
                    606
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 203,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 706,
      "name": "SignInAnonymouslyCredentials",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 455,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 707,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 708,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 456,
                  "character": 2
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 709,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 711,
                      "name": "captchaToken",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Verification token received when the user completes the captcha on the site."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 464,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 710,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                        "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 462,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "object"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        711,
                        710
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 456,
                      "character": 12
                    }
                  ]
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                708
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 455,
              "character": 43
            }
          ]
        }
      }
    },
    {
      "id": 772,
      "name": "SignInWithIdTokenCredentials",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 581,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 773,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 776,
              "name": "access_token",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "If the ID token contains an `at_hash` claim, then the hash of this value is compared to the value in the ID token."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 587,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 777,
              "name": "nonce",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "If the ID token contains a `nonce` claim, then the hash of this value is compared to the value in the ID token."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 589,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 778,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 590,
                  "character": 2
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 779,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 780,
                      "name": "captchaToken",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Verification token received when the user completes the captcha on the site."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 592,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        780
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 590,
                      "character": 12
                    }
                  ]
                }
              }
            },
            {
              "id": 774,
              "name": "provider",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Provider name or OIDC `iss` value identifying which provider should be used to verify the provided token. Supported names: `google`, `apple`, `azure`, `facebook`, `keycloak` (deprecated)."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 583,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "google"
                  },
                  {
                    "type": "literal",
                    "value": "apple"
                  },
                  {
                    "type": "literal",
                    "value": "azure"
                  },
                  {
                    "type": "literal",
                    "value": "facebook"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              }
            },
            {
              "id": 775,
              "name": "token",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "OIDC ID token issued by the specified provider. The `iss` claim in the ID token must match the supplied provider. Some ID tokens contain an `at_hash` which require that you provide an `access_token` value to be accepted properly. If the token contains a `nonce` claim you must supply the nonce used to obtain the ID token."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 585,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                776,
                777,
                778,
                774,
                775
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 581,
              "character": 43
            }
          ]
        }
      }
    },
    {
      "id": 760,
      "name": "SignInWithOAuthCredentials",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 566,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 761,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 763,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 569,
                  "character": 2
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 764,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 767,
                      "name": "queryParams",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "An object of query params"
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 575,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 768,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 575,
                              "character": 18
                            }
                          ],
                          "indexSignature": {
                            "id": 769,
                            "name": "__index",
                            "kind": 8192,
                            "kindString": "Index signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 770,
                                "name": "key",
                                "kind": 32768,
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        }
                      }
                    },
                    {
                      "id": 765,
                      "name": "redirectTo",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "A URL to send the user to after they are confirmed."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 571,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 766,
                      "name": "scopes",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "A space-separated list of scopes granted to the OAuth application."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 573,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 771,
                      "name": "skipBrowserRedirect",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "If set to true does not immediately redirect the current browser context to visit the OAuth authorization page for the provider."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 577,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        767,
                        765,
                        766,
                        771
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 569,
                      "character": 12
                    }
                  ]
                }
              }
            },
            {
              "id": 762,
              "name": "provider",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "One of the providers supported by GoTrue."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 568,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 478,
                "name": "Provider",
                "dereferenced": {
                  "id": 478,
                  "name": "Provider",
                  "kind": 4194304,
                  "kindString": "Type alias",
                  "flags": {},
                  "comment": {
                    "shortText": "One of the providers supported by GoTrue."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 5,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "apple"
                      },
                      {
                        "type": "literal",
                        "value": "azure"
                      },
                      {
                        "type": "literal",
                        "value": "bitbucket"
                      },
                      {
                        "type": "literal",
                        "value": "discord"
                      },
                      {
                        "type": "literal",
                        "value": "facebook"
                      },
                      {
                        "type": "literal",
                        "value": "figma"
                      },
                      {
                        "type": "literal",
                        "value": "github"
                      },
                      {
                        "type": "literal",
                        "value": "gitlab"
                      },
                      {
                        "type": "literal",
                        "value": "google"
                      },
                      {
                        "type": "literal",
                        "value": "kakao"
                      },
                      {
                        "type": "literal",
                        "value": "keycloak"
                      },
                      {
                        "type": "literal",
                        "value": "linkedin"
                      },
                      {
                        "type": "literal",
                        "value": "linkedin_oidc"
                      },
                      {
                        "type": "literal",
                        "value": "notion"
                      },
                      {
                        "type": "literal",
                        "value": "slack"
                      },
                      {
                        "type": "literal",
                        "value": "spotify"
                      },
                      {
                        "type": "literal",
                        "value": "twitch"
                      },
                      {
                        "type": "literal",
                        "value": "twitter"
                      },
                      {
                        "type": "literal",
                        "value": "workos"
                      },
                      {
                        "type": "literal",
                        "value": "zoom"
                      },
                      {
                        "type": "literal",
                        "value": "fly"
                      }
                    ]
                  }
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                763,
                762
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 566,
              "character": 41
            }
          ]
        }
      }
    },
    {
      "id": 729,
      "name": "SignInWithPasswordCredentials",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 505,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 730,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 731,
                  "name": "email",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's email address."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 508,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 733,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 511,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 734,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 735,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 513,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            735
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 511,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 732,
                  "name": "password",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's password."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 510,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    731,
                    733,
                    732
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 506,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 736,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 739,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 521,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 740,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 741,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 523,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            741
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 521,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 738,
                  "name": "password",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's password."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 520,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 737,
                  "name": "phone",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's phone number."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 518,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    739,
                    738,
                    737
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 516,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 742,
      "name": "SignInWithPasswordlessCredentials",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 527,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 743,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 744,
                  "name": "email",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's email address."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 530,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 745,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 531,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 746,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 750,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 543,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 749,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 541,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        },
                        {
                          "id": 747,
                          "name": "emailRedirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The redirect url embedded in the email link"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 533,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 748,
                          "name": "shouldCreateUser",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If set to false, this method will not create a new user. Defaults to true."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 535,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            750,
                            749,
                            747,
                            748
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 531,
                          "character": 16
                        }
                      ]
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    744,
                    745
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 528,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 751,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 753,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 549,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 754,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 757,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 559,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 758,
                          "name": "channel",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Messaging channel to use (e.g. whatsapp or sms)"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 561,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "sms"
                              },
                              {
                                "type": "literal",
                                "value": "whatsapp"
                              }
                            ]
                          }
                        },
                        {
                          "id": 756,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 557,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        },
                        {
                          "id": 755,
                          "name": "shouldCreateUser",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If set to false, this method will not create a new user. Defaults to true."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 551,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            757,
                            758,
                            756,
                            755
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 549,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 752,
                  "name": "phone",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's phone number."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 548,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    753,
                    752
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 546,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 817,
      "name": "SignInWithSSO",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 666,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 818,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 820,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 671,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 821,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 823,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 675,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 822,
                          "name": "redirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A URL to send the user to after they have signed-in."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 673,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            823,
                            822
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 671,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 819,
                  "name": "providerId",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "UUID of the SSO provider to invoke single-sign on to."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 669,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    820,
                    819
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 667,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 824,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 825,
                  "name": "domain",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "Domain name of the organization for which to invoke single-sign on."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 680,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 826,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 682,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 827,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 829,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 686,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 828,
                          "name": "redirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A URL to send the user to after they have signed-in."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 684,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            829,
                            828
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 682,
                          "character": 16
                        }
                      ]
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    825,
                    826
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 678,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 1043,
      "name": "SignOut",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1128,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 1044,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 1045,
              "name": "scope",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Determines which sessions should be\nlogged out. Global means all\nsessions by this account. Local\nmeans only this session. Others\nmeans all other sessions except the\ncurrent one. When using others,\nthere is no sign-out event fired on\nthe current session!"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1139,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "global"
                  },
                  {
                    "type": "literal",
                    "value": "local"
                  },
                  {
                    "type": "literal",
                    "value": "others"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                1045
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1128,
              "character": 22
            }
          ]
        }
      }
    },
    {
      "id": 712,
      "name": "SignUpWithPasswordCredentials",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 468,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 713,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 714,
                  "name": "email",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's email address."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 471,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 716,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 474,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 717,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 720,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 484,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 719,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 482,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        },
                        {
                          "id": 718,
                          "name": "emailRedirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The redirect url embedded in the email link"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 476,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            720,
                            719,
                            718
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 474,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 715,
                  "name": "password",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's password."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 473,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    714,
                    716,
                    715
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 469,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 721,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 724,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 492,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 725,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 727,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site. Requires a configured WhatsApp sender on Twilio"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 500,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 728,
                          "name": "channel",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Messaging channel to use (e.g. whatsapp or sms)"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 502,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "sms"
                              },
                              {
                                "type": "literal",
                                "value": "whatsapp"
                              }
                            ]
                          }
                        },
                        {
                          "id": 726,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 498,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            727,
                            728,
                            726
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 492,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 723,
                  "name": "password",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's password."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 491,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 722,
                  "name": "phone",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's phone number."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 489,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    724,
                    723,
                    722
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 487,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 1019,
      "name": "SupportedStorage",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1089,
          "character": 12
        }
      ],
      "type": {
        "type": "intersection",
        "types": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "qualifiedName": "Storage",
                    "package": "typescript",
                    "name": "Storage"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "getItem"
                      },
                      {
                        "type": "literal",
                        "value": "setItem"
                      },
                      {
                        "type": "literal",
                        "value": "removeItem"
                      }
                    ]
                  }
                ],
                "qualifiedName": "Pick",
                "package": "typescript",
                "name": "Pick"
              }
            ],
            "name": "PromisifyMethods"
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 1020,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1021,
                  "name": "isServer",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "If set to `true` signals to the library that the storage medium is used\non a server and the values may not be authentic, such as reading from\nrequest cookies. Implementations should not set this to true if the client\nis used on a server that reads storage information from authenticated\nsources, such as a secure database or file."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1099,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    1021
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1091,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 607,
      "name": "UserResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 208,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 608,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 609,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 210,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 610,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 611,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 211,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 656,
                            "name": "User"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            611
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 210,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 612,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 213,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    609,
                    612
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 209,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 613,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 614,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 216,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 615,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 616,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 217,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            616
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 216,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 617,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 219,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1058,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    614,
                    617
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 215,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 781,
      "name": "VerifyOtpParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 596,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "id": 782,
            "name": "VerifyMobileOtpParams",
            "kind": 256,
            "kindString": "Interface",
            "flags": {},
            "children": [
              {
                "id": 786,
                "name": "options",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 604,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 787,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 789,
                        "name": "captchaToken",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "shortText": "Verification token received when the user completes the captcha on the site.",
                          "tags": [
                            {
                              "tag": "deprecated",
                              "text": "\n"
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 613,
                            "character": 4
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 788,
                        "name": "redirectTo",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "shortText": "A URL to send the user to after they are confirmed."
                        },
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 606,
                            "character": 4
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                          789,
                          788
                        ]
                      }
                    ]
                  }
                }
              },
              {
                "id": 783,
                "name": "phone",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {
                  "shortText": "The user's phone number."
                },
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 599,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 784,
                "name": "token",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {
                  "shortText": "The otp sent to the user's phone number."
                },
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 601,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 785,
                "name": "type",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {
                  "shortText": "The user's verification type."
                },
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 603,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 801,
                  "name": "MobileOtpType",
                  "dereferenced": {
                    "id": 801,
                    "name": "MobileOtpType",
                    "kind": 4194304,
                    "kindString": "Type alias",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 643,
                        "character": 12
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "sms"
                        },
                        {
                          "type": "literal",
                          "value": "phone_change"
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "kind": 1024,
                "children": [
                  786,
                  783,
                  784,
                  785
                ]
              }
            ],
            "sources": [
              {
                "fileName": "src/lib/types.ts",
                "line": 597,
                "character": 17
              }
            ]
          },
          {
            "id": 790,
            "name": "VerifyEmailOtpParams",
            "kind": 256,
            "kindString": "Interface",
            "flags": {},
            "children": [
              {
                "id": 791,
                "name": "email",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {
                  "shortText": "The user's email address."
                },
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 618,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 794,
                "name": "options",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 623,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 795,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 797,
                        "name": "captchaToken",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "shortText": "Verification token received when the user completes the captcha on the site.",
                          "tags": [
                            {
                              "tag": "deprecated",
                              "text": "\n"
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 631,
                            "character": 4
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 796,
                        "name": "redirectTo",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "shortText": "A URL to send the user to after they are confirmed."
                        },
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 625,
                            "character": 4
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                          797,
                          796
                        ]
                      }
                    ]
                  }
                }
              },
              {
                "id": 792,
                "name": "token",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {
                  "shortText": "The otp sent to the user's email address."
                },
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 620,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 793,
                "name": "type",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {
                  "shortText": "The user's verification type."
                },
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 622,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 802,
                  "name": "EmailOtpType",
                  "dereferenced": {
                    "id": 802,
                    "name": "EmailOtpType",
                    "kind": 4194304,
                    "kindString": "Type alias",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 644,
                        "character": 12
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "signup"
                        },
                        {
                          "type": "literal",
                          "value": "invite"
                        },
                        {
                          "type": "literal",
                          "value": "magiclink"
                        },
                        {
                          "type": "literal",
                          "value": "recovery"
                        },
                        {
                          "type": "literal",
                          "value": "email_change"
                        },
                        {
                          "type": "literal",
                          "value": "email"
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "kind": 1024,
                "children": [
                  791,
                  794,
                  792,
                  793
                ]
              }
            ],
            "sources": [
              {
                "fileName": "src/lib/types.ts",
                "line": 616,
                "character": 17
              }
            ]
          },
          {
            "id": 798,
            "name": "VerifyTokenHashParams",
            "kind": 256,
            "kindString": "Interface",
            "flags": {},
            "children": [
              {
                "id": 799,
                "name": "token_hash",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {
                  "shortText": "The token hash used in an email link"
                },
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 637,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 800,
                "name": "type",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {
                  "shortText": "The user's verification type."
                },
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 640,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 802,
                  "name": "EmailOtpType",
                  "dereferenced": {
                    "id": 802,
                    "name": "EmailOtpType",
                    "kind": 4194304,
                    "kindString": "Type alias",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 644,
                        "character": 12
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "signup"
                        },
                        {
                          "type": "literal",
                          "value": "invite"
                        },
                        {
                          "type": "literal",
                          "value": "magiclink"
                        },
                        {
                          "type": "literal",
                          "value": "recovery"
                        },
                        {
                          "type": "literal",
                          "value": "email_change"
                        },
                        {
                          "type": "literal",
                          "value": "email"
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "kind": 1024,
                "children": [
                  799,
                  800
                ]
              }
            ],
            "sources": [
              {
                "fileName": "src/lib/types.ts",
                "line": 635,
                "character": 17
              }
            ]
          }
        ]
      }
    },
    {
      "id": 511,
      "name": "WeakPassword",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 86,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 512,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 514,
              "name": "message",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 88,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 513,
              "name": "reasons",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 87,
                  "character": 2
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "id": 510,
                  "name": "WeakPasswordReasons"
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                514,
                513
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 86,
              "character": 27
            }
          ]
        }
      }
    },
    {
      "id": 510,
      "name": "WeakPasswordReasons",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 85,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "length"
          },
          {
            "type": "literal",
            "value": "characters"
          },
          {
            "type": "literal",
            "value": "pwned"
          },
          {
            "type": "intrinsic",
            "name": "string"
          }
        ]
      }
    },
    {
      "id": 460,
      "name": "AuthAdminApi",
      "kind": 32,
      "kindString": "Variable",
      "flags": {
        "isConst": true
      },
      "sources": [
        {
          "fileName": "src/AuthAdminApi.ts",
          "line": 3,
          "character": 6
        }
      ],
      "type": {
        "type": "query",
        "queryType": {
          "type": "reference",
          "id": 1,
          "name": "default"
        }
      },
      "defaultValue": "GoTrueAdminApi"
    },
    {
      "id": 461,
      "name": "AuthClient",
      "kind": 32,
      "kindString": "Variable",
      "flags": {
        "isConst": true
      },
      "sources": [
        {
          "fileName": "src/AuthClient.ts",
          "line": 3,
          "character": 6
        }
      ],
      "type": {
        "type": "query",
        "queryType": {
          "type": "reference",
          "id": 78,
          "name": "default"
        }
      },
      "defaultValue": "GoTrueClient"
    },
    {
      "id": 475,
      "name": "lockInternals",
      "kind": 32,
      "kindString": "Variable",
      "flags": {
        "isConst": true
      },
      "comment": {
        "tags": [
          {
            "tag": "experimental",
            "text": "\n"
          }
        ]
      },
      "sources": [
        {
          "fileName": "src/lib/locks.ts",
          "line": 6,
          "character": 13
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 476,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 477,
              "name": "debug",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "experimental",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/lib/locks.ts",
                  "line": 10,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "!!(\n    globalThis &&\n    supportsLocalStorage() &&\n    globalThis.localStorage &&\n    globalThis.localStorage.getItem('supabase.gotrue-js.locks.debug') === 'true'\n  )"
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                477
              ]
            }
          ]
        }
      },
      "defaultValue": "..."
    },
    {
      "id": 1049,
      "name": "isAuthApiError",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 36,
          "character": 16
        }
      ],
      "signatures": [
        {
          "id": 1050,
          "name": "isAuthApiError",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1051,
              "name": "error",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              }
            }
          ],
          "type": {
            "type": "predicate",
            "name": "error",
            "asserts": false,
            "targetType": {
              "type": "reference",
              "id": 1065,
              "name": "AuthApiError"
            }
          }
        }
      ]
    },
    {
      "id": 1046,
      "name": "isAuthError",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 14,
          "character": 16
        }
      ],
      "signatures": [
        {
          "id": 1047,
          "name": "isAuthError",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1048,
              "name": "error",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              }
            }
          ],
          "type": {
            "type": "predicate",
            "name": "error",
            "asserts": false,
            "targetType": {
              "type": "reference",
              "id": 1058,
              "name": "AuthError"
            }
          }
        }
      ]
    },
    {
      "id": 1052,
      "name": "isAuthRetryableFetchError",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 126,
          "character": 16
        }
      ],
      "signatures": [
        {
          "id": 1053,
          "name": "isAuthRetryableFetchError",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1054,
              "name": "error",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              }
            }
          ],
          "type": {
            "type": "predicate",
            "name": "error",
            "asserts": false,
            "targetType": {
              "type": "reference",
              "id": 1188,
              "name": "AuthRetryableFetchError"
            }
          }
        }
      ]
    },
    {
      "id": 1055,
      "name": "isAuthWeakPasswordError",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 148,
          "character": 16
        }
      ],
      "signatures": [
        {
          "id": 1056,
          "name": "isAuthWeakPasswordError",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1057,
              "name": "error",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              }
            }
          ],
          "type": {
            "type": "predicate",
            "name": "error",
            "asserts": false,
            "targetType": {
              "type": "reference",
              "id": 1202,
              "name": "AuthWeakPasswordError"
            }
          }
        }
      ]
    },
    {
      "id": 462,
      "name": "navigatorLock",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/locks.ts",
          "line": 58,
          "character": 22
        }
      ],
      "signatures": [
        {
          "id": 463,
          "name": "navigatorLock",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Implements a global exclusive lock using the Navigator LockManager API. It\nis available on all browsers released after 2022-03-15 with Safari being the\nlast one to release support. If the API is not available, this function will\nthrow. Make sure you check availablility before configuring {@link\nGoTrueClient}.",
            "text": "You can turn on debugging by setting the `supabase.gotrue-js.locks.debug`\nlocal storage item to `true`.\n\nInternals:\n\nSince the LockManager API does not preserve stack traces for the async\nfunction passed in the `request` method, a trick is used where acquiring the\nlock releases a previously started promise to run the operation in the `fn`\nfunction. The lock waits for that promise to finish (with or without error),\nwhile the function will finally wait for the result anyway.\n"
          },
          "typeParameter": [
            {
              "id": 464,
              "name": "R",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "parameters": [
            {
              "id": 465,
              "name": "name",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "shortText": "Name of the lock to be acquired."
              },
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 466,
              "name": "acquireTimeout",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "shortText": "If negative, no timeout. If 0 an error is thrown if\n                      the lock can't be acquired without waiting. If positive, the lock acquire\n                      will time out after so many milliseconds. An error is\n                      a timeout if it has `isAcquireTimeout` set to true."
              },
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 467,
              "name": "fn",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "shortText": "The operation to run once the lock is acquired.\n"
              },
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 468,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 469,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 464,
                            "name": "R"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 464,
                "name": "R"
              }
            ],
            "qualifiedName": "Promise",
            "package": "typescript",
            "name": "Promise"
          }
        }
      ]
    }
  ],
  "groups": [
    {
      "title": "Classes",
      "kind": 128,
      "children": [
        1065,
        1058,
        1138,
        1125,
        1113,
        1163,
        1188,
        1101,
        1078,
        1202,
        1086,
        1,
        78,
        470
      ]
    },
    {
      "title": "Interfaces",
      "kind": 256,
      "children": [
        627,
        685,
        642,
        852,
        1012,
        967,
        618,
        696,
        704,
        656,
        649,
        679,
        630,
        653,
        790,
        782,
        798
      ]
    },
    {
      "title": "Type Aliases",
      "kind": 4194304,
      "children": [
        480,
        479,
        759,
        996,
        987,
        1009,
        1000,
        935,
        910,
        956,
        945,
        926,
        897,
        542,
        515,
        528,
        557,
        570,
        955,
        1025,
        802,
        846,
        836,
        855,
        869,
        856,
        876,
        841,
        830,
        490,
        1022,
        481,
        893,
        890,
        877,
        882,
        885,
        801,
        585,
        1039,
        1032,
        478,
        803,
        598,
        706,
        772,
        760,
        729,
        742,
        817,
        1043,
        712,
        1019,
        607,
        781,
        511,
        510
      ]
    },
    {
      "title": "Variables",
      "kind": 32,
      "children": [
        460,
        461,
        475
      ]
    },
    {
      "title": "Functions",
      "kind": 64,
      "children": [
        1049,
        1046,
        1052,
        1055,
        462
      ]
    }
  ],
  "sources": [
    {
      "fileName": "src/index.ts",
      "line": 1,
      "character": 0
    }
  ]
}