const Nav = [
  {
    label: 'Getting Started',
    items: [
      { name: 'Supabase JavaScript Library', url: '/reference/javascript/v1', items: [] },
      { name: 'Installing', url: '/reference/javascript/v1/installing', items: [] },
      { name: 'Initializing', url: '/reference/javascript/v1/initializing', items: [] },
      { name: 'Generating Types', url: '/reference/javascript/v1/generating-types', items: [] },
    ],
  },
  {
    label: 'Auth',
    items: [
      { name: 'signUp()', url: '/reference/javascript/v1/auth-signup', items: [] },
      { name: 'signIn()', url: '/reference/javascript/v1/auth-signin', items: [] },
      { name: 'signOut()', url: '/reference/javascript/v1/auth-signout', items: [] },
      { name: 'session()', url: '/reference/javascript/v1/auth-session', items: [] },
      { name: 'user()', url: '/reference/javascript/v1/auth-user', items: [] },
      { name: 'update()', url: '/reference/javascript/v1/auth-update', items: [] },
      { name: 'setAuth()', url: '/reference/javascript/v1/auth-setauth', items: [] },
      {
        name: 'onAuthStateChange()',
        url: '/reference/javascript/v1/auth-onauthstatechanged',
        items: [],
      },
      { name: 'getUser()', url: '/reference/javascript/v1/auth-api-getuser', items: [] },
      {
        name: 'resetPasswordForEmail()',
        url: '/reference/javascript/v1/auth-api-resetpasswordforemail',
        items: [],
      },
    ],
  },
  {
    label: 'Auth (Server Only)',
    items: [
      { name: 'listUsers()', url: '/reference/javascript/v1/auth-api-listusers', items: [] },
      { name: 'createUser()', url: '/reference/javascript/v1/auth-api-createuser', items: [] },
      { name: 'deleteUser()', url: '/reference/javascript/v1/auth-api-deleteuser', items: [] },
      {
        name: 'generateLink()',
        url: '/reference/javascript/v1/auth-api-generatelink',
        items: [],
      },
      {
        name: 'inviteUserByEmail()',
        url: '/reference/javascript/v1/auth-api-inviteuserbyemail',
        items: [],
      },
      {
        name: 'sendMobileOTP()',
        url: '/reference/javascript/v1/auth-api-sendmobileotp',
        items: [],
      },
      {
        name: 'updateUserById()',
        url: '/reference/javascript/v1/auth-api-updateuserbyid',
        items: [],
      },
    ],
  },
  {
    label: 'Functions',
    items: [{ name: 'invoke()', url: '/reference/javascript/v1/invoke', items: [] }],
  },
  {
    label: 'Database',
    items: [
      { name: 'Fetch data: select()', url: '/reference/javascript/v1/select', items: [] },
      { name: 'Create data: insert()', url: '/reference/javascript/v1/insert', items: [] },
      { name: 'Modify data: update()', url: '/reference/javascript/v1/update', items: [] },
      { name: 'Upsert data: upsert()', url: '/reference/javascript/v1/upsert', items: [] },
      { name: 'Delete data: delete()', url: '/reference/javascript/v1/delete', items: [] },
      { name: 'Postgres functions: rpc()', url: '/reference/javascript/v1/rpc', items: [] },
    ],
  },
  {
    label: 'Realtime',
    items: [
      { name: 'on().subscribe()', url: '/reference/javascript/v1/subscribe', items: [] },
      {
        name: 'removeSubscription()',
        url: '/reference/javascript/v1/removesubscription',
        items: [],
      },
      {
        name: 'removeAllSubscriptions()',
        url: '/reference/javascript/v1/removeallsubscriptions',
        items: [],
      },
      { name: 'getSubscriptions()', url: '/reference/javascript/v1/getsubscriptions', items: [] },
    ],
  },
  {
    label: 'Storage',
    items: [
      { name: 'createBucket()', url: '/reference/javascript/v1/storage-createbucket', items: [] },
      { name: 'getBucket()', url: '/reference/javascript/v1/storage-getbucket', items: [] },
      { name: 'listBuckets()', url: '/reference/javascript/v1/storage-listbuckets', items: [] },
      { name: 'updateBucket()', url: '/reference/javascript/v1/storage-updatebucket', items: [] },
      { name: 'deleteBucket()', url: '/reference/javascript/v1/storage-deletebucket', items: [] },
      { name: 'emptyBucket()', url: '/reference/javascript/v1/storage-emptybucket', items: [] },
      { name: 'from.upload()', url: '/reference/javascript/v1/storage-from-upload', items: [] },
      { name: 'from.download()', url: '/reference/javascript/v1/storage-from-download', items: [] },
      { name: 'from.list()', url: '/reference/javascript/v1/storage-from-list', items: [] },
      { name: 'from.update()', url: '/reference/javascript/v1/storage-from-update', items: [] },
      { name: 'from.move()', url: '/reference/javascript/v1/storage-from-move', items: [] },
      { name: 'from.copy()', url: '/reference/javascript/v1/storage-from-copy', items: [] },
      { name: 'from.remove()', url: '/reference/javascript/v1/storage-from-remove', items: [] },
      {
        name: 'from.createSignedUrl()',
        url: '/reference/javascript/v1/storage-from-createsignedurl',
        items: [],
      },
      {
        name: 'from.createSignedUrls()',
        url: '/reference/javascript/v1/storage-from-createsignedurls',
        items: [],
      },
      {
        name: 'from.getPublicUrl()',
        url: '/reference/javascript/v1/storage-from-getpublicurl',
        items: [],
      },
    ],
  },
  {
    label: 'Filters',
    items: [
      { name: 'Using Filters', url: '/reference/javascript/v1/using-filters', items: [] },
      { name: 'eq()', url: '/reference/javascript/v1/eq', items: [] },
      { name: 'neq()', url: '/reference/javascript/v1/neq', items: [] },
      { name: 'gt()', url: '/reference/javascript/v1/gt', items: [] },
      { name: 'gte()', url: '/reference/javascript/v1/gte', items: [] },
      { name: 'lt()', url: '/reference/javascript/v1/lt', items: [] },
      { name: 'lte()', url: '/reference/javascript/v1/lte', items: [] },
      { name: 'like()', url: '/reference/javascript/v1/like', items: [] },
      { name: 'ilike()', url: '/reference/javascript/v1/ilike', items: [] },
      { name: 'is()', url: '/reference/javascript/v1/is', items: [] },
      { name: 'in()', url: '/reference/javascript/v1/in', items: [] },
      { name: 'contains()', url: '/reference/javascript/v1/contains', items: [] },
      { name: 'containedBy()', url: '/reference/javascript/v1/containedby', items: [] },
      { name: 'rangeGt()', url: '/reference/javascript/v1/rangegt', items: [] },
      { name: 'rangeGte()', url: '/reference/javascript/v1/rangegte', items: [] },
      { name: 'rangeLt()', url: '/reference/javascript/v1/rangelt', items: [] },
      { name: 'rangeLte()', url: '/reference/javascript/v1/rangelte', items: [] },
      { name: 'rangeAdjacent()', url: '/reference/javascript/v1/rangeadjacent', items: [] },
      { name: 'overlaps()', url: '/reference/javascript/v1/overlaps', items: [] },
      { name: 'textSearch()', url: '/reference/javascript/v1/textsearch', items: [] },
      { name: 'match()', url: '/reference/javascript/v1/match', items: [] },
      { name: 'not()', url: '/reference/javascript/v1/not', items: [] },
      { name: 'or()', url: '/reference/javascript/v1/or', items: [] },
      { name: 'filter()', url: '/reference/javascript/v1/filter', items: [] },
    ],
  },
  {
    label: 'Modifiers',
    items: [
      { name: 'Using Modifiers', url: '/reference/javascript/v1/using-modifiers', items: [] },
      { name: 'order()', url: '/reference/javascript/v1/order', items: [] },
      { name: 'limit()', url: '/reference/javascript/v1/limit', items: [] },
      { name: 'range()', url: '/reference/javascript/v1/range', items: [] },
      { name: 'single()', url: '/reference/javascript/v1/single', items: [] },
      { name: 'maybeSingle()', url: '/reference/javascript/v1/maybesingle', items: [] },
    ],
  },
]

export default Nav
