// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`TS type spec parsing > matches snapshot 1`] = `
"[
  {
    "name": "@supabase/supabase-js",
    "methods": {
      "@supabase/supabase-js.index.SupabaseClient.constructor": {
        "name": "@supabase/supabase-js.index.SupabaseClient.constructor",
        "params": [
          {
            "name": "supabaseUrl",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The unique Supabase URL which is supplied when you create a new project in your project dashboard."
            }
          },
          {
            "name": "supabaseKey",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The unique Supabase Key which is supplied when you create a new project in your project dashboard."
            }
          },
          {
            "name": "options",
            "type": {
              "name": "SupabaseClientOptions",
              "type": "object",
              "properties": [
                {
                  "name": "auth",
                  "type": {
                    "type": "object",
                    "properties": [
                      {
                        "name": "autoRefreshToken",
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "Automatically refreshes the token for logged-in users. Defaults to true."
                        }
                      },
                      {
                        "name": "debug",
                        "type": {
                          "type": "nameOnly",
                          "name": "SupabaseAuthClientOptions['debug']"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "If debug messages for authentication client are emitted. Can be used to inspect the behavior of the library."
                        }
                      },
                      {
                        "name": "detectSessionInUrl",
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "Detect a session from the URL. Used for OAuth login callbacks. Defaults to true."
                        }
                      },
                      {
                        "name": "flowType",
                        "type": {
                          "type": "nameOnly",
                          "name": "SupabaseAuthClientOptions['flowType']"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "OAuth flow to use - defaults to implicit flow. PKCE is recommended for mobile and server-side applications."
                        }
                      },
                      {
                        "name": "lock",
                        "type": {
                          "type": "nameOnly",
                          "name": "SupabaseAuthClientOptions['lock']"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "Provide your own locking mechanism based on the environment. By default no locking is done at this time.",
                          "tags": [
                            {
                              "tag": "experimental",
                              "text": "\\n"
                            }
                          ]
                        }
                      },
                      {
                        "name": "persistSession",
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "Whether to persist a logged-in session to storage. Defaults to true."
                        }
                      },
                      {
                        "name": "storage",
                        "type": {
                          "type": "nameOnly",
                          "name": "SupabaseAuthClientOptions['storage']"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "A storage provider. Used to store the logged-in session."
                        }
                      },
                      {
                        "name": "storageKey",
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "Optional key name used for storing tokens in local storage."
                        }
                      }
                    ]
                  },
                  "isOptional": true
                },
                {
                  "name": "db",
                  "type": {
                    "type": "object",
                    "properties": [
                      {
                        "name": "schema",
                        "type": {
                          "type": "nameOnly",
                          "name": "SchemaName"
                        },
                        "isOptional": true
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The Postgres schema which your tables belong to. Must be on the list of exposed schemas in Supabase. Defaults to \`public\`."
                  }
                },
                {
                  "name": "global",
                  "type": {
                    "type": "object",
                    "properties": [
                      {
                        "name": "fetch",
                        "isOptional": true,
                        "comment": {
                          "shortText": "A custom \`fetch\` implementation."
                        }
                      },
                      {
                        "name": "headers",
                        "type": {
                          "type": "record",
                          "name": "Record",
                          "keyType": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "valueType": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "Optional headers for initializing the client."
                        }
                      }
                    ]
                  },
                  "isOptional": true
                },
                {
                  "name": "realtime",
                  "type": {
                    "type": "nameOnly",
                    "name": "@supabase/realtime-js.RealtimeClientOptions"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Options passed to the realtime-js instance"
                  }
                }
              ]
            },
            "isOptional": true
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Database"
          }
        },
        "comment": {
          "shortText": "Create a new client for use in the browser."
        }
      },
      "@supabase/supabase-js.index.SupabaseClient._getAccessToken": {
        "name": "@supabase/supabase-js.index.SupabaseClient._getAccessToken",
        "params": [],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "intrinsic",
                  "name": "string"
                }
              ]
            }
          }
        }
      },
      "@supabase/supabase-js.index.SupabaseClient._handleTokenChanged": {
        "name": "@supabase/supabase-js.index.SupabaseClient._handleTokenChanged",
        "params": [
          {
            "name": "event",
            "type": {
              "type": "nameOnly",
              "name": "@supabase/auth-js.AuthChangeEvent"
            }
          },
          {
            "name": "source",
            "type": {
              "type": "union",
              "subTypes": [
                {
                  "type": "literal",
                  "value": "CLIENT"
                },
                {
                  "type": "literal",
                  "value": "STORAGE"
                }
              ]
            }
          },
          {
            "name": "token",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "isOptional": true
          }
        ],
        "ret": {
          "type": {
            "type": "intrinsic",
            "name": "void"
          }
        }
      },
      "@supabase/supabase-js.index.SupabaseClient._initRealtimeClient": {
        "name": "@supabase/supabase-js.index.SupabaseClient._initRealtimeClient",
        "params": [
          {
            "name": "options",
            "type": {
              "type": "nameOnly",
              "name": "@supabase/realtime-js.RealtimeClientOptions"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "@supabase/realtime-js.RealtimeClient"
          }
        }
      },
      "@supabase/supabase-js.index.SupabaseClient._initSupabaseAuthClient": {
        "name": "@supabase/supabase-js.index.SupabaseClient._initSupabaseAuthClient",
        "params": [
          {
            "type": {
              "type": "object",
              "name": "SupabaseAuthClientOptions",
              "properties": []
            }
          },
          {
            "name": "headers",
            "type": {
              "type": "record",
              "name": "Record",
              "keyType": {
                "type": "intrinsic",
                "name": "string"
              },
              "valueType": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            "isOptional": true
          },
          {
            "name": "fetch",
            "type": {
              "type": "function",
              "params": [
                {
                  "name": "input",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "nameOnly",
                        "name": "RequestInfo"
                      },
                      {
                        "type": "nameOnly",
                        "name": "URL"
                      }
                    ]
                  }
                },
                {
                  "name": "init",
                  "type": {
                    "type": "nameOnly",
                    "name": "RequestInit"
                  },
                  "isOptional": true
                }
              ],
              "ret": {
                "type": {
                  "type": "promise",
                  "name": "Promise",
                  "awaited": {
                    "type": "nameOnly",
                    "name": "Response"
                  }
                }
              }
            },
            "isOptional": true
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "SupabaseAuthClient"
          }
        }
      },
      "@supabase/supabase-js.index.SupabaseClient._listenForAuthEvents": {
        "name": "@supabase/supabase-js.index.SupabaseClient._listenForAuthEvents",
        "params": []
      },
      "@supabase/supabase-js.index.SupabaseClient.channel": {
        "name": "@supabase/supabase-js.index.SupabaseClient.channel",
        "params": [
          {
            "name": "name",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The name of the Realtime channel."
            }
          },
          {
            "name": "opts",
            "type": {
              "type": "nameOnly",
              "name": "@supabase/realtime-js.RealtimeChannelOptions"
            },
            "comment": {
              "shortText": "The options to pass to the Realtime channel.\\n\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "@supabase/realtime-js.RealtimeChannel"
          }
        },
        "comment": {
          "shortText": "Creates a Realtime channel with Broadcast, Presence, and Postgres Changes."
        }
      },
      "@supabase/supabase-js.index.SupabaseClient.from": {
        "name": "@supabase/supabase-js.index.SupabaseClient.from",
        "params": [
          {
            "name": "relation",
            "type": {
              "type": "nameOnly",
              "name": "TableName"
            },
            "comment": {
              "shortText": "The table or view name to query\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "@supabase/postgrest-js.PostgrestQueryBuilder"
          }
        },
        "comment": {
          "shortText": "Perform a query on a table or a view."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "relation",
                "type": {
                  "type": "nameOnly",
                  "name": "ViewName"
                },
                "comment": {
                  "shortText": "The table or view name to query\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "@supabase/postgrest-js.PostgrestQueryBuilder"
              }
            },
            "comment": {
              "shortText": "Perform a query on a table or a view."
            }
          }
        ]
      },
      "@supabase/supabase-js.index.SupabaseClient.getChannels": {
        "name": "@supabase/supabase-js.index.SupabaseClient.getChannels",
        "params": [],
        "ret": {
          "type": {
            "type": "array",
            "elemType": {
              "type": "nameOnly",
              "name": "@supabase/realtime-js.RealtimeChannel"
            }
          }
        },
        "comment": {
          "shortText": "Returns all Realtime channels."
        }
      },
      "@supabase/supabase-js.index.SupabaseClient.removeAllChannels": {
        "name": "@supabase/supabase-js.index.SupabaseClient.removeAllChannels",
        "params": [],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "array",
              "elemType": {
                "type": "union",
                "subTypes": [
                  {
                    "type": "literal",
                    "value": "error"
                  },
                  {
                    "type": "literal",
                    "value": "ok"
                  },
                  {
                    "type": "literal",
                    "value": "timed out"
                  }
                ]
              }
            }
          }
        },
        "comment": {
          "shortText": "Unsubscribes and removes all Realtime channels from Realtime client."
        }
      },
      "@supabase/supabase-js.index.SupabaseClient.removeChannel": {
        "name": "@supabase/supabase-js.index.SupabaseClient.removeChannel",
        "params": [
          {
            "name": "channel",
            "type": {
              "type": "nameOnly",
              "name": "@supabase/realtime-js.RealtimeChannel"
            },
            "comment": {
              "shortText": "The name of the Realtime channel.\\n\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "literal",
                  "value": "error"
                },
                {
                  "type": "literal",
                  "value": "ok"
                },
                {
                  "type": "literal",
                  "value": "timed out"
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Unsubscribes and removes Realtime channel from Realtime client."
        }
      },
      "@supabase/supabase-js.index.SupabaseClient.rpc": {
        "name": "@supabase/supabase-js.index.SupabaseClient.rpc",
        "params": [
          {
            "name": "fn",
            "type": {
              "type": "nameOnly",
              "name": "FnName"
            },
            "comment": {
              "shortText": "The function name to call"
            }
          },
          {
            "name": "args",
            "type": {
              "type": "nameOnly",
              "name": "Fn['Args']"
            },
            "comment": {
              "shortText": "The arguments to pass to the function call"
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "count",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": "exact"
                      },
                      {
                        "type": "literal",
                        "value": "planned"
                      },
                      {
                        "type": "literal",
                        "value": "estimated"
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Count algorithm to use to count rows returned by the\\nfunction. Only applicable for [set-returning\\nfunctions](https://www.postgresql.org/docs/current/functions-srf.html).\\n\\n\`\\"exact\\"\`: Exact but slow count algorithm. Performs a \`COUNT(*)\` under the\\nhood.\\n\\n\`\\"planned\\"\`: Approximated but fast count algorithm. Uses the Postgres\\nstatistics under the hood.\\n\\n\`\\"estimated\\"\`: Uses exact count for low numbers and planned count for high\\nnumbers.\\n"
                  }
                },
                {
                  "name": "get",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "When set to \`true\`, the function will be called with\\nread-only access mode."
                  }
                },
                {
                  "name": "head",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "When set to \`true\`, \`data\` will not be returned.\\nUseful if you only need the count."
                  }
                }
              ]
            },
            "comment": {
              "shortText": "Named parameters"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "@supabase/postgrest-js.PostgrestFilterBuilder"
          }
        },
        "comment": {
          "shortText": "Perform a function call."
        }
      },
      "@supabase/supabase-js.index.SupabaseClient.schema": {
        "name": "@supabase/supabase-js.index.SupabaseClient.schema",
        "params": [
          {
            "name": "schema",
            "type": {
              "type": "nameOnly",
              "name": "DynamicSchema"
            },
            "comment": {
              "shortText": "The schema to query\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "@supabase/postgrest-js.PostgrestClient"
          }
        },
        "comment": {
          "shortText": "Select a schema to query or perform an function (rpc) call.",
          "text": "The schema needs to be on the list of exposed schemas inside Supabase.\\n"
        }
      }
    }
  },
  {
    "name": "@supabase/auth-js",
    "methods": {
      "@supabase/auth-js.AuthApiError.constructor": {
        "name": "@supabase/auth-js.AuthApiError.constructor",
        "params": [
          {
            "name": "message",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "name": "status",
            "type": {
              "type": "intrinsic",
              "name": "number"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "AuthApiError"
          }
        }
      },
      "@supabase/auth-js.AuthApiError.toJSON": {
        "name": "@supabase/auth-js.AuthApiError.toJSON",
        "params": [],
        "ret": {
          "type": {
            "type": "object",
            "properties": [
              {
                "name": "message",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "name": "name",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "name": "status",
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                }
              }
            ]
          }
        }
      },
      "@supabase/auth-js.AuthError.constructor": {
        "name": "@supabase/auth-js.AuthError.constructor",
        "params": [
          {
            "name": "message",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "name": "status",
            "type": {
              "type": "intrinsic",
              "name": "number"
            },
            "isOptional": true
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "AuthError"
          }
        }
      },
      "@supabase/auth-js.AuthImplicitGrantRedirectError.constructor": {
        "name": "@supabase/auth-js.AuthImplicitGrantRedirectError.constructor",
        "params": [
          {
            "name": "message",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "name": "details",
            "type": {
              "type": "union",
              "subTypes": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "code",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ]
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "AuthImplicitGrantRedirectError"
          }
        }
      },
      "@supabase/auth-js.AuthImplicitGrantRedirectError.toJSON": {
        "name": "@supabase/auth-js.AuthImplicitGrantRedirectError.toJSON",
        "params": [],
        "ret": {
          "type": {
            "type": "object",
            "properties": [
              {
                "name": "details",
                "type": {
                  "type": "union",
                  "subTypes": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "object",
                      "properties": [
                        {
                          "name": "code",
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "name": "error",
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "name": "message",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "name": "name",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "name": "status",
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                }
              }
            ]
          }
        }
      },
      "@supabase/auth-js.AuthInvalidCredentialsError.constructor": {
        "name": "@supabase/auth-js.AuthInvalidCredentialsError.constructor",
        "params": [
          {
            "name": "message",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "AuthInvalidCredentialsError"
          }
        }
      },
      "@supabase/auth-js.AuthInvalidCredentialsError.toJSON": {
        "name": "@supabase/auth-js.AuthInvalidCredentialsError.toJSON",
        "params": [],
        "ret": {
          "type": {
            "type": "object",
            "properties": [
              {
                "name": "message",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "name": "name",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "name": "status",
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                }
              }
            ]
          }
        }
      },
      "@supabase/auth-js.AuthInvalidTokenResponseError.constructor": {
        "name": "@supabase/auth-js.AuthInvalidTokenResponseError.constructor",
        "params": [],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "AuthInvalidTokenResponseError"
          }
        }
      },
      "@supabase/auth-js.AuthInvalidTokenResponseError.toJSON": {
        "name": "@supabase/auth-js.AuthInvalidTokenResponseError.toJSON",
        "params": [],
        "ret": {
          "type": {
            "type": "object",
            "properties": [
              {
                "name": "message",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "name": "name",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "name": "status",
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                }
              }
            ]
          }
        }
      },
      "@supabase/auth-js.AuthPKCEGrantCodeExchangeError.constructor": {
        "name": "@supabase/auth-js.AuthPKCEGrantCodeExchangeError.constructor",
        "params": [
          {
            "name": "message",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "name": "details",
            "type": {
              "type": "union",
              "subTypes": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "code",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ]
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "AuthPKCEGrantCodeExchangeError"
          }
        }
      },
      "@supabase/auth-js.AuthPKCEGrantCodeExchangeError.toJSON": {
        "name": "@supabase/auth-js.AuthPKCEGrantCodeExchangeError.toJSON",
        "params": [],
        "ret": {
          "type": {
            "type": "object",
            "properties": [
              {
                "name": "details",
                "type": {
                  "type": "union",
                  "subTypes": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "object",
                      "properties": [
                        {
                          "name": "code",
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "name": "error",
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "name": "message",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "name": "name",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "name": "status",
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                }
              }
            ]
          }
        }
      },
      "@supabase/auth-js.AuthRetryableFetchError.constructor": {
        "name": "@supabase/auth-js.AuthRetryableFetchError.constructor",
        "params": [
          {
            "name": "message",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "name": "status",
            "type": {
              "type": "intrinsic",
              "name": "number"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "AuthRetryableFetchError"
          }
        }
      },
      "@supabase/auth-js.AuthRetryableFetchError.toJSON": {
        "name": "@supabase/auth-js.AuthRetryableFetchError.toJSON",
        "params": [],
        "ret": {
          "type": {
            "type": "object",
            "properties": [
              {
                "name": "message",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "name": "name",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "name": "status",
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                }
              }
            ]
          }
        }
      },
      "@supabase/auth-js.AuthSessionMissingError.constructor": {
        "name": "@supabase/auth-js.AuthSessionMissingError.constructor",
        "params": [],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "AuthSessionMissingError"
          }
        }
      },
      "@supabase/auth-js.AuthSessionMissingError.toJSON": {
        "name": "@supabase/auth-js.AuthSessionMissingError.toJSON",
        "params": [],
        "ret": {
          "type": {
            "type": "object",
            "properties": [
              {
                "name": "message",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "name": "name",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "name": "status",
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                }
              }
            ]
          }
        }
      },
      "@supabase/auth-js.AuthUnknownError.constructor": {
        "name": "@supabase/auth-js.AuthUnknownError.constructor",
        "params": [
          {
            "name": "message",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "name": "originalError",
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "AuthUnknownError"
          }
        }
      },
      "@supabase/auth-js.AuthWeakPasswordError.constructor": {
        "name": "@supabase/auth-js.AuthWeakPasswordError.constructor",
        "params": [
          {
            "name": "message",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "name": "status",
            "type": {
              "type": "intrinsic",
              "name": "number"
            }
          },
          {
            "name": "reasons",
            "type": {
              "type": "array",
              "elemType": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "AuthWeakPasswordError"
          }
        }
      },
      "@supabase/auth-js.AuthWeakPasswordError.toJSON": {
        "name": "@supabase/auth-js.AuthWeakPasswordError.toJSON",
        "params": [],
        "ret": {
          "type": {
            "type": "object",
            "properties": [
              {
                "name": "message",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "name": "name",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "name": "status",
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                }
              }
            ]
          }
        }
      },
      "@supabase/auth-js.CustomAuthError.constructor": {
        "name": "@supabase/auth-js.CustomAuthError.constructor",
        "params": [
          {
            "name": "message",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "name": "name",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "name": "status",
            "type": {
              "type": "intrinsic",
              "name": "number"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "CustomAuthError"
          }
        }
      },
      "@supabase/auth-js.CustomAuthError.toJSON": {
        "name": "@supabase/auth-js.CustomAuthError.toJSON",
        "params": [],
        "ret": {
          "type": {
            "type": "object",
            "properties": [
              {
                "name": "message",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "name": "name",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "name": "status",
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                }
              }
            ]
          }
        }
      },
      "@supabase/auth-js.GoTrueAdminApi.constructor": {
        "name": "@supabase/auth-js.GoTrueAdminApi.constructor",
        "params": [
          {
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "fetch",
                  "type": {
                    "type": "function",
                    "params": [
                      {
                        "name": "input",
                        "type": {
                          "type": "union",
                          "subTypes": [
                            {
                              "type": "nameOnly",
                              "name": "RequestInfo"
                            },
                            {
                              "type": "nameOnly",
                              "name": "URL"
                            }
                          ]
                        }
                      },
                      {
                        "name": "init",
                        "type": {
                          "type": "nameOnly",
                          "name": "RequestInit"
                        },
                        "isOptional": true
                      }
                    ],
                    "ret": {
                      "type": {
                        "type": "promise",
                        "name": "Promise",
                        "awaited": {
                          "type": "nameOnly",
                          "name": "Response"
                        }
                      }
                    }
                  },
                  "isOptional": true
                },
                {
                  "name": "headers",
                  "type": {
                    "type": "index signature",
                    "keyType": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "valueType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  "isOptional": true
                },
                {
                  "name": "url",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ]
            }
          }
        ]
      },
      "@supabase/auth-js.GoTrueAdminApi.createUser": {
        "name": "@supabase/auth-js.GoTrueAdminApi.createUser",
        "params": [
          {
            "name": "attributes",
            "type": {
              "type": "object",
              "name": "AdminUserAttributes",
              "properties": [
                {
                  "name": "app_metadata",
                  "type": {
                    "type": "intrinsic",
                    "name": "object"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "A custom data object to store the user's application specific metadata. This maps to the \`auth.users.app_metadata\` column.",
                    "text": "Only a service role can modify.\\n\\nThe \`app_metadata\` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\\naccess control information.\\n"
                  }
                },
                {
                  "name": "ban_duration",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Determines how long a user is banned for.",
                    "text": "The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\\nValid time units are \\"ns\\", \\"us\\" (or \\"µs\\"), \\"ms\\", \\"s\\", \\"m\\", \\"h\\".\\n\\nFor example, some possible durations include: '300ms', '2h45m'.\\n\\nSetting the ban duration to 'none' lifts the ban on the user.\\n"
                  }
                },
                {
                  "name": "email",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The user's email."
                  }
                },
                {
                  "name": "email_confirm",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Confirms the user's email address if set to true.",
                    "text": "Only a service role can modify.\\n"
                  }
                },
                {
                  "name": "nonce",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
                    "text": "Call reauthenticate() to obtain the nonce first.\\n"
                  }
                },
                {
                  "name": "password",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The user's password."
                  }
                },
                {
                  "name": "phone",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The user's phone."
                  }
                },
                {
                  "name": "phone_confirm",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Confirms the user's phone number if set to true.",
                    "text": "Only a service role can modify.\\n"
                  }
                },
                {
                  "name": "role",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The \`role\` claim set in the user's access token JWT.",
                    "text": "When a user signs up, this role is set to \`authenticated\` by default. You should only modify the \`role\` if you need to provision several levels of admin access that have different permissions on individual columns in your database.\\n\\nSetting this role to \`service_role\` is not recommended as it grants the user admin privileges.\\n"
                  }
                },
                {
                  "name": "user_metadata",
                  "type": {
                    "type": "intrinsic",
                    "name": "object"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "A custom data object to store the user's metadata. This maps to the \`auth.users.raw_user_meta_data\` column.",
                    "text": "The \`user_metadata\` should be a JSON object that includes user-specific info, such as their first and last name.\\n\\nNote: When using the GoTrueAdminApi and wanting to modify a user's metadata,\\nthis attribute is used instead of UserAttributes data.\\n\\n"
                  }
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "UserResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "user",
                            "type": {
                              "type": "object",
                              "name": "User",
                              "properties": [
                                {
                                  "name": "action_link",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "app_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserAppMetadata",
                                    "properties": [
                                      {
                                        "name": "provider",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "aud",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "confirmation_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "created_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_change_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "factors",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "Factor",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "factor_type",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                          }
                                        },
                                        {
                                          "name": "friendly_name",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true,
                                          "comment": {
                                            "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                          }
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "ID of the factor."
                                          }
                                        },
                                        {
                                          "name": "status",
                                          "type": {
                                            "type": "union",
                                            "subTypes": [
                                              {
                                                "type": "literal",
                                                "value": "verified"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "unverified"
                                              }
                                            ]
                                          },
                                          "comment": {
                                            "shortText": "Factor's status."
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "id",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "identities",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "UserIdentity",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "identity_data",
                                          "type": {
                                            "type": "index signature",
                                            "keyType": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "valueType": {
                                              "type": "intrinsic",
                                              "name": "any"
                                            }
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "identity_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "last_sign_in_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "provider",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "user_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "invited_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "last_sign_in_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "recovery_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "updated_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "user_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserMetadata",
                                    "properties": []
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "user",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Creates a new user.\\nThis function should only be called on a server. Never expose your \`service_role\` key in the browser."
        }
      },
      "@supabase/auth-js.GoTrueAdminApi.deleteUser": {
        "name": "@supabase/auth-js.GoTrueAdminApi.deleteUser",
        "params": [
          {
            "name": "id",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The user id you want to remove."
            }
          },
          {
            "name": "shouldSoftDelete",
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "comment": {
              "shortText": "If true, then the user will be soft-deleted (setting \`deleted_at\` to the current timestamp and disabling their account while preserving their data) from the auth schema.\\nDefaults to false for backward compatibility.\\n\\nThis function should only be called on a server. Never expose your \`service_role\` key in the browser.\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "UserResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "user",
                            "type": {
                              "type": "object",
                              "name": "User",
                              "properties": [
                                {
                                  "name": "action_link",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "app_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserAppMetadata",
                                    "properties": [
                                      {
                                        "name": "provider",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "aud",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "confirmation_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "created_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_change_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "factors",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "Factor",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "factor_type",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                          }
                                        },
                                        {
                                          "name": "friendly_name",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true,
                                          "comment": {
                                            "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                          }
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "ID of the factor."
                                          }
                                        },
                                        {
                                          "name": "status",
                                          "type": {
                                            "type": "union",
                                            "subTypes": [
                                              {
                                                "type": "literal",
                                                "value": "verified"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "unverified"
                                              }
                                            ]
                                          },
                                          "comment": {
                                            "shortText": "Factor's status."
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "id",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "identities",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "UserIdentity",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "identity_data",
                                          "type": {
                                            "type": "index signature",
                                            "keyType": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "valueType": {
                                              "type": "intrinsic",
                                              "name": "any"
                                            }
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "identity_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "last_sign_in_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "provider",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "user_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "invited_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "last_sign_in_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "recovery_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "updated_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "user_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserMetadata",
                                    "properties": []
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "user",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Delete a user. Requires a \`service_role\` key."
        }
      },
      "@supabase/auth-js.GoTrueAdminApi.generateLink": {
        "name": "@supabase/auth-js.GoTrueAdminApi.generateLink",
        "params": [
          {
            "name": "params",
            "type": {
              "type": "union",
              "name": "GenerateLinkParams",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "email",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "name": "options",
                      "type": {
                        "type": "union",
                        "subTypes": [
                          {
                            "name": "data",
                            "type": {
                              "type": "intrinsic",
                              "name": "object"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "A custom data object to store the user's metadata. This maps to the \`auth.users.raw_user_meta_data\` column.",
                              "text": "The \`data\` should be a JSON object that includes user-specific info, such as their first and last name.\\n"
                            }
                          },
                          {
                            "name": "redirectTo",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "The URL which will be appended to the email link generated."
                            }
                          }
                        ]
                      },
                      "isOptional": true
                    },
                    {
                      "name": "password",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "name": "type",
                      "type": {
                        "type": "literal",
                        "value": "signup"
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "email",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "The user's email"
                      }
                    },
                    {
                      "name": "options",
                      "type": {
                        "type": "union",
                        "subTypes": [
                          {
                            "name": "data",
                            "type": {
                              "type": "intrinsic",
                              "name": "object"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "A custom data object to store the user's metadata. This maps to the \`auth.users.raw_user_meta_data\` column.",
                              "text": "The \`data\` should be a JSON object that includes user-specific info, such as their first and last name.\\n"
                            }
                          },
                          {
                            "name": "redirectTo",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "The URL which will be appended to the email link generated."
                            }
                          }
                        ]
                      },
                      "isOptional": true
                    },
                    {
                      "name": "type",
                      "type": {
                        "type": "union",
                        "subTypes": [
                          {
                            "type": "literal",
                            "value": "invite"
                          },
                          {
                            "type": "literal",
                            "value": "magiclink"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "email",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "The user's email"
                      }
                    },
                    {
                      "name": "options",
                      "type": {
                        "name": "redirectTo",
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "The URL which will be appended to the email link generated."
                        }
                      },
                      "isOptional": true
                    },
                    {
                      "name": "type",
                      "type": {
                        "type": "literal",
                        "value": "recovery"
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "email",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "The user's email"
                      }
                    },
                    {
                      "name": "newEmail",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "The user's new email. Only required if type is 'email_change_current' or 'email_change_new'."
                      }
                    },
                    {
                      "name": "options",
                      "type": {
                        "name": "redirectTo",
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "The URL which will be appended to the email link generated."
                        }
                      },
                      "isOptional": true
                    },
                    {
                      "name": "type",
                      "type": {
                        "type": "union",
                        "subTypes": [
                          {
                            "type": "literal",
                            "value": "email_change_current"
                          },
                          {
                            "type": "literal",
                            "value": "email_change_new"
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "GenerateLinkResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "properties",
                            "type": {
                              "name": "GenerateLinkProperties",
                              "type": "object",
                              "properties": [
                                {
                                  "name": "action_link",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "comment": {
                                    "shortText": "The email link to send to the user.\\nThe action_link follows the following format: auth/v1/verify?type={verification_type}&token={hashed_token}&redirect_to={redirect_to}"
                                  }
                                },
                                {
                                  "name": "email_otp",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "comment": {
                                    "shortText": "The raw email OTP.\\nYou should send this in the email if you want your users to verify using an OTP instead of the action link."
                                  }
                                },
                                {
                                  "name": "hashed_token",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "comment": {
                                    "shortText": "The hashed token appended to the action link."
                                  }
                                },
                                {
                                  "name": "redirect_to",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "comment": {
                                    "shortText": "The URL appended to the action link."
                                  }
                                },
                                {
                                  "name": "verification_type",
                                  "type": {
                                    "type": "union",
                                    "name": "GenerateLinkType",
                                    "subTypes": [
                                      {
                                        "type": "literal",
                                        "value": "signup"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "invite"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "magiclink"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "recovery"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "email_change_current"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "email_change_new"
                                      }
                                    ]
                                  },
                                  "comment": {
                                    "shortText": "The verification type that the email link is associated to."
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "object",
                              "name": "User",
                              "properties": [
                                {
                                  "name": "action_link",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "app_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserAppMetadata",
                                    "properties": [
                                      {
                                        "name": "provider",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "aud",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "confirmation_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "created_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_change_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "factors",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "Factor",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "factor_type",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                          }
                                        },
                                        {
                                          "name": "friendly_name",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true,
                                          "comment": {
                                            "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                          }
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "ID of the factor."
                                          }
                                        },
                                        {
                                          "name": "status",
                                          "type": {
                                            "type": "union",
                                            "subTypes": [
                                              {
                                                "type": "literal",
                                                "value": "verified"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "unverified"
                                              }
                                            ]
                                          },
                                          "comment": {
                                            "shortText": "Factor's status."
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "id",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "identities",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "UserIdentity",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "identity_data",
                                          "type": {
                                            "type": "index signature",
                                            "keyType": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "valueType": {
                                              "type": "intrinsic",
                                              "name": "any"
                                            }
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "identity_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "last_sign_in_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "provider",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "user_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "invited_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "last_sign_in_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "recovery_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "updated_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "user_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserMetadata",
                                    "properties": []
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "properties",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Generates email links and OTPs to be sent via a custom email provider."
        }
      },
      "@supabase/auth-js.GoTrueAdminApi.getUserById": {
        "name": "@supabase/auth-js.GoTrueAdminApi.getUserById",
        "params": [
          {
            "name": "uid",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The user's unique identifier\\n\\nThis function should only be called on a server. Never expose your \`service_role\` key in the browser.\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "UserResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "user",
                            "type": {
                              "type": "object",
                              "name": "User",
                              "properties": [
                                {
                                  "name": "action_link",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "app_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserAppMetadata",
                                    "properties": [
                                      {
                                        "name": "provider",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "aud",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "confirmation_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "created_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_change_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "factors",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "Factor",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "factor_type",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                          }
                                        },
                                        {
                                          "name": "friendly_name",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true,
                                          "comment": {
                                            "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                          }
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "ID of the factor."
                                          }
                                        },
                                        {
                                          "name": "status",
                                          "type": {
                                            "type": "union",
                                            "subTypes": [
                                              {
                                                "type": "literal",
                                                "value": "verified"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "unverified"
                                              }
                                            ]
                                          },
                                          "comment": {
                                            "shortText": "Factor's status."
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "id",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "identities",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "UserIdentity",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "identity_data",
                                          "type": {
                                            "type": "index signature",
                                            "keyType": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "valueType": {
                                              "type": "intrinsic",
                                              "name": "any"
                                            }
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "identity_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "last_sign_in_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "provider",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "user_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "invited_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "last_sign_in_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "recovery_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "updated_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "user_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserMetadata",
                                    "properties": []
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "user",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Get user by id."
        }
      },
      "@supabase/auth-js.GoTrueAdminApi.inviteUserByEmail": {
        "name": "@supabase/auth-js.GoTrueAdminApi.inviteUserByEmail",
        "params": [
          {
            "name": "email",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The email address of the user."
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "data",
                  "type": {
                    "type": "intrinsic",
                    "name": "object"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "A custom data object to store additional metadata about the user. This maps to the \`auth.users.user_metadata\` column."
                  }
                },
                {
                  "name": "redirectTo",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The URL which will be appended to the email link sent to the user's email address. Once clicked the user will end up on this URL."
                  }
                }
              ]
            },
            "comment": {
              "shortText": "Additional options to be included when inviting.\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "UserResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "user",
                            "type": {
                              "type": "object",
                              "name": "User",
                              "properties": [
                                {
                                  "name": "action_link",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "app_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserAppMetadata",
                                    "properties": [
                                      {
                                        "name": "provider",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "aud",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "confirmation_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "created_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_change_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "factors",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "Factor",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "factor_type",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                          }
                                        },
                                        {
                                          "name": "friendly_name",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true,
                                          "comment": {
                                            "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                          }
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "ID of the factor."
                                          }
                                        },
                                        {
                                          "name": "status",
                                          "type": {
                                            "type": "union",
                                            "subTypes": [
                                              {
                                                "type": "literal",
                                                "value": "verified"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "unverified"
                                              }
                                            ]
                                          },
                                          "comment": {
                                            "shortText": "Factor's status."
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "id",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "identities",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "UserIdentity",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "identity_data",
                                          "type": {
                                            "type": "index signature",
                                            "keyType": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "valueType": {
                                              "type": "intrinsic",
                                              "name": "any"
                                            }
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "identity_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "last_sign_in_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "provider",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "user_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "invited_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "last_sign_in_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "recovery_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "updated_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "user_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserMetadata",
                                    "properties": []
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "user",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Sends an invite link to an email address."
        }
      },
      "@supabase/auth-js.GoTrueAdminApi.listUsers": {
        "name": "@supabase/auth-js.GoTrueAdminApi.listUsers",
        "params": [
          {
            "name": "params",
            "type": {
              "name": "PageParams",
              "type": "object",
              "properties": [
                {
                  "name": "page",
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The page number"
                  }
                },
                {
                  "name": "perPage",
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Number of items returned per page"
                  }
                }
              ]
            },
            "isOptional": true,
            "comment": {
              "shortText": "An object which supports \`page\` and \`perPage\` as numbers, to alter the paginated results.\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data"
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "users"
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Get a list of users.",
          "text": "This function should only be called on a server. Never expose your \`service_role\` key in the browser."
        }
      },
      "@supabase/auth-js.GoTrueAdminApi.signOut": {
        "name": "@supabase/auth-js.GoTrueAdminApi.signOut",
        "params": [
          {
            "name": "jwt",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "A valid, logged-in JWT."
            }
          },
          {
            "name": "scope",
            "type": {
              "type": "union",
              "subTypes": [
                {
                  "type": "literal",
                  "value": "global"
                },
                {
                  "type": "literal",
                  "value": "local"
                },
                {
                  "type": "literal",
                  "value": "others"
                }
              ]
            },
            "comment": {
              "shortText": "The logout sope.\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "object",
              "properties": [
                {
                  "name": "data",
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "name": "error",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    ]
                  }
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Removes a logged-in session."
        }
      },
      "@supabase/auth-js.GoTrueAdminApi.updateUserById": {
        "name": "@supabase/auth-js.GoTrueAdminApi.updateUserById",
        "params": [
          {
            "name": "uid",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "name": "attributes",
            "type": {
              "type": "object",
              "name": "AdminUserAttributes",
              "properties": [
                {
                  "name": "app_metadata",
                  "type": {
                    "type": "intrinsic",
                    "name": "object"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "A custom data object to store the user's application specific metadata. This maps to the \`auth.users.app_metadata\` column.",
                    "text": "Only a service role can modify.\\n\\nThe \`app_metadata\` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\\naccess control information.\\n"
                  }
                },
                {
                  "name": "ban_duration",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Determines how long a user is banned for.",
                    "text": "The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\\nValid time units are \\"ns\\", \\"us\\" (or \\"µs\\"), \\"ms\\", \\"s\\", \\"m\\", \\"h\\".\\n\\nFor example, some possible durations include: '300ms', '2h45m'.\\n\\nSetting the ban duration to 'none' lifts the ban on the user.\\n"
                  }
                },
                {
                  "name": "email",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The user's email."
                  }
                },
                {
                  "name": "email_confirm",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Confirms the user's email address if set to true.",
                    "text": "Only a service role can modify.\\n"
                  }
                },
                {
                  "name": "nonce",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
                    "text": "Call reauthenticate() to obtain the nonce first.\\n"
                  }
                },
                {
                  "name": "password",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The user's password."
                  }
                },
                {
                  "name": "phone",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The user's phone."
                  }
                },
                {
                  "name": "phone_confirm",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Confirms the user's phone number if set to true.",
                    "text": "Only a service role can modify.\\n"
                  }
                },
                {
                  "name": "role",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The \`role\` claim set in the user's access token JWT.",
                    "text": "When a user signs up, this role is set to \`authenticated\` by default. You should only modify the \`role\` if you need to provision several levels of admin access that have different permissions on individual columns in your database.\\n\\nSetting this role to \`service_role\` is not recommended as it grants the user admin privileges.\\n"
                  }
                },
                {
                  "name": "user_metadata",
                  "type": {
                    "type": "intrinsic",
                    "name": "object"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "A custom data object to store the user's metadata. This maps to the \`auth.users.raw_user_meta_data\` column.",
                    "text": "The \`user_metadata\` should be a JSON object that includes user-specific info, such as their first and last name.\\n\\nNote: When using the GoTrueAdminApi and wanting to modify a user's metadata,\\nthis attribute is used instead of UserAttributes data.\\n\\n"
                  }
                }
              ]
            },
            "comment": {
              "shortText": "The data you want to update.\\n\\nThis function should only be called on a server. Never expose your \`service_role\` key in the browser.\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "UserResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "user",
                            "type": {
                              "type": "object",
                              "name": "User",
                              "properties": [
                                {
                                  "name": "action_link",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "app_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserAppMetadata",
                                    "properties": [
                                      {
                                        "name": "provider",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "aud",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "confirmation_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "created_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_change_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "factors",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "Factor",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "factor_type",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                          }
                                        },
                                        {
                                          "name": "friendly_name",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true,
                                          "comment": {
                                            "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                          }
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "ID of the factor."
                                          }
                                        },
                                        {
                                          "name": "status",
                                          "type": {
                                            "type": "union",
                                            "subTypes": [
                                              {
                                                "type": "literal",
                                                "value": "verified"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "unverified"
                                              }
                                            ]
                                          },
                                          "comment": {
                                            "shortText": "Factor's status."
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "id",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "identities",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "UserIdentity",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "identity_data",
                                          "type": {
                                            "type": "index signature",
                                            "keyType": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "valueType": {
                                              "type": "intrinsic",
                                              "name": "any"
                                            }
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "identity_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "last_sign_in_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "provider",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "user_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "invited_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "last_sign_in_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "recovery_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "updated_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "user_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserMetadata",
                                    "properties": []
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "user",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Updates the user data."
        }
      },
      "@supabase/auth-js.GoTrueClient.constructor": {
        "name": "@supabase/auth-js.GoTrueClient.constructor",
        "params": [
          {
            "name": "options",
            "type": {
              "name": "GoTrueClientOptions",
              "type": "object",
              "properties": [
                {
                  "name": "autoRefreshToken",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true
                },
                {
                  "name": "debug",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      {
                        "type": "function",
                        "params": [
                          {
                            "name": "message",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "name": "args",
                            "type": {
                              "type": "array",
                              "elemType": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          }
                        ],
                        "ret": {
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      }
                    ]
                  },
                  "isOptional": true
                },
                {
                  "name": "detectSessionInUrl",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true
                },
                {
                  "name": "fetch",
                  "type": {
                    "type": "nameOnly",
                    "name": "Fetch"
                  },
                  "isOptional": true
                },
                {
                  "name": "flowType",
                  "type": {
                    "type": "union",
                    "name": "AuthFlowType",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": "implicit"
                      },
                      {
                        "type": "literal",
                        "value": "pkce"
                      }
                    ]
                  },
                  "isOptional": true
                },
                {
                  "name": "headers",
                  "type": {
                    "type": "index signature",
                    "keyType": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "valueType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  "isOptional": true
                },
                {
                  "name": "lock",
                  "type": {
                    "name": "LockFunc",
                    "type": "function",
                    "params": [
                      {
                        "name": "name",
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        "comment": {
                          "shortText": "Name of the lock to be acquired."
                        }
                      },
                      {
                        "name": "acquireTimeout",
                        "type": {
                          "type": "intrinsic",
                          "name": "number"
                        },
                        "comment": {
                          "shortText": "If negative, no timeout should occur. If positive it\\n                      should throw an Error with an \`isAcquireTimeout\`\\n                      property set to true if the operation fails to be\\n                      acquired after this much time (ms)."
                        }
                      },
                      {
                        "name": "fn",
                        "type": {
                          "type": "function",
                          "params": [],
                          "ret": {
                            "type": {
                              "type": "promise",
                              "name": "Promise",
                              "awaited": {
                                "type": "nameOnly",
                                "name": "R"
                              }
                            }
                          }
                        },
                        "comment": {
                          "shortText": "The operation to execute when the lock is acquired.\\n"
                        }
                      }
                    ],
                    "ret": {
                      "type": {
                        "type": "promise",
                        "name": "Promise",
                        "awaited": {
                          "type": "nameOnly",
                          "name": "R"
                        }
                      }
                    },
                    "comment": {
                      "shortText": "Provide your own global lock implementation instead of the default\\nimplementation. The function should acquire a lock for the duration of the\\n\`fn\` async function, such that no other client instances will be able to\\nhold it at the same time.",
                      "tags": [
                        {
                          "tag": "experimental",
                          "text": "\\n"
                        }
                      ]
                    }
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Provide your own locking mechanism based on the environment. By default no locking is done at this time.",
                    "tags": [
                      {
                        "tag": "experimental",
                        "text": "\\n"
                      }
                    ]
                  }
                },
                {
                  "name": "persistSession",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true
                },
                {
                  "name": "storage",
                  "isOptional": true
                },
                {
                  "name": "storageKey",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true
                },
                {
                  "name": "url",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true
                }
              ]
            }
          }
        ],
        "comment": {
          "shortText": "Create a new client for use in the browser."
        }
      },
      "@supabase/auth-js.GoTrueClient.exchangeCodeForSession": {
        "name": "@supabase/auth-js.GoTrueClient.exchangeCodeForSession",
        "params": [
          {
            "name": "authCode",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "AuthTokenResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "session",
                            "type": {
                              "type": "object",
                              "name": "Session",
                              "properties": [
                                {
                                  "name": "access_token",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "comment": {
                                    "shortText": "The access token jwt. It is recommended to set the JWT_EXPIRY to a shorter expiry value."
                                  }
                                },
                                {
                                  "name": "expires_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "number"
                                  },
                                  "isOptional": true,
                                  "comment": {
                                    "shortText": "A timestamp of when the token will expire. Returned when a login is confirmed."
                                  }
                                },
                                {
                                  "name": "expires_in",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "number"
                                  },
                                  "comment": {
                                    "shortText": "The number of seconds until the token expires (since it was issued). Returned when a login is confirmed."
                                  }
                                },
                                {
                                  "name": "provider_refresh_token",
                                  "type": {
                                    "type": "union",
                                    "subTypes": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    ]
                                  },
                                  "isOptional": true,
                                  "comment": {
                                    "shortText": "The oauth provider refresh token. If present, this can be used to refresh the provider_token via the oauth provider's API.\\nNot all oauth providers return a provider refresh token. If the provider_refresh_token is missing, please refer to the oauth provider's documentation for information on how to obtain the provider refresh token."
                                  }
                                },
                                {
                                  "name": "provider_token",
                                  "type": {
                                    "type": "union",
                                    "subTypes": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    ]
                                  },
                                  "isOptional": true,
                                  "comment": {
                                    "shortText": "The oauth provider token. If present, this can be used to make external API requests to the oauth provider used."
                                  }
                                },
                                {
                                  "name": "refresh_token",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "comment": {
                                    "shortText": "A one-time used refresh token that never expires."
                                  }
                                },
                                {
                                  "name": "token_type",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "user",
                                  "type": {
                                    "type": "object",
                                    "name": "User",
                                    "properties": [
                                      {
                                        "name": "action_link",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "app_metadata",
                                        "type": {
                                          "type": "object",
                                          "name": "UserAppMetadata",
                                          "properties": [
                                            {
                                              "name": "provider",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "aud",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "name": "confirmation_sent_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "confirmed_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "created_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "name": "email",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "email_change_sent_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "email_confirmed_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "factors",
                                        "type": {
                                          "type": "array",
                                          "elemType": {
                                            "type": "object",
                                            "name": "Factor",
                                            "properties": [
                                              {
                                                "name": "created_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "name": "factor_type",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "comment": {
                                                  "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                                }
                                              },
                                              {
                                                "name": "friendly_name",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true,
                                                "comment": {
                                                  "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                                }
                                              },
                                              {
                                                "name": "id",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "comment": {
                                                  "shortText": "ID of the factor."
                                                }
                                              },
                                              {
                                                "name": "status",
                                                "type": {
                                                  "type": "union",
                                                  "subTypes": [
                                                    {
                                                      "type": "literal",
                                                      "value": "verified"
                                                    },
                                                    {
                                                      "type": "literal",
                                                      "value": "unverified"
                                                    }
                                                  ]
                                                },
                                                "comment": {
                                                  "shortText": "Factor's status."
                                                }
                                              },
                                              {
                                                "name": "updated_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "id",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "name": "identities",
                                        "type": {
                                          "type": "array",
                                          "elemType": {
                                            "type": "object",
                                            "name": "UserIdentity",
                                            "properties": [
                                              {
                                                "name": "created_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "id",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "name": "identity_data",
                                                "type": {
                                                  "type": "index signature",
                                                  "keyType": {
                                                    "type": "intrinsic",
                                                    "name": "string"
                                                  },
                                                  "valueType": {
                                                    "type": "intrinsic",
                                                    "name": "any"
                                                  }
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "identity_id",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "name": "last_sign_in_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "provider",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "name": "updated_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "user_id",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "invited_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "last_sign_in_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "new_email",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "new_phone",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "phone",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "phone_confirmed_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "recovery_sent_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "role",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "updated_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "user_metadata",
                                        "type": {
                                          "type": "object",
                                          "name": "UserMetadata",
                                          "properties": []
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "object",
                              "name": "User",
                              "properties": [
                                {
                                  "name": "action_link",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "app_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserAppMetadata",
                                    "properties": [
                                      {
                                        "name": "provider",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "aud",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "confirmation_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "created_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_change_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "factors",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "Factor",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "factor_type",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                          }
                                        },
                                        {
                                          "name": "friendly_name",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true,
                                          "comment": {
                                            "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                          }
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "ID of the factor."
                                          }
                                        },
                                        {
                                          "name": "status",
                                          "type": {
                                            "type": "union",
                                            "subTypes": [
                                              {
                                                "type": "literal",
                                                "value": "verified"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "unverified"
                                              }
                                            ]
                                          },
                                          "comment": {
                                            "shortText": "Factor's status."
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "id",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "identities",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "UserIdentity",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "identity_data",
                                          "type": {
                                            "type": "index signature",
                                            "keyType": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "valueType": {
                                              "type": "intrinsic",
                                              "name": "any"
                                            }
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "identity_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "last_sign_in_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "provider",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "user_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "invited_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "last_sign_in_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "recovery_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "updated_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "user_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserMetadata",
                                    "properties": []
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "session",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Log in an existing user by exchanging an Auth Code issued during the PKCE flow."
        }
      },
      "@supabase/auth-js.GoTrueClient.getSession": {
        "name": "@supabase/auth-js.GoTrueClient.getSession",
        "params": [],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "session",
                            "type": {
                              "type": "object",
                              "name": "Session",
                              "properties": [
                                {
                                  "name": "access_token",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "comment": {
                                    "shortText": "The access token jwt. It is recommended to set the JWT_EXPIRY to a shorter expiry value."
                                  }
                                },
                                {
                                  "name": "expires_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "number"
                                  },
                                  "isOptional": true,
                                  "comment": {
                                    "shortText": "A timestamp of when the token will expire. Returned when a login is confirmed."
                                  }
                                },
                                {
                                  "name": "expires_in",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "number"
                                  },
                                  "comment": {
                                    "shortText": "The number of seconds until the token expires (since it was issued). Returned when a login is confirmed."
                                  }
                                },
                                {
                                  "name": "provider_refresh_token",
                                  "type": {
                                    "type": "union",
                                    "subTypes": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    ]
                                  },
                                  "isOptional": true,
                                  "comment": {
                                    "shortText": "The oauth provider refresh token. If present, this can be used to refresh the provider_token via the oauth provider's API.\\nNot all oauth providers return a provider refresh token. If the provider_refresh_token is missing, please refer to the oauth provider's documentation for information on how to obtain the provider refresh token."
                                  }
                                },
                                {
                                  "name": "provider_token",
                                  "type": {
                                    "type": "union",
                                    "subTypes": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    ]
                                  },
                                  "isOptional": true,
                                  "comment": {
                                    "shortText": "The oauth provider token. If present, this can be used to make external API requests to the oauth provider used."
                                  }
                                },
                                {
                                  "name": "refresh_token",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "comment": {
                                    "shortText": "A one-time used refresh token that never expires."
                                  }
                                },
                                {
                                  "name": "token_type",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "user",
                                  "type": {
                                    "type": "object",
                                    "name": "User",
                                    "properties": [
                                      {
                                        "name": "action_link",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "app_metadata",
                                        "type": {
                                          "type": "object",
                                          "name": "UserAppMetadata",
                                          "properties": [
                                            {
                                              "name": "provider",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "aud",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "name": "confirmation_sent_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "confirmed_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "created_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "name": "email",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "email_change_sent_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "email_confirmed_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "factors",
                                        "type": {
                                          "type": "array",
                                          "elemType": {
                                            "type": "object",
                                            "name": "Factor",
                                            "properties": [
                                              {
                                                "name": "created_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "name": "factor_type",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "comment": {
                                                  "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                                }
                                              },
                                              {
                                                "name": "friendly_name",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true,
                                                "comment": {
                                                  "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                                }
                                              },
                                              {
                                                "name": "id",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "comment": {
                                                  "shortText": "ID of the factor."
                                                }
                                              },
                                              {
                                                "name": "status",
                                                "type": {
                                                  "type": "union",
                                                  "subTypes": [
                                                    {
                                                      "type": "literal",
                                                      "value": "verified"
                                                    },
                                                    {
                                                      "type": "literal",
                                                      "value": "unverified"
                                                    }
                                                  ]
                                                },
                                                "comment": {
                                                  "shortText": "Factor's status."
                                                }
                                              },
                                              {
                                                "name": "updated_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "id",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "name": "identities",
                                        "type": {
                                          "type": "array",
                                          "elemType": {
                                            "type": "object",
                                            "name": "UserIdentity",
                                            "properties": [
                                              {
                                                "name": "created_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "id",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "name": "identity_data",
                                                "type": {
                                                  "type": "index signature",
                                                  "keyType": {
                                                    "type": "intrinsic",
                                                    "name": "string"
                                                  },
                                                  "valueType": {
                                                    "type": "intrinsic",
                                                    "name": "any"
                                                  }
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "identity_id",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "name": "last_sign_in_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "provider",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "name": "updated_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "user_id",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "invited_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "last_sign_in_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "new_email",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "new_phone",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "phone",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "phone_confirmed_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "recovery_sent_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "role",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "updated_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "user_metadata",
                                        "type": {
                                          "type": "object",
                                          "name": "UserMetadata",
                                          "properties": []
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "session",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "session",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Returns the session, refreshing it if necessary.",
          "text": "The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\\n\\n**IMPORTANT:** This method loads values directly from the storage attached\\nto the client. If that storage is based on request cookies for example,\\nthe values in it may not be authentic and therefore it's strongly advised\\nagainst using this method and its results in such circumstances. A warning\\nwill be emitted if this is detected. Use {@link #getUser()} instead.\\n"
        }
      },
      "@supabase/auth-js.GoTrueClient.getUser": {
        "name": "@supabase/auth-js.GoTrueClient.getUser",
        "params": [
          {
            "name": "jwt",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "isOptional": true,
            "comment": {
              "shortText": "Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "UserResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "user",
                            "type": {
                              "type": "object",
                              "name": "User",
                              "properties": [
                                {
                                  "name": "action_link",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "app_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserAppMetadata",
                                    "properties": [
                                      {
                                        "name": "provider",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "aud",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "confirmation_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "created_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_change_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "factors",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "Factor",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "factor_type",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                          }
                                        },
                                        {
                                          "name": "friendly_name",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true,
                                          "comment": {
                                            "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                          }
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "ID of the factor."
                                          }
                                        },
                                        {
                                          "name": "status",
                                          "type": {
                                            "type": "union",
                                            "subTypes": [
                                              {
                                                "type": "literal",
                                                "value": "verified"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "unverified"
                                              }
                                            ]
                                          },
                                          "comment": {
                                            "shortText": "Factor's status."
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "id",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "identities",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "UserIdentity",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "identity_data",
                                          "type": {
                                            "type": "index signature",
                                            "keyType": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "valueType": {
                                              "type": "intrinsic",
                                              "name": "any"
                                            }
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "identity_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "last_sign_in_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "provider",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "user_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "invited_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "last_sign_in_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "recovery_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "updated_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "user_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserMetadata",
                                    "properties": []
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "user",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Gets the current user details if there is an existing session. This method\\nperforms a network request to the Supabase Auth server, so the returned\\nvalue is authentic and can be used to base authorization rules on."
        }
      },
      "@supabase/auth-js.GoTrueClient.getUserIdentities": {
        "name": "@supabase/auth-js.GoTrueClient.getUserIdentities",
        "params": [],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "identities",
                            "type": {
                              "type": "array",
                              "elemType": {
                                "type": "object",
                                "name": "UserIdentity",
                                "properties": [
                                  {
                                    "name": "created_at",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    },
                                    "isOptional": true
                                  },
                                  {
                                    "name": "id",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "name": "identity_data",
                                    "type": {
                                      "type": "index signature",
                                      "keyType": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "valueType": {
                                        "type": "intrinsic",
                                        "name": "any"
                                      }
                                    },
                                    "isOptional": true
                                  },
                                  {
                                    "name": "identity_id",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "name": "last_sign_in_at",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    },
                                    "isOptional": true
                                  },
                                  {
                                    "name": "provider",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "name": "updated_at",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    },
                                    "isOptional": true
                                  },
                                  {
                                    "name": "user_id",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Gets all the identities linked to a user."
        }
      },
      "@supabase/auth-js.GoTrueClient.initialize": {
        "name": "@supabase/auth-js.GoTrueClient.initialize",
        "params": [],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "name": "InitializeResult",
              "type": "object",
              "properties": [
                {
                  "name": "error",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "nameOnly",
                        "name": "AuthError"
                      },
                      {
                        "type": "literal",
                        "value": null
                      }
                    ]
                  }
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Initializes the client session either from the url or from storage.\\nThis method is automatically called when instantiating the client, but should also be called\\nmanually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc)."
        }
      },
      "@supabase/auth-js.GoTrueClient.linkIdentity": {
        "name": "@supabase/auth-js.GoTrueClient.linkIdentity",
        "params": [
          {
            "name": "credentials",
            "type": {
              "name": "SignInWithOAuthCredentials",
              "type": "object",
              "properties": [
                {
                  "name": "options",
                  "type": {
                    "type": "object",
                    "properties": [
                      {
                        "name": "queryParams",
                        "type": {
                          "type": "index signature",
                          "keyType": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "valueType": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "An object of query params"
                        }
                      },
                      {
                        "name": "redirectTo",
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "A URL to send the user to after they are confirmed."
                        }
                      },
                      {
                        "name": "scopes",
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "A space-separated list of scopes granted to the OAuth application."
                        }
                      },
                      {
                        "name": "skipBrowserRedirect",
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "If set to true does not immediately redirect the current browser context to visit the OAuth authorization page for the provider."
                        }
                      }
                    ]
                  },
                  "isOptional": true
                },
                {
                  "name": "provider",
                  "type": {
                    "type": "union",
                    "name": "Provider",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": "apple"
                      },
                      {
                        "type": "literal",
                        "value": "azure"
                      },
                      {
                        "type": "literal",
                        "value": "bitbucket"
                      },
                      {
                        "type": "literal",
                        "value": "discord"
                      },
                      {
                        "type": "literal",
                        "value": "facebook"
                      },
                      {
                        "type": "literal",
                        "value": "figma"
                      },
                      {
                        "type": "literal",
                        "value": "github"
                      },
                      {
                        "type": "literal",
                        "value": "gitlab"
                      },
                      {
                        "type": "literal",
                        "value": "google"
                      },
                      {
                        "type": "literal",
                        "value": "kakao"
                      },
                      {
                        "type": "literal",
                        "value": "keycloak"
                      },
                      {
                        "type": "literal",
                        "value": "linkedin"
                      },
                      {
                        "type": "literal",
                        "value": "linkedin_oidc"
                      },
                      {
                        "type": "literal",
                        "value": "notion"
                      },
                      {
                        "type": "literal",
                        "value": "slack"
                      },
                      {
                        "type": "literal",
                        "value": "spotify"
                      },
                      {
                        "type": "literal",
                        "value": "twitch"
                      },
                      {
                        "type": "literal",
                        "value": "twitter"
                      },
                      {
                        "type": "literal",
                        "value": "workos"
                      },
                      {
                        "type": "literal",
                        "value": "zoom"
                      },
                      {
                        "type": "literal",
                        "value": "fly"
                      }
                    ]
                  },
                  "comment": {
                    "shortText": "One of the providers supported by GoTrue."
                  }
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "OAuthResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "provider",
                            "type": {
                              "type": "union",
                              "name": "Provider",
                              "subTypes": [
                                {
                                  "type": "literal",
                                  "value": "apple"
                                },
                                {
                                  "type": "literal",
                                  "value": "azure"
                                },
                                {
                                  "type": "literal",
                                  "value": "bitbucket"
                                },
                                {
                                  "type": "literal",
                                  "value": "discord"
                                },
                                {
                                  "type": "literal",
                                  "value": "facebook"
                                },
                                {
                                  "type": "literal",
                                  "value": "figma"
                                },
                                {
                                  "type": "literal",
                                  "value": "github"
                                },
                                {
                                  "type": "literal",
                                  "value": "gitlab"
                                },
                                {
                                  "type": "literal",
                                  "value": "google"
                                },
                                {
                                  "type": "literal",
                                  "value": "kakao"
                                },
                                {
                                  "type": "literal",
                                  "value": "keycloak"
                                },
                                {
                                  "type": "literal",
                                  "value": "linkedin"
                                },
                                {
                                  "type": "literal",
                                  "value": "linkedin_oidc"
                                },
                                {
                                  "type": "literal",
                                  "value": "notion"
                                },
                                {
                                  "type": "literal",
                                  "value": "slack"
                                },
                                {
                                  "type": "literal",
                                  "value": "spotify"
                                },
                                {
                                  "type": "literal",
                                  "value": "twitch"
                                },
                                {
                                  "type": "literal",
                                  "value": "twitter"
                                },
                                {
                                  "type": "literal",
                                  "value": "workos"
                                },
                                {
                                  "type": "literal",
                                  "value": "zoom"
                                },
                                {
                                  "type": "literal",
                                  "value": "fly"
                                }
                              ]
                            }
                          },
                          {
                            "name": "url",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "provider",
                            "type": {
                              "type": "union",
                              "name": "Provider",
                              "subTypes": [
                                {
                                  "type": "literal",
                                  "value": "apple"
                                },
                                {
                                  "type": "literal",
                                  "value": "azure"
                                },
                                {
                                  "type": "literal",
                                  "value": "bitbucket"
                                },
                                {
                                  "type": "literal",
                                  "value": "discord"
                                },
                                {
                                  "type": "literal",
                                  "value": "facebook"
                                },
                                {
                                  "type": "literal",
                                  "value": "figma"
                                },
                                {
                                  "type": "literal",
                                  "value": "github"
                                },
                                {
                                  "type": "literal",
                                  "value": "gitlab"
                                },
                                {
                                  "type": "literal",
                                  "value": "google"
                                },
                                {
                                  "type": "literal",
                                  "value": "kakao"
                                },
                                {
                                  "type": "literal",
                                  "value": "keycloak"
                                },
                                {
                                  "type": "literal",
                                  "value": "linkedin"
                                },
                                {
                                  "type": "literal",
                                  "value": "linkedin_oidc"
                                },
                                {
                                  "type": "literal",
                                  "value": "notion"
                                },
                                {
                                  "type": "literal",
                                  "value": "slack"
                                },
                                {
                                  "type": "literal",
                                  "value": "spotify"
                                },
                                {
                                  "type": "literal",
                                  "value": "twitch"
                                },
                                {
                                  "type": "literal",
                                  "value": "twitter"
                                },
                                {
                                  "type": "literal",
                                  "value": "workos"
                                },
                                {
                                  "type": "literal",
                                  "value": "zoom"
                                },
                                {
                                  "type": "literal",
                                  "value": "fly"
                                }
                              ]
                            }
                          },
                          {
                            "name": "url",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Links an oauth identity to an existing user.\\nThis method supports the PKCE flow."
        }
      },
      "@supabase/auth-js.GoTrueClient.onAuthStateChange": {
        "name": "@supabase/auth-js.GoTrueClient.onAuthStateChange",
        "params": [
          {
            "name": "callback",
            "type": {
              "type": "function",
              "params": [
                {
                  "name": "event",
                  "type": {
                    "type": "union",
                    "name": "AuthChangeEvent",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": "INITIAL_SESSION"
                      },
                      {
                        "type": "literal",
                        "value": "PASSWORD_RECOVERY"
                      },
                      {
                        "type": "literal",
                        "value": "SIGNED_IN"
                      },
                      {
                        "type": "literal",
                        "value": "SIGNED_OUT"
                      },
                      {
                        "type": "literal",
                        "value": "TOKEN_REFRESHED"
                      },
                      {
                        "type": "literal",
                        "value": "USER_UPDATED"
                      },
                      {
                        "type": "literal",
                        "value": "MFA_CHALLENGE_VERIFIED"
                      }
                    ]
                  }
                },
                {
                  "name": "session",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "object",
                        "name": "Session",
                        "properties": [
                          {
                            "name": "access_token",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "comment": {
                              "shortText": "The access token jwt. It is recommended to set the JWT_EXPIRY to a shorter expiry value."
                            }
                          },
                          {
                            "name": "expires_at",
                            "type": {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "A timestamp of when the token will expire. Returned when a login is confirmed."
                            }
                          },
                          {
                            "name": "expires_in",
                            "type": {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            "comment": {
                              "shortText": "The number of seconds until the token expires (since it was issued). Returned when a login is confirmed."
                            }
                          },
                          {
                            "name": "provider_refresh_token",
                            "type": {
                              "type": "union",
                              "subTypes": [
                                {
                                  "type": "literal",
                                  "value": null
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              ]
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "The oauth provider refresh token. If present, this can be used to refresh the provider_token via the oauth provider's API.\\nNot all oauth providers return a provider refresh token. If the provider_refresh_token is missing, please refer to the oauth provider's documentation for information on how to obtain the provider refresh token."
                            }
                          },
                          {
                            "name": "provider_token",
                            "type": {
                              "type": "union",
                              "subTypes": [
                                {
                                  "type": "literal",
                                  "value": null
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              ]
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "The oauth provider token. If present, this can be used to make external API requests to the oauth provider used."
                            }
                          },
                          {
                            "name": "refresh_token",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "comment": {
                              "shortText": "A one-time used refresh token that never expires."
                            }
                          },
                          {
                            "name": "token_type",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "object",
                              "name": "User",
                              "properties": [
                                {
                                  "name": "action_link",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "app_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserAppMetadata",
                                    "properties": [
                                      {
                                        "name": "provider",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "aud",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "confirmation_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "created_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_change_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "factors",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "Factor",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "factor_type",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                          }
                                        },
                                        {
                                          "name": "friendly_name",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true,
                                          "comment": {
                                            "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                          }
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "ID of the factor."
                                          }
                                        },
                                        {
                                          "name": "status",
                                          "type": {
                                            "type": "union",
                                            "subTypes": [
                                              {
                                                "type": "literal",
                                                "value": "verified"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "unverified"
                                              }
                                            ]
                                          },
                                          "comment": {
                                            "shortText": "Factor's status."
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "id",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "identities",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "UserIdentity",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "identity_data",
                                          "type": {
                                            "type": "index signature",
                                            "keyType": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "valueType": {
                                              "type": "intrinsic",
                                              "name": "any"
                                            }
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "identity_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "last_sign_in_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "provider",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "user_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "invited_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "last_sign_in_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "recovery_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "updated_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "user_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserMetadata",
                                    "properties": []
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "ret": {
                "type": {
                  "type": "union",
                  "subTypes": [
                    {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    {
                      "type": "promise",
                      "name": "Promise",
                      "awaited": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            },
            "comment": {
              "shortText": "A callback function to be invoked when an auth event happens.\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "object",
            "properties": [
              {
                "name": "data",
                "type": {
                  "type": "object",
                  "properties": [
                    {
                      "name": "subscription",
                      "type": {
                        "type": "object",
                        "name": "Subscription",
                        "properties": [
                          {
                            "name": "id",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "comment": {
                              "shortText": "The subscriber UUID. This will be set by the client."
                            }
                          },
                          {
                            "type": "function",
                            "name": "callback",
                            "params": [
                              {
                                "name": "event",
                                "type": {
                                  "type": "union",
                                  "name": "AuthChangeEvent",
                                  "subTypes": [
                                    {
                                      "type": "literal",
                                      "value": "INITIAL_SESSION"
                                    },
                                    {
                                      "type": "literal",
                                      "value": "PASSWORD_RECOVERY"
                                    },
                                    {
                                      "type": "literal",
                                      "value": "SIGNED_IN"
                                    },
                                    {
                                      "type": "literal",
                                      "value": "SIGNED_OUT"
                                    },
                                    {
                                      "type": "literal",
                                      "value": "TOKEN_REFRESHED"
                                    },
                                    {
                                      "type": "literal",
                                      "value": "USER_UPDATED"
                                    },
                                    {
                                      "type": "literal",
                                      "value": "MFA_CHALLENGE_VERIFIED"
                                    }
                                  ]
                                }
                              },
                              {
                                "name": "session",
                                "type": {
                                  "type": "union",
                                  "subTypes": [
                                    {
                                      "type": "literal",
                                      "value": null
                                    },
                                    {
                                      "type": "object",
                                      "name": "Session",
                                      "properties": [
                                        {
                                          "name": "access_token",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "The access token jwt. It is recommended to set the JWT_EXPIRY to a shorter expiry value."
                                          }
                                        },
                                        {
                                          "name": "expires_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                          },
                                          "isOptional": true,
                                          "comment": {
                                            "shortText": "A timestamp of when the token will expire. Returned when a login is confirmed."
                                          }
                                        },
                                        {
                                          "name": "expires_in",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                          },
                                          "comment": {
                                            "shortText": "The number of seconds until the token expires (since it was issued). Returned when a login is confirmed."
                                          }
                                        },
                                        {
                                          "name": "provider_refresh_token",
                                          "type": {
                                            "type": "union",
                                            "subTypes": [
                                              {
                                                "type": "literal",
                                                "value": null
                                              },
                                              {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            ]
                                          },
                                          "isOptional": true,
                                          "comment": {
                                            "shortText": "The oauth provider refresh token. If present, this can be used to refresh the provider_token via the oauth provider's API.\\nNot all oauth providers return a provider refresh token. If the provider_refresh_token is missing, please refer to the oauth provider's documentation for information on how to obtain the provider refresh token."
                                          }
                                        },
                                        {
                                          "name": "provider_token",
                                          "type": {
                                            "type": "union",
                                            "subTypes": [
                                              {
                                                "type": "literal",
                                                "value": null
                                              },
                                              {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            ]
                                          },
                                          "isOptional": true,
                                          "comment": {
                                            "shortText": "The oauth provider token. If present, this can be used to make external API requests to the oauth provider used."
                                          }
                                        },
                                        {
                                          "name": "refresh_token",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "A one-time used refresh token that never expires."
                                          }
                                        },
                                        {
                                          "name": "token_type",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "user",
                                          "type": {
                                            "type": "object",
                                            "name": "User",
                                            "properties": [
                                              {
                                                "name": "action_link",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "app_metadata",
                                                "type": {
                                                  "type": "object",
                                                  "name": "UserAppMetadata",
                                                  "properties": [
                                                    {
                                                      "name": "provider",
                                                      "type": {
                                                        "type": "intrinsic",
                                                        "name": "string"
                                                      },
                                                      "isOptional": true
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "name": "aud",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "name": "confirmation_sent_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "confirmed_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "created_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "name": "email",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "email_change_sent_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "email_confirmed_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "factors",
                                                "type": {
                                                  "type": "array",
                                                  "elemType": {
                                                    "type": "object",
                                                    "name": "Factor",
                                                    "properties": [
                                                      {
                                                        "name": "created_at",
                                                        "type": {
                                                          "type": "intrinsic",
                                                          "name": "string"
                                                        }
                                                      },
                                                      {
                                                        "name": "factor_type",
                                                        "type": {
                                                          "type": "intrinsic",
                                                          "name": "string"
                                                        },
                                                        "comment": {
                                                          "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                                        }
                                                      },
                                                      {
                                                        "name": "friendly_name",
                                                        "type": {
                                                          "type": "intrinsic",
                                                          "name": "string"
                                                        },
                                                        "isOptional": true,
                                                        "comment": {
                                                          "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                                        }
                                                      },
                                                      {
                                                        "name": "id",
                                                        "type": {
                                                          "type": "intrinsic",
                                                          "name": "string"
                                                        },
                                                        "comment": {
                                                          "shortText": "ID of the factor."
                                                        }
                                                      },
                                                      {
                                                        "name": "status",
                                                        "type": {
                                                          "type": "union",
                                                          "subTypes": [
                                                            {
                                                              "type": "literal",
                                                              "value": "verified"
                                                            },
                                                            {
                                                              "type": "literal",
                                                              "value": "unverified"
                                                            }
                                                          ]
                                                        },
                                                        "comment": {
                                                          "shortText": "Factor's status."
                                                        }
                                                      },
                                                      {
                                                        "name": "updated_at",
                                                        "type": {
                                                          "type": "intrinsic",
                                                          "name": "string"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "id",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "name": "identities",
                                                "type": {
                                                  "type": "array",
                                                  "elemType": {
                                                    "type": "object",
                                                    "name": "UserIdentity",
                                                    "properties": [
                                                      {
                                                        "name": "created_at",
                                                        "type": {
                                                          "type": "intrinsic",
                                                          "name": "string"
                                                        },
                                                        "isOptional": true
                                                      },
                                                      {
                                                        "name": "id",
                                                        "type": {
                                                          "type": "intrinsic",
                                                          "name": "string"
                                                        }
                                                      },
                                                      {
                                                        "name": "identity_data",
                                                        "type": {
                                                          "type": "index signature",
                                                          "keyType": {
                                                            "type": "intrinsic",
                                                            "name": "string"
                                                          },
                                                          "valueType": {
                                                            "type": "intrinsic",
                                                            "name": "any"
                                                          }
                                                        },
                                                        "isOptional": true
                                                      },
                                                      {
                                                        "name": "identity_id",
                                                        "type": {
                                                          "type": "intrinsic",
                                                          "name": "string"
                                                        }
                                                      },
                                                      {
                                                        "name": "last_sign_in_at",
                                                        "type": {
                                                          "type": "intrinsic",
                                                          "name": "string"
                                                        },
                                                        "isOptional": true
                                                      },
                                                      {
                                                        "name": "provider",
                                                        "type": {
                                                          "type": "intrinsic",
                                                          "name": "string"
                                                        }
                                                      },
                                                      {
                                                        "name": "updated_at",
                                                        "type": {
                                                          "type": "intrinsic",
                                                          "name": "string"
                                                        },
                                                        "isOptional": true
                                                      },
                                                      {
                                                        "name": "user_id",
                                                        "type": {
                                                          "type": "intrinsic",
                                                          "name": "string"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "invited_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "last_sign_in_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "new_email",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "new_phone",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "phone",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "phone_confirmed_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "recovery_sent_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "role",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "updated_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "user_metadata",
                                                "type": {
                                                  "type": "object",
                                                  "name": "UserMetadata",
                                                  "properties": []
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ],
                            "ret": {
                              "type": {
                                "type": "intrinsic",
                                "name": "void"
                              }
                            },
                            "comment": {
                              "shortText": "The function to call every time there is an event. eg: (eventName) => {}"
                            }
                          },
                          {
                            "type": "function",
                            "name": "unsubscribe",
                            "params": [],
                            "ret": {
                              "type": {
                                "type": "intrinsic",
                                "name": "void"
                              }
                            },
                            "comment": {
                              "shortText": "Call this to remove the listener."
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "comment": {
          "shortText": "Receive a notification every time an auth event happens."
        }
      },
      "@supabase/auth-js.GoTrueClient.reauthenticate": {
        "name": "@supabase/auth-js.GoTrueClient.reauthenticate",
        "params": [],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "AuthResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "session",
                            "type": {
                              "type": "union",
                              "subTypes": [
                                {
                                  "type": "object",
                                  "name": "Session",
                                  "properties": [
                                    {
                                      "name": "access_token",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "comment": {
                                        "shortText": "The access token jwt. It is recommended to set the JWT_EXPIRY to a shorter expiry value."
                                      }
                                    },
                                    {
                                      "name": "expires_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      },
                                      "isOptional": true,
                                      "comment": {
                                        "shortText": "A timestamp of when the token will expire. Returned when a login is confirmed."
                                      }
                                    },
                                    {
                                      "name": "expires_in",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      },
                                      "comment": {
                                        "shortText": "The number of seconds until the token expires (since it was issued). Returned when a login is confirmed."
                                      }
                                    },
                                    {
                                      "name": "provider_refresh_token",
                                      "type": {
                                        "type": "union",
                                        "subTypes": [
                                          {
                                            "type": "literal",
                                            "value": null
                                          },
                                          {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        ]
                                      },
                                      "isOptional": true,
                                      "comment": {
                                        "shortText": "The oauth provider refresh token. If present, this can be used to refresh the provider_token via the oauth provider's API.\\nNot all oauth providers return a provider refresh token. If the provider_refresh_token is missing, please refer to the oauth provider's documentation for information on how to obtain the provider refresh token."
                                      }
                                    },
                                    {
                                      "name": "provider_token",
                                      "type": {
                                        "type": "union",
                                        "subTypes": [
                                          {
                                            "type": "literal",
                                            "value": null
                                          },
                                          {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        ]
                                      },
                                      "isOptional": true,
                                      "comment": {
                                        "shortText": "The oauth provider token. If present, this can be used to make external API requests to the oauth provider used."
                                      }
                                    },
                                    {
                                      "name": "refresh_token",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "comment": {
                                        "shortText": "A one-time used refresh token that never expires."
                                      }
                                    },
                                    {
                                      "name": "token_type",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "user",
                                      "type": {
                                        "type": "object",
                                        "name": "User",
                                        "properties": [
                                          {
                                            "name": "action_link",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "app_metadata",
                                            "type": {
                                              "type": "object",
                                              "name": "UserAppMetadata",
                                              "properties": [
                                                {
                                                  "name": "provider",
                                                  "type": {
                                                    "type": "intrinsic",
                                                    "name": "string"
                                                  },
                                                  "isOptional": true
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "name": "aud",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "name": "confirmation_sent_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "confirmed_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "created_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "name": "email",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "email_change_sent_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "email_confirmed_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "factors",
                                            "type": {
                                              "type": "array",
                                              "elemType": {
                                                "type": "object",
                                                "name": "Factor",
                                                "properties": [
                                                  {
                                                    "name": "created_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  },
                                                  {
                                                    "name": "factor_type",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "comment": {
                                                      "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                                    }
                                                  },
                                                  {
                                                    "name": "friendly_name",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "isOptional": true,
                                                    "comment": {
                                                      "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                                    }
                                                  },
                                                  {
                                                    "name": "id",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "comment": {
                                                      "shortText": "ID of the factor."
                                                    }
                                                  },
                                                  {
                                                    "name": "status",
                                                    "type": {
                                                      "type": "union",
                                                      "subTypes": [
                                                        {
                                                          "type": "literal",
                                                          "value": "verified"
                                                        },
                                                        {
                                                          "type": "literal",
                                                          "value": "unverified"
                                                        }
                                                      ]
                                                    },
                                                    "comment": {
                                                      "shortText": "Factor's status."
                                                    }
                                                  },
                                                  {
                                                    "name": "updated_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "id",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "name": "identities",
                                            "type": {
                                              "type": "array",
                                              "elemType": {
                                                "type": "object",
                                                "name": "UserIdentity",
                                                "properties": [
                                                  {
                                                    "name": "created_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "isOptional": true
                                                  },
                                                  {
                                                    "name": "id",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  },
                                                  {
                                                    "name": "identity_data",
                                                    "type": {
                                                      "type": "index signature",
                                                      "keyType": {
                                                        "type": "intrinsic",
                                                        "name": "string"
                                                      },
                                                      "valueType": {
                                                        "type": "intrinsic",
                                                        "name": "any"
                                                      }
                                                    },
                                                    "isOptional": true
                                                  },
                                                  {
                                                    "name": "identity_id",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  },
                                                  {
                                                    "name": "last_sign_in_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "isOptional": true
                                                  },
                                                  {
                                                    "name": "provider",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  },
                                                  {
                                                    "name": "updated_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "isOptional": true
                                                  },
                                                  {
                                                    "name": "user_id",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "invited_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "last_sign_in_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "new_email",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "new_phone",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "phone",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "phone_confirmed_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "recovery_sent_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "role",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "updated_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "user_metadata",
                                            "type": {
                                              "type": "object",
                                              "name": "UserMetadata",
                                              "properties": []
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "literal",
                                  "value": null
                                }
                              ]
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "union",
                              "subTypes": [
                                {
                                  "type": "object",
                                  "name": "User",
                                  "properties": [
                                    {
                                      "name": "action_link",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "app_metadata",
                                      "type": {
                                        "type": "object",
                                        "name": "UserAppMetadata",
                                        "properties": [
                                          {
                                            "name": "provider",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "name": "aud",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "confirmation_sent_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "confirmed_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "created_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "email",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "email_change_sent_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "email_confirmed_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "factors",
                                      "type": {
                                        "type": "array",
                                        "elemType": {
                                          "type": "object",
                                          "name": "Factor",
                                          "properties": [
                                            {
                                              "name": "created_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "name": "factor_type",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "comment": {
                                                "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                              }
                                            },
                                            {
                                              "name": "friendly_name",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true,
                                              "comment": {
                                                "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                              }
                                            },
                                            {
                                              "name": "id",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "comment": {
                                                "shortText": "ID of the factor."
                                              }
                                            },
                                            {
                                              "name": "status",
                                              "type": {
                                                "type": "union",
                                                "subTypes": [
                                                  {
                                                    "type": "literal",
                                                    "value": "verified"
                                                  },
                                                  {
                                                    "type": "literal",
                                                    "value": "unverified"
                                                  }
                                                ]
                                              },
                                              "comment": {
                                                "shortText": "Factor's status."
                                              }
                                            },
                                            {
                                              "name": "updated_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "id",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "identities",
                                      "type": {
                                        "type": "array",
                                        "elemType": {
                                          "type": "object",
                                          "name": "UserIdentity",
                                          "properties": [
                                            {
                                              "name": "created_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "id",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "name": "identity_data",
                                              "type": {
                                                "type": "index signature",
                                                "keyType": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "valueType": {
                                                  "type": "intrinsic",
                                                  "name": "any"
                                                }
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "identity_id",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "name": "last_sign_in_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "provider",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "name": "updated_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "user_id",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "invited_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "last_sign_in_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "new_email",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "new_phone",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "phone",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "phone_confirmed_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "recovery_sent_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "role",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "updated_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "user_metadata",
                                      "type": {
                                        "type": "object",
                                        "name": "UserMetadata",
                                        "properties": []
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "literal",
                                  "value": null
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "session",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Sends a reauthentication OTP to the user's email or phone number.\\nRequires the user to be signed-in."
        }
      },
      "@supabase/auth-js.GoTrueClient.refreshSession": {
        "name": "@supabase/auth-js.GoTrueClient.refreshSession",
        "params": [
          {
            "name": "currentSession",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "refresh_token",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ]
            },
            "isOptional": true,
            "comment": {
              "shortText": "The current session. If passed in, it must contain a refresh token.\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "AuthResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "session",
                            "type": {
                              "type": "union",
                              "subTypes": [
                                {
                                  "type": "object",
                                  "name": "Session",
                                  "properties": [
                                    {
                                      "name": "access_token",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "comment": {
                                        "shortText": "The access token jwt. It is recommended to set the JWT_EXPIRY to a shorter expiry value."
                                      }
                                    },
                                    {
                                      "name": "expires_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      },
                                      "isOptional": true,
                                      "comment": {
                                        "shortText": "A timestamp of when the token will expire. Returned when a login is confirmed."
                                      }
                                    },
                                    {
                                      "name": "expires_in",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      },
                                      "comment": {
                                        "shortText": "The number of seconds until the token expires (since it was issued). Returned when a login is confirmed."
                                      }
                                    },
                                    {
                                      "name": "provider_refresh_token",
                                      "type": {
                                        "type": "union",
                                        "subTypes": [
                                          {
                                            "type": "literal",
                                            "value": null
                                          },
                                          {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        ]
                                      },
                                      "isOptional": true,
                                      "comment": {
                                        "shortText": "The oauth provider refresh token. If present, this can be used to refresh the provider_token via the oauth provider's API.\\nNot all oauth providers return a provider refresh token. If the provider_refresh_token is missing, please refer to the oauth provider's documentation for information on how to obtain the provider refresh token."
                                      }
                                    },
                                    {
                                      "name": "provider_token",
                                      "type": {
                                        "type": "union",
                                        "subTypes": [
                                          {
                                            "type": "literal",
                                            "value": null
                                          },
                                          {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        ]
                                      },
                                      "isOptional": true,
                                      "comment": {
                                        "shortText": "The oauth provider token. If present, this can be used to make external API requests to the oauth provider used."
                                      }
                                    },
                                    {
                                      "name": "refresh_token",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "comment": {
                                        "shortText": "A one-time used refresh token that never expires."
                                      }
                                    },
                                    {
                                      "name": "token_type",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "user",
                                      "type": {
                                        "type": "object",
                                        "name": "User",
                                        "properties": [
                                          {
                                            "name": "action_link",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "app_metadata",
                                            "type": {
                                              "type": "object",
                                              "name": "UserAppMetadata",
                                              "properties": [
                                                {
                                                  "name": "provider",
                                                  "type": {
                                                    "type": "intrinsic",
                                                    "name": "string"
                                                  },
                                                  "isOptional": true
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "name": "aud",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "name": "confirmation_sent_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "confirmed_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "created_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "name": "email",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "email_change_sent_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "email_confirmed_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "factors",
                                            "type": {
                                              "type": "array",
                                              "elemType": {
                                                "type": "object",
                                                "name": "Factor",
                                                "properties": [
                                                  {
                                                    "name": "created_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  },
                                                  {
                                                    "name": "factor_type",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "comment": {
                                                      "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                                    }
                                                  },
                                                  {
                                                    "name": "friendly_name",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "isOptional": true,
                                                    "comment": {
                                                      "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                                    }
                                                  },
                                                  {
                                                    "name": "id",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "comment": {
                                                      "shortText": "ID of the factor."
                                                    }
                                                  },
                                                  {
                                                    "name": "status",
                                                    "type": {
                                                      "type": "union",
                                                      "subTypes": [
                                                        {
                                                          "type": "literal",
                                                          "value": "verified"
                                                        },
                                                        {
                                                          "type": "literal",
                                                          "value": "unverified"
                                                        }
                                                      ]
                                                    },
                                                    "comment": {
                                                      "shortText": "Factor's status."
                                                    }
                                                  },
                                                  {
                                                    "name": "updated_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "id",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "name": "identities",
                                            "type": {
                                              "type": "array",
                                              "elemType": {
                                                "type": "object",
                                                "name": "UserIdentity",
                                                "properties": [
                                                  {
                                                    "name": "created_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "isOptional": true
                                                  },
                                                  {
                                                    "name": "id",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  },
                                                  {
                                                    "name": "identity_data",
                                                    "type": {
                                                      "type": "index signature",
                                                      "keyType": {
                                                        "type": "intrinsic",
                                                        "name": "string"
                                                      },
                                                      "valueType": {
                                                        "type": "intrinsic",
                                                        "name": "any"
                                                      }
                                                    },
                                                    "isOptional": true
                                                  },
                                                  {
                                                    "name": "identity_id",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  },
                                                  {
                                                    "name": "last_sign_in_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "isOptional": true
                                                  },
                                                  {
                                                    "name": "provider",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  },
                                                  {
                                                    "name": "updated_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "isOptional": true
                                                  },
                                                  {
                                                    "name": "user_id",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "invited_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "last_sign_in_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "new_email",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "new_phone",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "phone",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "phone_confirmed_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "recovery_sent_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "role",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "updated_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "user_metadata",
                                            "type": {
                                              "type": "object",
                                              "name": "UserMetadata",
                                              "properties": []
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "literal",
                                  "value": null
                                }
                              ]
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "union",
                              "subTypes": [
                                {
                                  "type": "object",
                                  "name": "User",
                                  "properties": [
                                    {
                                      "name": "action_link",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "app_metadata",
                                      "type": {
                                        "type": "object",
                                        "name": "UserAppMetadata",
                                        "properties": [
                                          {
                                            "name": "provider",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "name": "aud",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "confirmation_sent_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "confirmed_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "created_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "email",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "email_change_sent_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "email_confirmed_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "factors",
                                      "type": {
                                        "type": "array",
                                        "elemType": {
                                          "type": "object",
                                          "name": "Factor",
                                          "properties": [
                                            {
                                              "name": "created_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "name": "factor_type",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "comment": {
                                                "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                              }
                                            },
                                            {
                                              "name": "friendly_name",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true,
                                              "comment": {
                                                "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                              }
                                            },
                                            {
                                              "name": "id",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "comment": {
                                                "shortText": "ID of the factor."
                                              }
                                            },
                                            {
                                              "name": "status",
                                              "type": {
                                                "type": "union",
                                                "subTypes": [
                                                  {
                                                    "type": "literal",
                                                    "value": "verified"
                                                  },
                                                  {
                                                    "type": "literal",
                                                    "value": "unverified"
                                                  }
                                                ]
                                              },
                                              "comment": {
                                                "shortText": "Factor's status."
                                              }
                                            },
                                            {
                                              "name": "updated_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "id",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "identities",
                                      "type": {
                                        "type": "array",
                                        "elemType": {
                                          "type": "object",
                                          "name": "UserIdentity",
                                          "properties": [
                                            {
                                              "name": "created_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "id",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "name": "identity_data",
                                              "type": {
                                                "type": "index signature",
                                                "keyType": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "valueType": {
                                                  "type": "intrinsic",
                                                  "name": "any"
                                                }
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "identity_id",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "name": "last_sign_in_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "provider",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "name": "updated_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "user_id",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "invited_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "last_sign_in_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "new_email",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "new_phone",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "phone",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "phone_confirmed_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "recovery_sent_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "role",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "updated_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "user_metadata",
                                      "type": {
                                        "type": "object",
                                        "name": "UserMetadata",
                                        "properties": []
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "literal",
                                  "value": null
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "session",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Returns a new session, regardless of expiry status.\\nTakes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\\nIf the current session's refresh token is invalid, an error will be thrown."
        }
      },
      "@supabase/auth-js.GoTrueClient.resend": {
        "name": "@supabase/auth-js.GoTrueClient.resend",
        "params": [
          {
            "name": "credentials",
            "type": {
              "type": "union",
              "name": "ResendParams",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "email",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "name": "options",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "captchaToken",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "Verification token received when the user completes the captcha on the site."
                            }
                          },
                          {
                            "name": "emailRedirectTo",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "A URL to send the user to after they have signed-in."
                            }
                          }
                        ]
                      },
                      "isOptional": true
                    },
                    {
                      "name": "type",
                      "type": {
                        "type": "union",
                        "subTypes": [
                          {
                            "type": "literal",
                            "value": "signup"
                          },
                          {
                            "type": "literal",
                            "value": "email_change"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "options",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "captchaToken",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "Verification token received when the user completes the captcha on the site."
                            }
                          }
                        ]
                      },
                      "isOptional": true
                    },
                    {
                      "name": "phone",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "name": "type",
                      "type": {
                        "type": "union",
                        "subTypes": [
                          {
                            "type": "literal",
                            "value": "sms"
                          },
                          {
                            "type": "literal",
                            "value": "phone_change"
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "AuthOtpResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "messageId",
                            "type": {
                              "type": "union",
                              "subTypes": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "literal",
                                  "value": null
                                }
                              ]
                            },
                            "isOptional": true
                          },
                          {
                            "name": "session",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "messageId",
                            "type": {
                              "type": "union",
                              "subTypes": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "literal",
                                  "value": null
                                }
                              ]
                            },
                            "isOptional": true
                          },
                          {
                            "name": "session",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP."
        }
      },
      "@supabase/auth-js.GoTrueClient.resetPasswordForEmail": {
        "name": "@supabase/auth-js.GoTrueClient.resetPasswordForEmail",
        "params": [
          {
            "name": "email",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The email address of the user."
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "captchaToken",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Verification token received when the user completes the captcha on the site.\\n"
                  }
                },
                {
                  "name": "redirectTo",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The URL to send the user to after they click the password reset link."
                  }
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data"
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Sends a password reset request to an email address. This method supports the PKCE flow."
        }
      },
      "@supabase/auth-js.GoTrueClient.setSession": {
        "name": "@supabase/auth-js.GoTrueClient.setSession",
        "params": [
          {
            "name": "currentSession",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "access_token",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "name": "refresh_token",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ]
            },
            "comment": {
              "shortText": "The current session that minimally contains an access token and refresh token.\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "AuthResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "session",
                            "type": {
                              "type": "union",
                              "subTypes": [
                                {
                                  "type": "object",
                                  "name": "Session",
                                  "properties": [
                                    {
                                      "name": "access_token",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "comment": {
                                        "shortText": "The access token jwt. It is recommended to set the JWT_EXPIRY to a shorter expiry value."
                                      }
                                    },
                                    {
                                      "name": "expires_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      },
                                      "isOptional": true,
                                      "comment": {
                                        "shortText": "A timestamp of when the token will expire. Returned when a login is confirmed."
                                      }
                                    },
                                    {
                                      "name": "expires_in",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      },
                                      "comment": {
                                        "shortText": "The number of seconds until the token expires (since it was issued). Returned when a login is confirmed."
                                      }
                                    },
                                    {
                                      "name": "provider_refresh_token",
                                      "type": {
                                        "type": "union",
                                        "subTypes": [
                                          {
                                            "type": "literal",
                                            "value": null
                                          },
                                          {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        ]
                                      },
                                      "isOptional": true,
                                      "comment": {
                                        "shortText": "The oauth provider refresh token. If present, this can be used to refresh the provider_token via the oauth provider's API.\\nNot all oauth providers return a provider refresh token. If the provider_refresh_token is missing, please refer to the oauth provider's documentation for information on how to obtain the provider refresh token."
                                      }
                                    },
                                    {
                                      "name": "provider_token",
                                      "type": {
                                        "type": "union",
                                        "subTypes": [
                                          {
                                            "type": "literal",
                                            "value": null
                                          },
                                          {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        ]
                                      },
                                      "isOptional": true,
                                      "comment": {
                                        "shortText": "The oauth provider token. If present, this can be used to make external API requests to the oauth provider used."
                                      }
                                    },
                                    {
                                      "name": "refresh_token",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "comment": {
                                        "shortText": "A one-time used refresh token that never expires."
                                      }
                                    },
                                    {
                                      "name": "token_type",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "user",
                                      "type": {
                                        "type": "object",
                                        "name": "User",
                                        "properties": [
                                          {
                                            "name": "action_link",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "app_metadata",
                                            "type": {
                                              "type": "object",
                                              "name": "UserAppMetadata",
                                              "properties": [
                                                {
                                                  "name": "provider",
                                                  "type": {
                                                    "type": "intrinsic",
                                                    "name": "string"
                                                  },
                                                  "isOptional": true
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "name": "aud",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "name": "confirmation_sent_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "confirmed_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "created_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "name": "email",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "email_change_sent_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "email_confirmed_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "factors",
                                            "type": {
                                              "type": "array",
                                              "elemType": {
                                                "type": "object",
                                                "name": "Factor",
                                                "properties": [
                                                  {
                                                    "name": "created_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  },
                                                  {
                                                    "name": "factor_type",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "comment": {
                                                      "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                                    }
                                                  },
                                                  {
                                                    "name": "friendly_name",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "isOptional": true,
                                                    "comment": {
                                                      "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                                    }
                                                  },
                                                  {
                                                    "name": "id",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "comment": {
                                                      "shortText": "ID of the factor."
                                                    }
                                                  },
                                                  {
                                                    "name": "status",
                                                    "type": {
                                                      "type": "union",
                                                      "subTypes": [
                                                        {
                                                          "type": "literal",
                                                          "value": "verified"
                                                        },
                                                        {
                                                          "type": "literal",
                                                          "value": "unverified"
                                                        }
                                                      ]
                                                    },
                                                    "comment": {
                                                      "shortText": "Factor's status."
                                                    }
                                                  },
                                                  {
                                                    "name": "updated_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "id",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "name": "identities",
                                            "type": {
                                              "type": "array",
                                              "elemType": {
                                                "type": "object",
                                                "name": "UserIdentity",
                                                "properties": [
                                                  {
                                                    "name": "created_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "isOptional": true
                                                  },
                                                  {
                                                    "name": "id",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  },
                                                  {
                                                    "name": "identity_data",
                                                    "type": {
                                                      "type": "index signature",
                                                      "keyType": {
                                                        "type": "intrinsic",
                                                        "name": "string"
                                                      },
                                                      "valueType": {
                                                        "type": "intrinsic",
                                                        "name": "any"
                                                      }
                                                    },
                                                    "isOptional": true
                                                  },
                                                  {
                                                    "name": "identity_id",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  },
                                                  {
                                                    "name": "last_sign_in_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "isOptional": true
                                                  },
                                                  {
                                                    "name": "provider",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  },
                                                  {
                                                    "name": "updated_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "isOptional": true
                                                  },
                                                  {
                                                    "name": "user_id",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "invited_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "last_sign_in_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "new_email",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "new_phone",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "phone",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "phone_confirmed_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "recovery_sent_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "role",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "updated_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "user_metadata",
                                            "type": {
                                              "type": "object",
                                              "name": "UserMetadata",
                                              "properties": []
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "literal",
                                  "value": null
                                }
                              ]
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "union",
                              "subTypes": [
                                {
                                  "type": "object",
                                  "name": "User",
                                  "properties": [
                                    {
                                      "name": "action_link",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "app_metadata",
                                      "type": {
                                        "type": "object",
                                        "name": "UserAppMetadata",
                                        "properties": [
                                          {
                                            "name": "provider",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "name": "aud",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "confirmation_sent_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "confirmed_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "created_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "email",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "email_change_sent_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "email_confirmed_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "factors",
                                      "type": {
                                        "type": "array",
                                        "elemType": {
                                          "type": "object",
                                          "name": "Factor",
                                          "properties": [
                                            {
                                              "name": "created_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "name": "factor_type",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "comment": {
                                                "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                              }
                                            },
                                            {
                                              "name": "friendly_name",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true,
                                              "comment": {
                                                "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                              }
                                            },
                                            {
                                              "name": "id",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "comment": {
                                                "shortText": "ID of the factor."
                                              }
                                            },
                                            {
                                              "name": "status",
                                              "type": {
                                                "type": "union",
                                                "subTypes": [
                                                  {
                                                    "type": "literal",
                                                    "value": "verified"
                                                  },
                                                  {
                                                    "type": "literal",
                                                    "value": "unverified"
                                                  }
                                                ]
                                              },
                                              "comment": {
                                                "shortText": "Factor's status."
                                              }
                                            },
                                            {
                                              "name": "updated_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "id",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "identities",
                                      "type": {
                                        "type": "array",
                                        "elemType": {
                                          "type": "object",
                                          "name": "UserIdentity",
                                          "properties": [
                                            {
                                              "name": "created_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "id",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "name": "identity_data",
                                              "type": {
                                                "type": "index signature",
                                                "keyType": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "valueType": {
                                                  "type": "intrinsic",
                                                  "name": "any"
                                                }
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "identity_id",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "name": "last_sign_in_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "provider",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "name": "updated_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "user_id",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "invited_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "last_sign_in_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "new_email",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "new_phone",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "phone",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "phone_confirmed_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "recovery_sent_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "role",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "updated_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "user_metadata",
                                      "type": {
                                        "type": "object",
                                        "name": "UserMetadata",
                                        "properties": []
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "literal",
                                  "value": null
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "session",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\\nIf the refresh token or access token in the current session is invalid, an error will be thrown."
        }
      },
      "@supabase/auth-js.GoTrueClient.signInAnonymously": {
        "name": "@supabase/auth-js.GoTrueClient.signInAnonymously",
        "params": [
          {
            "name": "credentials",
            "type": {
              "name": "SignInAnonymouslyCredentials",
              "type": "object",
              "properties": [
                {
                  "name": "options",
                  "type": {
                    "type": "object",
                    "properties": [
                      {
                        "name": "captchaToken",
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "Verification token received when the user completes the captcha on the site."
                        }
                      },
                      {
                        "name": "data",
                        "type": {
                          "type": "intrinsic",
                          "name": "object"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "A custom data object to store the user's metadata. This maps to the \`auth.users.raw_user_meta_data\` column.",
                          "text": "The \`data\` should be a JSON object that includes user-specific info, such as their first and last name.\\n"
                        }
                      }
                    ]
                  },
                  "isOptional": true
                }
              ]
            },
            "isOptional": true
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "AuthResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "session",
                            "type": {
                              "type": "union",
                              "subTypes": [
                                {
                                  "type": "object",
                                  "name": "Session",
                                  "properties": [
                                    {
                                      "name": "access_token",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "comment": {
                                        "shortText": "The access token jwt. It is recommended to set the JWT_EXPIRY to a shorter expiry value."
                                      }
                                    },
                                    {
                                      "name": "expires_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      },
                                      "isOptional": true,
                                      "comment": {
                                        "shortText": "A timestamp of when the token will expire. Returned when a login is confirmed."
                                      }
                                    },
                                    {
                                      "name": "expires_in",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      },
                                      "comment": {
                                        "shortText": "The number of seconds until the token expires (since it was issued). Returned when a login is confirmed."
                                      }
                                    },
                                    {
                                      "name": "provider_refresh_token",
                                      "type": {
                                        "type": "union",
                                        "subTypes": [
                                          {
                                            "type": "literal",
                                            "value": null
                                          },
                                          {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        ]
                                      },
                                      "isOptional": true,
                                      "comment": {
                                        "shortText": "The oauth provider refresh token. If present, this can be used to refresh the provider_token via the oauth provider's API.\\nNot all oauth providers return a provider refresh token. If the provider_refresh_token is missing, please refer to the oauth provider's documentation for information on how to obtain the provider refresh token."
                                      }
                                    },
                                    {
                                      "name": "provider_token",
                                      "type": {
                                        "type": "union",
                                        "subTypes": [
                                          {
                                            "type": "literal",
                                            "value": null
                                          },
                                          {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        ]
                                      },
                                      "isOptional": true,
                                      "comment": {
                                        "shortText": "The oauth provider token. If present, this can be used to make external API requests to the oauth provider used."
                                      }
                                    },
                                    {
                                      "name": "refresh_token",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "comment": {
                                        "shortText": "A one-time used refresh token that never expires."
                                      }
                                    },
                                    {
                                      "name": "token_type",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "user",
                                      "type": {
                                        "type": "object",
                                        "name": "User",
                                        "properties": [
                                          {
                                            "name": "action_link",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "app_metadata",
                                            "type": {
                                              "type": "object",
                                              "name": "UserAppMetadata",
                                              "properties": [
                                                {
                                                  "name": "provider",
                                                  "type": {
                                                    "type": "intrinsic",
                                                    "name": "string"
                                                  },
                                                  "isOptional": true
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "name": "aud",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "name": "confirmation_sent_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "confirmed_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "created_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "name": "email",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "email_change_sent_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "email_confirmed_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "factors",
                                            "type": {
                                              "type": "array",
                                              "elemType": {
                                                "type": "object",
                                                "name": "Factor",
                                                "properties": [
                                                  {
                                                    "name": "created_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  },
                                                  {
                                                    "name": "factor_type",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "comment": {
                                                      "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                                    }
                                                  },
                                                  {
                                                    "name": "friendly_name",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "isOptional": true,
                                                    "comment": {
                                                      "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                                    }
                                                  },
                                                  {
                                                    "name": "id",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "comment": {
                                                      "shortText": "ID of the factor."
                                                    }
                                                  },
                                                  {
                                                    "name": "status",
                                                    "type": {
                                                      "type": "union",
                                                      "subTypes": [
                                                        {
                                                          "type": "literal",
                                                          "value": "verified"
                                                        },
                                                        {
                                                          "type": "literal",
                                                          "value": "unverified"
                                                        }
                                                      ]
                                                    },
                                                    "comment": {
                                                      "shortText": "Factor's status."
                                                    }
                                                  },
                                                  {
                                                    "name": "updated_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "id",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "name": "identities",
                                            "type": {
                                              "type": "array",
                                              "elemType": {
                                                "type": "object",
                                                "name": "UserIdentity",
                                                "properties": [
                                                  {
                                                    "name": "created_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "isOptional": true
                                                  },
                                                  {
                                                    "name": "id",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  },
                                                  {
                                                    "name": "identity_data",
                                                    "type": {
                                                      "type": "index signature",
                                                      "keyType": {
                                                        "type": "intrinsic",
                                                        "name": "string"
                                                      },
                                                      "valueType": {
                                                        "type": "intrinsic",
                                                        "name": "any"
                                                      }
                                                    },
                                                    "isOptional": true
                                                  },
                                                  {
                                                    "name": "identity_id",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  },
                                                  {
                                                    "name": "last_sign_in_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "isOptional": true
                                                  },
                                                  {
                                                    "name": "provider",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  },
                                                  {
                                                    "name": "updated_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "isOptional": true
                                                  },
                                                  {
                                                    "name": "user_id",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "invited_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "last_sign_in_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "new_email",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "new_phone",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "phone",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "phone_confirmed_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "recovery_sent_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "role",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "updated_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "user_metadata",
                                            "type": {
                                              "type": "object",
                                              "name": "UserMetadata",
                                              "properties": []
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "literal",
                                  "value": null
                                }
                              ]
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "union",
                              "subTypes": [
                                {
                                  "type": "object",
                                  "name": "User",
                                  "properties": [
                                    {
                                      "name": "action_link",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "app_metadata",
                                      "type": {
                                        "type": "object",
                                        "name": "UserAppMetadata",
                                        "properties": [
                                          {
                                            "name": "provider",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "name": "aud",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "confirmation_sent_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "confirmed_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "created_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "email",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "email_change_sent_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "email_confirmed_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "factors",
                                      "type": {
                                        "type": "array",
                                        "elemType": {
                                          "type": "object",
                                          "name": "Factor",
                                          "properties": [
                                            {
                                              "name": "created_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "name": "factor_type",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "comment": {
                                                "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                              }
                                            },
                                            {
                                              "name": "friendly_name",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true,
                                              "comment": {
                                                "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                              }
                                            },
                                            {
                                              "name": "id",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "comment": {
                                                "shortText": "ID of the factor."
                                              }
                                            },
                                            {
                                              "name": "status",
                                              "type": {
                                                "type": "union",
                                                "subTypes": [
                                                  {
                                                    "type": "literal",
                                                    "value": "verified"
                                                  },
                                                  {
                                                    "type": "literal",
                                                    "value": "unverified"
                                                  }
                                                ]
                                              },
                                              "comment": {
                                                "shortText": "Factor's status."
                                              }
                                            },
                                            {
                                              "name": "updated_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "id",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "identities",
                                      "type": {
                                        "type": "array",
                                        "elemType": {
                                          "type": "object",
                                          "name": "UserIdentity",
                                          "properties": [
                                            {
                                              "name": "created_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "id",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "name": "identity_data",
                                              "type": {
                                                "type": "index signature",
                                                "keyType": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "valueType": {
                                                  "type": "intrinsic",
                                                  "name": "any"
                                                }
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "identity_id",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "name": "last_sign_in_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "provider",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "name": "updated_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "user_id",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "invited_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "last_sign_in_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "new_email",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "new_phone",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "phone",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "phone_confirmed_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "recovery_sent_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "role",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "updated_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "user_metadata",
                                      "type": {
                                        "type": "object",
                                        "name": "UserMetadata",
                                        "properties": []
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "literal",
                                  "value": null
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "session",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Creates a new anonymous user.",
          "returns": "A session where the is_anonymous claim in the access token JWT set to true\\n"
        }
      },
      "@supabase/auth-js.GoTrueClient.signInWithIdToken": {
        "name": "@supabase/auth-js.GoTrueClient.signInWithIdToken",
        "params": [
          {
            "name": "credentials",
            "type": {
              "name": "SignInWithIdTokenCredentials",
              "type": "object",
              "properties": [
                {
                  "name": "access_token",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "If the ID token contains an \`at_hash\` claim, then the hash of this value is compared to the value in the ID token."
                  }
                },
                {
                  "name": "nonce",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "If the ID token contains a \`nonce\` claim, then the hash of this value is compared to the value in the ID token."
                  }
                },
                {
                  "name": "options",
                  "type": {
                    "type": "object",
                    "properties": [
                      {
                        "name": "captchaToken",
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "Verification token received when the user completes the captcha on the site."
                        }
                      }
                    ]
                  },
                  "isOptional": true
                },
                {
                  "name": "provider",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": "google"
                      },
                      {
                        "type": "literal",
                        "value": "apple"
                      },
                      {
                        "type": "literal",
                        "value": "azure"
                      },
                      {
                        "type": "literal",
                        "value": "facebook"
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ]
                  },
                  "comment": {
                    "shortText": "Provider name or OIDC \`iss\` value identifying which provider should be used to verify the provided token. Supported names: \`google\`, \`apple\`, \`azure\`, \`facebook\`, \`keycloak\` (deprecated)."
                  }
                },
                {
                  "name": "token",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "comment": {
                    "shortText": "OIDC ID token issued by the specified provider. The \`iss\` claim in the ID token must match the supplied provider. Some ID tokens contain an \`at_hash\` which require that you provide an \`access_token\` value to be accepted properly. If the token contains a \`nonce\` claim you must supply the nonce used to obtain the ID token."
                  }
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "AuthTokenResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "session",
                            "type": {
                              "type": "object",
                              "name": "Session",
                              "properties": [
                                {
                                  "name": "access_token",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "comment": {
                                    "shortText": "The access token jwt. It is recommended to set the JWT_EXPIRY to a shorter expiry value."
                                  }
                                },
                                {
                                  "name": "expires_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "number"
                                  },
                                  "isOptional": true,
                                  "comment": {
                                    "shortText": "A timestamp of when the token will expire. Returned when a login is confirmed."
                                  }
                                },
                                {
                                  "name": "expires_in",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "number"
                                  },
                                  "comment": {
                                    "shortText": "The number of seconds until the token expires (since it was issued). Returned when a login is confirmed."
                                  }
                                },
                                {
                                  "name": "provider_refresh_token",
                                  "type": {
                                    "type": "union",
                                    "subTypes": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    ]
                                  },
                                  "isOptional": true,
                                  "comment": {
                                    "shortText": "The oauth provider refresh token. If present, this can be used to refresh the provider_token via the oauth provider's API.\\nNot all oauth providers return a provider refresh token. If the provider_refresh_token is missing, please refer to the oauth provider's documentation for information on how to obtain the provider refresh token."
                                  }
                                },
                                {
                                  "name": "provider_token",
                                  "type": {
                                    "type": "union",
                                    "subTypes": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    ]
                                  },
                                  "isOptional": true,
                                  "comment": {
                                    "shortText": "The oauth provider token. If present, this can be used to make external API requests to the oauth provider used."
                                  }
                                },
                                {
                                  "name": "refresh_token",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "comment": {
                                    "shortText": "A one-time used refresh token that never expires."
                                  }
                                },
                                {
                                  "name": "token_type",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "user",
                                  "type": {
                                    "type": "object",
                                    "name": "User",
                                    "properties": [
                                      {
                                        "name": "action_link",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "app_metadata",
                                        "type": {
                                          "type": "object",
                                          "name": "UserAppMetadata",
                                          "properties": [
                                            {
                                              "name": "provider",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "aud",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "name": "confirmation_sent_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "confirmed_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "created_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "name": "email",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "email_change_sent_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "email_confirmed_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "factors",
                                        "type": {
                                          "type": "array",
                                          "elemType": {
                                            "type": "object",
                                            "name": "Factor",
                                            "properties": [
                                              {
                                                "name": "created_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "name": "factor_type",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "comment": {
                                                  "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                                }
                                              },
                                              {
                                                "name": "friendly_name",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true,
                                                "comment": {
                                                  "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                                }
                                              },
                                              {
                                                "name": "id",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "comment": {
                                                  "shortText": "ID of the factor."
                                                }
                                              },
                                              {
                                                "name": "status",
                                                "type": {
                                                  "type": "union",
                                                  "subTypes": [
                                                    {
                                                      "type": "literal",
                                                      "value": "verified"
                                                    },
                                                    {
                                                      "type": "literal",
                                                      "value": "unverified"
                                                    }
                                                  ]
                                                },
                                                "comment": {
                                                  "shortText": "Factor's status."
                                                }
                                              },
                                              {
                                                "name": "updated_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "id",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "name": "identities",
                                        "type": {
                                          "type": "array",
                                          "elemType": {
                                            "type": "object",
                                            "name": "UserIdentity",
                                            "properties": [
                                              {
                                                "name": "created_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "id",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "name": "identity_data",
                                                "type": {
                                                  "type": "index signature",
                                                  "keyType": {
                                                    "type": "intrinsic",
                                                    "name": "string"
                                                  },
                                                  "valueType": {
                                                    "type": "intrinsic",
                                                    "name": "any"
                                                  }
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "identity_id",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "name": "last_sign_in_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "provider",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "name": "updated_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "user_id",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "invited_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "last_sign_in_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "new_email",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "new_phone",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "phone",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "phone_confirmed_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "recovery_sent_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "role",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "updated_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "user_metadata",
                                        "type": {
                                          "type": "object",
                                          "name": "UserMetadata",
                                          "properties": []
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "object",
                              "name": "User",
                              "properties": [
                                {
                                  "name": "action_link",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "app_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserAppMetadata",
                                    "properties": [
                                      {
                                        "name": "provider",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "aud",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "confirmation_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "created_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_change_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "factors",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "Factor",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "factor_type",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                          }
                                        },
                                        {
                                          "name": "friendly_name",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true,
                                          "comment": {
                                            "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                          }
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "ID of the factor."
                                          }
                                        },
                                        {
                                          "name": "status",
                                          "type": {
                                            "type": "union",
                                            "subTypes": [
                                              {
                                                "type": "literal",
                                                "value": "verified"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "unverified"
                                              }
                                            ]
                                          },
                                          "comment": {
                                            "shortText": "Factor's status."
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "id",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "identities",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "UserIdentity",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "identity_data",
                                          "type": {
                                            "type": "index signature",
                                            "keyType": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "valueType": {
                                              "type": "intrinsic",
                                              "name": "any"
                                            }
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "identity_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "last_sign_in_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "provider",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "user_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "invited_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "last_sign_in_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "recovery_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "updated_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "user_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserMetadata",
                                    "properties": []
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "session",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Allows signing in with an OIDC ID token. The authentication provider used\\nshould be enabled and configured."
        }
      },
      "@supabase/auth-js.GoTrueClient.signInWithOAuth": {
        "name": "@supabase/auth-js.GoTrueClient.signInWithOAuth",
        "params": [
          {
            "name": "credentials",
            "type": {
              "name": "SignInWithOAuthCredentials",
              "type": "object",
              "properties": [
                {
                  "name": "options",
                  "type": {
                    "type": "object",
                    "properties": [
                      {
                        "name": "queryParams",
                        "type": {
                          "type": "index signature",
                          "keyType": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "valueType": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "An object of query params"
                        }
                      },
                      {
                        "name": "redirectTo",
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "A URL to send the user to after they are confirmed."
                        }
                      },
                      {
                        "name": "scopes",
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "A space-separated list of scopes granted to the OAuth application."
                        }
                      },
                      {
                        "name": "skipBrowserRedirect",
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "If set to true does not immediately redirect the current browser context to visit the OAuth authorization page for the provider."
                        }
                      }
                    ]
                  },
                  "isOptional": true
                },
                {
                  "name": "provider",
                  "type": {
                    "type": "union",
                    "name": "Provider",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": "apple"
                      },
                      {
                        "type": "literal",
                        "value": "azure"
                      },
                      {
                        "type": "literal",
                        "value": "bitbucket"
                      },
                      {
                        "type": "literal",
                        "value": "discord"
                      },
                      {
                        "type": "literal",
                        "value": "facebook"
                      },
                      {
                        "type": "literal",
                        "value": "figma"
                      },
                      {
                        "type": "literal",
                        "value": "github"
                      },
                      {
                        "type": "literal",
                        "value": "gitlab"
                      },
                      {
                        "type": "literal",
                        "value": "google"
                      },
                      {
                        "type": "literal",
                        "value": "kakao"
                      },
                      {
                        "type": "literal",
                        "value": "keycloak"
                      },
                      {
                        "type": "literal",
                        "value": "linkedin"
                      },
                      {
                        "type": "literal",
                        "value": "linkedin_oidc"
                      },
                      {
                        "type": "literal",
                        "value": "notion"
                      },
                      {
                        "type": "literal",
                        "value": "slack"
                      },
                      {
                        "type": "literal",
                        "value": "spotify"
                      },
                      {
                        "type": "literal",
                        "value": "twitch"
                      },
                      {
                        "type": "literal",
                        "value": "twitter"
                      },
                      {
                        "type": "literal",
                        "value": "workos"
                      },
                      {
                        "type": "literal",
                        "value": "zoom"
                      },
                      {
                        "type": "literal",
                        "value": "fly"
                      }
                    ]
                  },
                  "comment": {
                    "shortText": "One of the providers supported by GoTrue."
                  }
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "OAuthResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "provider",
                            "type": {
                              "type": "union",
                              "name": "Provider",
                              "subTypes": [
                                {
                                  "type": "literal",
                                  "value": "apple"
                                },
                                {
                                  "type": "literal",
                                  "value": "azure"
                                },
                                {
                                  "type": "literal",
                                  "value": "bitbucket"
                                },
                                {
                                  "type": "literal",
                                  "value": "discord"
                                },
                                {
                                  "type": "literal",
                                  "value": "facebook"
                                },
                                {
                                  "type": "literal",
                                  "value": "figma"
                                },
                                {
                                  "type": "literal",
                                  "value": "github"
                                },
                                {
                                  "type": "literal",
                                  "value": "gitlab"
                                },
                                {
                                  "type": "literal",
                                  "value": "google"
                                },
                                {
                                  "type": "literal",
                                  "value": "kakao"
                                },
                                {
                                  "type": "literal",
                                  "value": "keycloak"
                                },
                                {
                                  "type": "literal",
                                  "value": "linkedin"
                                },
                                {
                                  "type": "literal",
                                  "value": "linkedin_oidc"
                                },
                                {
                                  "type": "literal",
                                  "value": "notion"
                                },
                                {
                                  "type": "literal",
                                  "value": "slack"
                                },
                                {
                                  "type": "literal",
                                  "value": "spotify"
                                },
                                {
                                  "type": "literal",
                                  "value": "twitch"
                                },
                                {
                                  "type": "literal",
                                  "value": "twitter"
                                },
                                {
                                  "type": "literal",
                                  "value": "workos"
                                },
                                {
                                  "type": "literal",
                                  "value": "zoom"
                                },
                                {
                                  "type": "literal",
                                  "value": "fly"
                                }
                              ]
                            }
                          },
                          {
                            "name": "url",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "provider",
                            "type": {
                              "type": "union",
                              "name": "Provider",
                              "subTypes": [
                                {
                                  "type": "literal",
                                  "value": "apple"
                                },
                                {
                                  "type": "literal",
                                  "value": "azure"
                                },
                                {
                                  "type": "literal",
                                  "value": "bitbucket"
                                },
                                {
                                  "type": "literal",
                                  "value": "discord"
                                },
                                {
                                  "type": "literal",
                                  "value": "facebook"
                                },
                                {
                                  "type": "literal",
                                  "value": "figma"
                                },
                                {
                                  "type": "literal",
                                  "value": "github"
                                },
                                {
                                  "type": "literal",
                                  "value": "gitlab"
                                },
                                {
                                  "type": "literal",
                                  "value": "google"
                                },
                                {
                                  "type": "literal",
                                  "value": "kakao"
                                },
                                {
                                  "type": "literal",
                                  "value": "keycloak"
                                },
                                {
                                  "type": "literal",
                                  "value": "linkedin"
                                },
                                {
                                  "type": "literal",
                                  "value": "linkedin_oidc"
                                },
                                {
                                  "type": "literal",
                                  "value": "notion"
                                },
                                {
                                  "type": "literal",
                                  "value": "slack"
                                },
                                {
                                  "type": "literal",
                                  "value": "spotify"
                                },
                                {
                                  "type": "literal",
                                  "value": "twitch"
                                },
                                {
                                  "type": "literal",
                                  "value": "twitter"
                                },
                                {
                                  "type": "literal",
                                  "value": "workos"
                                },
                                {
                                  "type": "literal",
                                  "value": "zoom"
                                },
                                {
                                  "type": "literal",
                                  "value": "fly"
                                }
                              ]
                            }
                          },
                          {
                            "name": "url",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Log in an existing user via a third-party provider.\\nThis method supports the PKCE flow."
        }
      },
      "@supabase/auth-js.GoTrueClient.signInWithOtp": {
        "name": "@supabase/auth-js.GoTrueClient.signInWithOtp",
        "params": [
          {
            "name": "credentials",
            "type": {
              "type": "union",
              "name": "SignInWithPasswordlessCredentials",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "email",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "The user's email address."
                      }
                    },
                    {
                      "name": "options",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "captchaToken",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "Verification token received when the user completes the captcha on the site."
                            }
                          },
                          {
                            "name": "data",
                            "type": {
                              "type": "intrinsic",
                              "name": "object"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "A custom data object to store the user's metadata. This maps to the \`auth.users.raw_user_meta_data\` column.",
                              "text": "The \`data\` should be a JSON object that includes user-specific info, such as their first and last name.\\n"
                            }
                          },
                          {
                            "name": "emailRedirectTo",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "The redirect url embedded in the email link"
                            }
                          },
                          {
                            "name": "shouldCreateUser",
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "If set to false, this method will not create a new user. Defaults to true."
                            }
                          }
                        ]
                      },
                      "isOptional": true
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "options",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "captchaToken",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "Verification token received when the user completes the captcha on the site."
                            }
                          },
                          {
                            "name": "channel",
                            "type": {
                              "type": "union",
                              "subTypes": [
                                {
                                  "type": "literal",
                                  "value": "sms"
                                },
                                {
                                  "type": "literal",
                                  "value": "whatsapp"
                                }
                              ]
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "Messaging channel to use (e.g. whatsapp or sms)"
                            }
                          },
                          {
                            "name": "data",
                            "type": {
                              "type": "intrinsic",
                              "name": "object"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "A custom data object to store the user's metadata. This maps to the \`auth.users.raw_user_meta_data\` column.",
                              "text": "The \`data\` should be a JSON object that includes user-specific info, such as their first and last name.\\n"
                            }
                          },
                          {
                            "name": "shouldCreateUser",
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "If set to false, this method will not create a new user. Defaults to true."
                            }
                          }
                        ]
                      },
                      "isOptional": true
                    },
                    {
                      "name": "phone",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "The user's phone number."
                      }
                    }
                  ]
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "AuthOtpResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "messageId",
                            "type": {
                              "type": "union",
                              "subTypes": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "literal",
                                  "value": null
                                }
                              ]
                            },
                            "isOptional": true
                          },
                          {
                            "name": "session",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "messageId",
                            "type": {
                              "type": "union",
                              "subTypes": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "literal",
                                  "value": null
                                }
                              ]
                            },
                            "isOptional": true
                          },
                          {
                            "name": "session",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Log in a user using magiclink or a one-time password (OTP).",
          "text": "If the \`{{ .ConfirmationURL }}\` variable is specified in the email template, a magiclink will be sent.\\nIf the \`{{ .Token }}\` variable is specified in the email template, an OTP will be sent.\\nIf you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\\n\\nBe aware that you may get back an error message that will not distinguish\\nbetween the cases where the account does not exist or, that the account\\ncan only be accessed via social login.\\n\\nDo note that you will need to configure a Whatsapp sender on Twilio\\nif you are using phone sign in with the 'whatsapp' channel. The whatsapp\\nchannel is not supported on other providers\\nat this time.\\nThis method supports PKCE when an email is passed.\\n"
        }
      },
      "@supabase/auth-js.GoTrueClient.signInWithPassword": {
        "name": "@supabase/auth-js.GoTrueClient.signInWithPassword",
        "params": [
          {
            "name": "credentials",
            "type": {
              "type": "union",
              "name": "SignInWithPasswordCredentials",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "email",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "The user's email address."
                      }
                    },
                    {
                      "name": "options",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "captchaToken",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "Verification token received when the user completes the captcha on the site."
                            }
                          }
                        ]
                      },
                      "isOptional": true
                    },
                    {
                      "name": "password",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "The user's password."
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "options",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "captchaToken",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "Verification token received when the user completes the captcha on the site."
                            }
                          }
                        ]
                      },
                      "isOptional": true
                    },
                    {
                      "name": "password",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "The user's password."
                      }
                    },
                    {
                      "name": "phone",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "The user's phone number."
                      }
                    }
                  ]
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "AuthTokenResponsePassword",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "session",
                            "type": {
                              "type": "object",
                              "name": "Session",
                              "properties": [
                                {
                                  "name": "access_token",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "comment": {
                                    "shortText": "The access token jwt. It is recommended to set the JWT_EXPIRY to a shorter expiry value."
                                  }
                                },
                                {
                                  "name": "expires_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "number"
                                  },
                                  "isOptional": true,
                                  "comment": {
                                    "shortText": "A timestamp of when the token will expire. Returned when a login is confirmed."
                                  }
                                },
                                {
                                  "name": "expires_in",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "number"
                                  },
                                  "comment": {
                                    "shortText": "The number of seconds until the token expires (since it was issued). Returned when a login is confirmed."
                                  }
                                },
                                {
                                  "name": "provider_refresh_token",
                                  "type": {
                                    "type": "union",
                                    "subTypes": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    ]
                                  },
                                  "isOptional": true,
                                  "comment": {
                                    "shortText": "The oauth provider refresh token. If present, this can be used to refresh the provider_token via the oauth provider's API.\\nNot all oauth providers return a provider refresh token. If the provider_refresh_token is missing, please refer to the oauth provider's documentation for information on how to obtain the provider refresh token."
                                  }
                                },
                                {
                                  "name": "provider_token",
                                  "type": {
                                    "type": "union",
                                    "subTypes": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    ]
                                  },
                                  "isOptional": true,
                                  "comment": {
                                    "shortText": "The oauth provider token. If present, this can be used to make external API requests to the oauth provider used."
                                  }
                                },
                                {
                                  "name": "refresh_token",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "comment": {
                                    "shortText": "A one-time used refresh token that never expires."
                                  }
                                },
                                {
                                  "name": "token_type",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "user",
                                  "type": {
                                    "type": "object",
                                    "name": "User",
                                    "properties": [
                                      {
                                        "name": "action_link",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "app_metadata",
                                        "type": {
                                          "type": "object",
                                          "name": "UserAppMetadata",
                                          "properties": [
                                            {
                                              "name": "provider",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "aud",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "name": "confirmation_sent_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "confirmed_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "created_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "name": "email",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "email_change_sent_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "email_confirmed_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "factors",
                                        "type": {
                                          "type": "array",
                                          "elemType": {
                                            "type": "object",
                                            "name": "Factor",
                                            "properties": [
                                              {
                                                "name": "created_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "name": "factor_type",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "comment": {
                                                  "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                                }
                                              },
                                              {
                                                "name": "friendly_name",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true,
                                                "comment": {
                                                  "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                                }
                                              },
                                              {
                                                "name": "id",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "comment": {
                                                  "shortText": "ID of the factor."
                                                }
                                              },
                                              {
                                                "name": "status",
                                                "type": {
                                                  "type": "union",
                                                  "subTypes": [
                                                    {
                                                      "type": "literal",
                                                      "value": "verified"
                                                    },
                                                    {
                                                      "type": "literal",
                                                      "value": "unverified"
                                                    }
                                                  ]
                                                },
                                                "comment": {
                                                  "shortText": "Factor's status."
                                                }
                                              },
                                              {
                                                "name": "updated_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "id",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "name": "identities",
                                        "type": {
                                          "type": "array",
                                          "elemType": {
                                            "type": "object",
                                            "name": "UserIdentity",
                                            "properties": [
                                              {
                                                "name": "created_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "id",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "name": "identity_data",
                                                "type": {
                                                  "type": "index signature",
                                                  "keyType": {
                                                    "type": "intrinsic",
                                                    "name": "string"
                                                  },
                                                  "valueType": {
                                                    "type": "intrinsic",
                                                    "name": "any"
                                                  }
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "identity_id",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "name": "last_sign_in_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "provider",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "name": "updated_at",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "isOptional": true
                                              },
                                              {
                                                "name": "user_id",
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "invited_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "last_sign_in_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "new_email",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "new_phone",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "phone",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "phone_confirmed_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "recovery_sent_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "role",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "updated_at",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      },
                                      {
                                        "name": "user_metadata",
                                        "type": {
                                          "type": "object",
                                          "name": "UserMetadata",
                                          "properties": []
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "object",
                              "name": "User",
                              "properties": [
                                {
                                  "name": "action_link",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "app_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserAppMetadata",
                                    "properties": [
                                      {
                                        "name": "provider",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "aud",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "confirmation_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "created_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_change_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "factors",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "Factor",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "factor_type",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                          }
                                        },
                                        {
                                          "name": "friendly_name",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true,
                                          "comment": {
                                            "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                          }
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "ID of the factor."
                                          }
                                        },
                                        {
                                          "name": "status",
                                          "type": {
                                            "type": "union",
                                            "subTypes": [
                                              {
                                                "type": "literal",
                                                "value": "verified"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "unverified"
                                              }
                                            ]
                                          },
                                          "comment": {
                                            "shortText": "Factor's status."
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "id",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "identities",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "UserIdentity",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "identity_data",
                                          "type": {
                                            "type": "index signature",
                                            "keyType": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "valueType": {
                                              "type": "intrinsic",
                                              "name": "any"
                                            }
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "identity_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "last_sign_in_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "provider",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "user_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "invited_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "last_sign_in_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "recovery_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "updated_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "user_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserMetadata",
                                    "properties": []
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "name": "weakPassword",
                            "type": {
                              "name": "WeakPassword",
                              "type": "object",
                              "properties": [
                                {
                                  "name": "message",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "reasons",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "union",
                                      "name": "WeakPasswordReasons",
                                      "subTypes": [
                                        {
                                          "type": "literal",
                                          "value": "length"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "characters"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "pwned"
                                        },
                                        {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "isOptional": true
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "session",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          },
                          {
                            "name": "weakPassword",
                            "type": {
                              "type": "literal",
                              "value": null
                            },
                            "isOptional": true
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Log in an existing user with an email and password or phone and password.",
          "text": "Be aware that you may get back an error message that will not distinguish\\nbetween the cases where the account does not exist or that the\\nemail/phone and password combination is wrong or that the account can only\\nbe accessed via social login.\\n"
        }
      },
      "@supabase/auth-js.GoTrueClient.signInWithSSO": {
        "name": "@supabase/auth-js.GoTrueClient.signInWithSSO",
        "params": [
          {
            "name": "params",
            "type": {
              "type": "union",
              "name": "SignInWithSSO",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "options",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "captchaToken",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "Verification token received when the user completes the captcha on the site."
                            }
                          },
                          {
                            "name": "redirectTo",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "A URL to send the user to after they have signed-in."
                            }
                          }
                        ]
                      },
                      "isOptional": true
                    },
                    {
                      "name": "providerId",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "UUID of the SSO provider to invoke single-sign on to."
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "domain",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "Domain name of the organization for which to invoke single-sign on."
                      }
                    },
                    {
                      "name": "options",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "captchaToken",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "Verification token received when the user completes the captcha on the site."
                            }
                          },
                          {
                            "name": "redirectTo",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "A URL to send the user to after they have signed-in."
                            }
                          }
                        ]
                      },
                      "isOptional": true
                    }
                  ]
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "SSOResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "url",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "comment": {
                              "shortText": "URL to open in a browser which will complete the sign-in flow by\\ntaking the user to the identity provider's authentication flow.",
                              "text": "On browsers you can set the URL to \`window.location.href\` to take\\nthe user to the authentication flow.\\n"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Attempts a single-sign on using an enterprise Identity Provider. A\\nsuccessful SSO attempt will redirect the current page to the identity\\nprovider authorization page. The redirect URL is implementation and SSO\\nprotocol specific.",
          "text": "You can use it by providing a SSO domain. Typically you can extract this\\ndomain by asking users for their email address. If this domain is\\nregistered on the Auth instance the redirect will use that organization's\\ncurrently active SSO Identity Provider for the login.\\n\\nIf you have built an organization-specific login page, you can use the\\norganization's SSO Identity Provider UUID directly instead.\\n"
        }
      },
      "@supabase/auth-js.GoTrueClient.signOut": {
        "name": "@supabase/auth-js.GoTrueClient.signOut",
        "params": [
          {
            "name": "options",
            "type": {
              "name": "SignOut",
              "type": "object",
              "properties": [
                {
                  "name": "scope",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": "global"
                      },
                      {
                        "type": "literal",
                        "value": "local"
                      },
                      {
                        "type": "literal",
                        "value": "others"
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Determines which sessions should be\\nlogged out. Global means all\\nsessions by this account. Local\\nmeans only this session. Others\\nmeans all other sessions except the\\ncurrent one. When using others,\\nthere is no sign-out event fired on\\nthe current session!"
                  }
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "object",
              "properties": [
                {
                  "name": "error",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    ]
                  }
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Inside a browser context, \`signOut()\` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a \`\\"SIGNED_OUT\\"\` event.",
          "text": "For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to \`auth.api.signOut(JWT: string)\`.\\nThere is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\\n\\nIf using \`others\` scope, no \`SIGNED_OUT\` event is fired!\\n"
        }
      },
      "@supabase/auth-js.GoTrueClient.signUp": {
        "name": "@supabase/auth-js.GoTrueClient.signUp",
        "params": [
          {
            "name": "credentials",
            "type": {
              "type": "union",
              "name": "SignUpWithPasswordCredentials",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "email",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "The user's email address."
                      }
                    },
                    {
                      "name": "options",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "captchaToken",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "Verification token received when the user completes the captcha on the site."
                            }
                          },
                          {
                            "name": "data",
                            "type": {
                              "type": "intrinsic",
                              "name": "object"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "A custom data object to store the user's metadata. This maps to the \`auth.users.raw_user_meta_data\` column.",
                              "text": "The \`data\` should be a JSON object that includes user-specific info, such as their first and last name.\\n"
                            }
                          },
                          {
                            "name": "emailRedirectTo",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "The redirect url embedded in the email link"
                            }
                          }
                        ]
                      },
                      "isOptional": true
                    },
                    {
                      "name": "password",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "The user's password."
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "options",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "captchaToken",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "Verification token received when the user completes the captcha on the site. Requires a configured WhatsApp sender on Twilio"
                            }
                          },
                          {
                            "name": "channel",
                            "type": {
                              "type": "union",
                              "subTypes": [
                                {
                                  "type": "literal",
                                  "value": "sms"
                                },
                                {
                                  "type": "literal",
                                  "value": "whatsapp"
                                }
                              ]
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "Messaging channel to use (e.g. whatsapp or sms)"
                            }
                          },
                          {
                            "name": "data",
                            "type": {
                              "type": "intrinsic",
                              "name": "object"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "A custom data object to store the user's metadata. This maps to the \`auth.users.raw_user_meta_data\` column.",
                              "text": "The \`data\` should be a JSON object that includes user-specific info, such as their first and last name.\\n"
                            }
                          }
                        ]
                      },
                      "isOptional": true
                    },
                    {
                      "name": "password",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "The user's password."
                      }
                    },
                    {
                      "name": "phone",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "The user's phone number."
                      }
                    }
                  ]
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "AuthResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "session",
                            "type": {
                              "type": "union",
                              "subTypes": [
                                {
                                  "type": "object",
                                  "name": "Session",
                                  "properties": [
                                    {
                                      "name": "access_token",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "comment": {
                                        "shortText": "The access token jwt. It is recommended to set the JWT_EXPIRY to a shorter expiry value."
                                      }
                                    },
                                    {
                                      "name": "expires_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      },
                                      "isOptional": true,
                                      "comment": {
                                        "shortText": "A timestamp of when the token will expire. Returned when a login is confirmed."
                                      }
                                    },
                                    {
                                      "name": "expires_in",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      },
                                      "comment": {
                                        "shortText": "The number of seconds until the token expires (since it was issued). Returned when a login is confirmed."
                                      }
                                    },
                                    {
                                      "name": "provider_refresh_token",
                                      "type": {
                                        "type": "union",
                                        "subTypes": [
                                          {
                                            "type": "literal",
                                            "value": null
                                          },
                                          {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        ]
                                      },
                                      "isOptional": true,
                                      "comment": {
                                        "shortText": "The oauth provider refresh token. If present, this can be used to refresh the provider_token via the oauth provider's API.\\nNot all oauth providers return a provider refresh token. If the provider_refresh_token is missing, please refer to the oauth provider's documentation for information on how to obtain the provider refresh token."
                                      }
                                    },
                                    {
                                      "name": "provider_token",
                                      "type": {
                                        "type": "union",
                                        "subTypes": [
                                          {
                                            "type": "literal",
                                            "value": null
                                          },
                                          {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        ]
                                      },
                                      "isOptional": true,
                                      "comment": {
                                        "shortText": "The oauth provider token. If present, this can be used to make external API requests to the oauth provider used."
                                      }
                                    },
                                    {
                                      "name": "refresh_token",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "comment": {
                                        "shortText": "A one-time used refresh token that never expires."
                                      }
                                    },
                                    {
                                      "name": "token_type",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "user",
                                      "type": {
                                        "type": "object",
                                        "name": "User",
                                        "properties": [
                                          {
                                            "name": "action_link",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "app_metadata",
                                            "type": {
                                              "type": "object",
                                              "name": "UserAppMetadata",
                                              "properties": [
                                                {
                                                  "name": "provider",
                                                  "type": {
                                                    "type": "intrinsic",
                                                    "name": "string"
                                                  },
                                                  "isOptional": true
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "name": "aud",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "name": "confirmation_sent_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "confirmed_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "created_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "name": "email",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "email_change_sent_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "email_confirmed_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "factors",
                                            "type": {
                                              "type": "array",
                                              "elemType": {
                                                "type": "object",
                                                "name": "Factor",
                                                "properties": [
                                                  {
                                                    "name": "created_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  },
                                                  {
                                                    "name": "factor_type",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "comment": {
                                                      "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                                    }
                                                  },
                                                  {
                                                    "name": "friendly_name",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "isOptional": true,
                                                    "comment": {
                                                      "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                                    }
                                                  },
                                                  {
                                                    "name": "id",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "comment": {
                                                      "shortText": "ID of the factor."
                                                    }
                                                  },
                                                  {
                                                    "name": "status",
                                                    "type": {
                                                      "type": "union",
                                                      "subTypes": [
                                                        {
                                                          "type": "literal",
                                                          "value": "verified"
                                                        },
                                                        {
                                                          "type": "literal",
                                                          "value": "unverified"
                                                        }
                                                      ]
                                                    },
                                                    "comment": {
                                                      "shortText": "Factor's status."
                                                    }
                                                  },
                                                  {
                                                    "name": "updated_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "id",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "name": "identities",
                                            "type": {
                                              "type": "array",
                                              "elemType": {
                                                "type": "object",
                                                "name": "UserIdentity",
                                                "properties": [
                                                  {
                                                    "name": "created_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "isOptional": true
                                                  },
                                                  {
                                                    "name": "id",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  },
                                                  {
                                                    "name": "identity_data",
                                                    "type": {
                                                      "type": "index signature",
                                                      "keyType": {
                                                        "type": "intrinsic",
                                                        "name": "string"
                                                      },
                                                      "valueType": {
                                                        "type": "intrinsic",
                                                        "name": "any"
                                                      }
                                                    },
                                                    "isOptional": true
                                                  },
                                                  {
                                                    "name": "identity_id",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  },
                                                  {
                                                    "name": "last_sign_in_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "isOptional": true
                                                  },
                                                  {
                                                    "name": "provider",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  },
                                                  {
                                                    "name": "updated_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "isOptional": true
                                                  },
                                                  {
                                                    "name": "user_id",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "invited_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "last_sign_in_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "new_email",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "new_phone",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "phone",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "phone_confirmed_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "recovery_sent_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "role",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "updated_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "user_metadata",
                                            "type": {
                                              "type": "object",
                                              "name": "UserMetadata",
                                              "properties": []
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "literal",
                                  "value": null
                                }
                              ]
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "union",
                              "subTypes": [
                                {
                                  "type": "object",
                                  "name": "User",
                                  "properties": [
                                    {
                                      "name": "action_link",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "app_metadata",
                                      "type": {
                                        "type": "object",
                                        "name": "UserAppMetadata",
                                        "properties": [
                                          {
                                            "name": "provider",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "name": "aud",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "confirmation_sent_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "confirmed_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "created_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "email",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "email_change_sent_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "email_confirmed_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "factors",
                                      "type": {
                                        "type": "array",
                                        "elemType": {
                                          "type": "object",
                                          "name": "Factor",
                                          "properties": [
                                            {
                                              "name": "created_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "name": "factor_type",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "comment": {
                                                "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                              }
                                            },
                                            {
                                              "name": "friendly_name",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true,
                                              "comment": {
                                                "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                              }
                                            },
                                            {
                                              "name": "id",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "comment": {
                                                "shortText": "ID of the factor."
                                              }
                                            },
                                            {
                                              "name": "status",
                                              "type": {
                                                "type": "union",
                                                "subTypes": [
                                                  {
                                                    "type": "literal",
                                                    "value": "verified"
                                                  },
                                                  {
                                                    "type": "literal",
                                                    "value": "unverified"
                                                  }
                                                ]
                                              },
                                              "comment": {
                                                "shortText": "Factor's status."
                                              }
                                            },
                                            {
                                              "name": "updated_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "id",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "identities",
                                      "type": {
                                        "type": "array",
                                        "elemType": {
                                          "type": "object",
                                          "name": "UserIdentity",
                                          "properties": [
                                            {
                                              "name": "created_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "id",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "name": "identity_data",
                                              "type": {
                                                "type": "index signature",
                                                "keyType": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "valueType": {
                                                  "type": "intrinsic",
                                                  "name": "any"
                                                }
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "identity_id",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "name": "last_sign_in_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "provider",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "name": "updated_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "user_id",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "invited_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "last_sign_in_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "new_email",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "new_phone",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "phone",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "phone_confirmed_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "recovery_sent_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "role",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "updated_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "user_metadata",
                                      "type": {
                                        "type": "object",
                                        "name": "UserMetadata",
                                        "properties": []
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "literal",
                                  "value": null
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "session",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Creates a new user.",
          "text": "Be aware that if a user account exists in the system you may get back an\\nerror message that attempts to hide this information from the user.\\nThis method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\\n",
          "returns": "A logged-in session if the server has \\"autoconfirm\\" ON"
        }
      },
      "@supabase/auth-js.GoTrueClient.startAutoRefresh": {
        "name": "@supabase/auth-js.GoTrueClient.startAutoRefresh",
        "params": [],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "intrinsic",
              "name": "void"
            }
          }
        },
        "comment": {
          "shortText": "Starts an auto-refresh process in the background. The session is checked\\nevery few seconds. Close to the time of expiration a process is started to\\nrefresh the session. If refreshing fails it will be retried for as long as\\nnecessary.",
          "text": "If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\\nto call this function, it will be called for you.\\n\\nOn browsers the refresh process works only when the tab/window is in the\\nforeground to conserve resources as well as prevent race conditions and\\nflooding auth with requests. If you call this method any managed\\nvisibility change callback will be removed and you must manage visibility\\nchanges on your own.\\n\\nOn non-browser platforms the refresh process works *continuously* in the\\nbackground, which may not be desirable. You should hook into your\\nplatform's foreground indication mechanism and call these methods\\nappropriately to conserve resources.\\n\\n{@see #stopAutoRefresh}\\n"
        }
      },
      "@supabase/auth-js.GoTrueClient.stopAutoRefresh": {
        "name": "@supabase/auth-js.GoTrueClient.stopAutoRefresh",
        "params": [],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "intrinsic",
              "name": "void"
            }
          }
        },
        "comment": {
          "shortText": "Stops an active auto refresh process running in the background (if any).",
          "text": "If you call this method any managed visibility change callback will be\\nremoved and you must manage visibility changes on your own.\\n\\nSee {@link #startAutoRefresh} for more details.\\n"
        }
      },
      "@supabase/auth-js.GoTrueClient.unlinkIdentity": {
        "name": "@supabase/auth-js.GoTrueClient.unlinkIdentity",
        "params": [
          {
            "name": "identity",
            "type": {
              "type": "object",
              "name": "UserIdentity",
              "properties": [
                {
                  "name": "created_at",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true
                },
                {
                  "name": "id",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "name": "identity_data",
                  "type": {
                    "type": "index signature",
                    "keyType": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "valueType": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  },
                  "isOptional": true
                },
                {
                  "name": "identity_id",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "name": "last_sign_in_at",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true
                },
                {
                  "name": "provider",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "name": "updated_at",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true
                },
                {
                  "name": "user_id",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data"
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked."
        }
      },
      "@supabase/auth-js.GoTrueClient.updateUser": {
        "name": "@supabase/auth-js.GoTrueClient.updateUser",
        "params": [
          {
            "name": "attributes",
            "type": {
              "type": "object",
              "name": "UserAttributes",
              "properties": [
                {
                  "name": "data",
                  "type": {
                    "type": "intrinsic",
                    "name": "object"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "A custom data object to store the user's metadata. This maps to the \`auth.users.raw_user_meta_data\` column.",
                    "text": "The \`data\` should be a JSON object that includes user-specific info, such as their first and last name.\\n\\n"
                  }
                },
                {
                  "name": "email",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The user's email."
                  }
                },
                {
                  "name": "nonce",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
                    "text": "Call reauthenticate() to obtain the nonce first.\\n"
                  }
                },
                {
                  "name": "password",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The user's password."
                  }
                },
                {
                  "name": "phone",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The user's phone."
                  }
                }
              ]
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "emailRedirectTo",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "UserResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "user",
                            "type": {
                              "type": "object",
                              "name": "User",
                              "properties": [
                                {
                                  "name": "action_link",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "app_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserAppMetadata",
                                    "properties": [
                                      {
                                        "name": "provider",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "aud",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "confirmation_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "created_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_change_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "factors",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "Factor",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "factor_type",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                          }
                                        },
                                        {
                                          "name": "friendly_name",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true,
                                          "comment": {
                                            "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                          }
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "ID of the factor."
                                          }
                                        },
                                        {
                                          "name": "status",
                                          "type": {
                                            "type": "union",
                                            "subTypes": [
                                              {
                                                "type": "literal",
                                                "value": "verified"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "unverified"
                                              }
                                            ]
                                          },
                                          "comment": {
                                            "shortText": "Factor's status."
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "id",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "identities",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "UserIdentity",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "identity_data",
                                          "type": {
                                            "type": "index signature",
                                            "keyType": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "valueType": {
                                              "type": "intrinsic",
                                              "name": "any"
                                            }
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "identity_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "last_sign_in_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "provider",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "user_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "invited_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "last_sign_in_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "recovery_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "updated_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "user_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserMetadata",
                                    "properties": []
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "user",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Updates user data for a logged in user."
        }
      },
      "@supabase/auth-js.GoTrueClient.verifyOtp": {
        "name": "@supabase/auth-js.GoTrueClient.verifyOtp",
        "params": [
          {
            "name": "params",
            "type": {
              "type": "union",
              "name": "VerifyOtpParams",
              "subTypes": [
                {
                  "type": "object",
                  "name": "VerifyMobileOtpParams",
                  "properties": [
                    {
                      "name": "options",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "captchaToken",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "Verification token received when the user completes the captcha on the site.",
                              "tags": [
                                {
                                  "tag": "deprecated",
                                  "text": "\\n"
                                }
                              ]
                            }
                          },
                          {
                            "name": "redirectTo",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "A URL to send the user to after they are confirmed."
                            }
                          }
                        ]
                      },
                      "isOptional": true
                    },
                    {
                      "name": "phone",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "The user's phone number."
                      }
                    },
                    {
                      "name": "token",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "The otp sent to the user's phone number."
                      }
                    },
                    {
                      "name": "type",
                      "type": {
                        "type": "union",
                        "name": "MobileOtpType",
                        "subTypes": [
                          {
                            "type": "literal",
                            "value": "sms"
                          },
                          {
                            "type": "literal",
                            "value": "phone_change"
                          }
                        ]
                      },
                      "comment": {
                        "shortText": "The user's verification type."
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "name": "VerifyEmailOtpParams",
                  "properties": [
                    {
                      "name": "email",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "The user's email address."
                      }
                    },
                    {
                      "name": "options",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "captchaToken",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "Verification token received when the user completes the captcha on the site.",
                              "tags": [
                                {
                                  "tag": "deprecated",
                                  "text": "\\n"
                                }
                              ]
                            }
                          },
                          {
                            "name": "redirectTo",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "A URL to send the user to after they are confirmed."
                            }
                          }
                        ]
                      },
                      "isOptional": true
                    },
                    {
                      "name": "token",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "The otp sent to the user's email address."
                      }
                    },
                    {
                      "name": "type",
                      "type": {
                        "type": "union",
                        "name": "EmailOtpType",
                        "subTypes": [
                          {
                            "type": "literal",
                            "value": "signup"
                          },
                          {
                            "type": "literal",
                            "value": "invite"
                          },
                          {
                            "type": "literal",
                            "value": "magiclink"
                          },
                          {
                            "type": "literal",
                            "value": "recovery"
                          },
                          {
                            "type": "literal",
                            "value": "email_change"
                          },
                          {
                            "type": "literal",
                            "value": "email"
                          }
                        ]
                      },
                      "comment": {
                        "shortText": "The user's verification type."
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "name": "VerifyTokenHashParams",
                  "properties": [
                    {
                      "name": "token_hash",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "The token hash used in an email link"
                      }
                    },
                    {
                      "name": "type",
                      "type": {
                        "type": "union",
                        "name": "EmailOtpType",
                        "subTypes": [
                          {
                            "type": "literal",
                            "value": "signup"
                          },
                          {
                            "type": "literal",
                            "value": "invite"
                          },
                          {
                            "type": "literal",
                            "value": "magiclink"
                          },
                          {
                            "type": "literal",
                            "value": "recovery"
                          },
                          {
                            "type": "literal",
                            "value": "email_change"
                          },
                          {
                            "type": "literal",
                            "value": "email"
                          }
                        ]
                      },
                      "comment": {
                        "shortText": "The user's verification type."
                      }
                    }
                  ]
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "AuthResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "session",
                            "type": {
                              "type": "union",
                              "subTypes": [
                                {
                                  "type": "object",
                                  "name": "Session",
                                  "properties": [
                                    {
                                      "name": "access_token",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "comment": {
                                        "shortText": "The access token jwt. It is recommended to set the JWT_EXPIRY to a shorter expiry value."
                                      }
                                    },
                                    {
                                      "name": "expires_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      },
                                      "isOptional": true,
                                      "comment": {
                                        "shortText": "A timestamp of when the token will expire. Returned when a login is confirmed."
                                      }
                                    },
                                    {
                                      "name": "expires_in",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      },
                                      "comment": {
                                        "shortText": "The number of seconds until the token expires (since it was issued). Returned when a login is confirmed."
                                      }
                                    },
                                    {
                                      "name": "provider_refresh_token",
                                      "type": {
                                        "type": "union",
                                        "subTypes": [
                                          {
                                            "type": "literal",
                                            "value": null
                                          },
                                          {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        ]
                                      },
                                      "isOptional": true,
                                      "comment": {
                                        "shortText": "The oauth provider refresh token. If present, this can be used to refresh the provider_token via the oauth provider's API.\\nNot all oauth providers return a provider refresh token. If the provider_refresh_token is missing, please refer to the oauth provider's documentation for information on how to obtain the provider refresh token."
                                      }
                                    },
                                    {
                                      "name": "provider_token",
                                      "type": {
                                        "type": "union",
                                        "subTypes": [
                                          {
                                            "type": "literal",
                                            "value": null
                                          },
                                          {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        ]
                                      },
                                      "isOptional": true,
                                      "comment": {
                                        "shortText": "The oauth provider token. If present, this can be used to make external API requests to the oauth provider used."
                                      }
                                    },
                                    {
                                      "name": "refresh_token",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "comment": {
                                        "shortText": "A one-time used refresh token that never expires."
                                      }
                                    },
                                    {
                                      "name": "token_type",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "user",
                                      "type": {
                                        "type": "object",
                                        "name": "User",
                                        "properties": [
                                          {
                                            "name": "action_link",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "app_metadata",
                                            "type": {
                                              "type": "object",
                                              "name": "UserAppMetadata",
                                              "properties": [
                                                {
                                                  "name": "provider",
                                                  "type": {
                                                    "type": "intrinsic",
                                                    "name": "string"
                                                  },
                                                  "isOptional": true
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "name": "aud",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "name": "confirmation_sent_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "confirmed_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "created_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "name": "email",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "email_change_sent_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "email_confirmed_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "factors",
                                            "type": {
                                              "type": "array",
                                              "elemType": {
                                                "type": "object",
                                                "name": "Factor",
                                                "properties": [
                                                  {
                                                    "name": "created_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  },
                                                  {
                                                    "name": "factor_type",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "comment": {
                                                      "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                                    }
                                                  },
                                                  {
                                                    "name": "friendly_name",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "isOptional": true,
                                                    "comment": {
                                                      "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                                    }
                                                  },
                                                  {
                                                    "name": "id",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "comment": {
                                                      "shortText": "ID of the factor."
                                                    }
                                                  },
                                                  {
                                                    "name": "status",
                                                    "type": {
                                                      "type": "union",
                                                      "subTypes": [
                                                        {
                                                          "type": "literal",
                                                          "value": "verified"
                                                        },
                                                        {
                                                          "type": "literal",
                                                          "value": "unverified"
                                                        }
                                                      ]
                                                    },
                                                    "comment": {
                                                      "shortText": "Factor's status."
                                                    }
                                                  },
                                                  {
                                                    "name": "updated_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "id",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "name": "identities",
                                            "type": {
                                              "type": "array",
                                              "elemType": {
                                                "type": "object",
                                                "name": "UserIdentity",
                                                "properties": [
                                                  {
                                                    "name": "created_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "isOptional": true
                                                  },
                                                  {
                                                    "name": "id",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  },
                                                  {
                                                    "name": "identity_data",
                                                    "type": {
                                                      "type": "index signature",
                                                      "keyType": {
                                                        "type": "intrinsic",
                                                        "name": "string"
                                                      },
                                                      "valueType": {
                                                        "type": "intrinsic",
                                                        "name": "any"
                                                      }
                                                    },
                                                    "isOptional": true
                                                  },
                                                  {
                                                    "name": "identity_id",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  },
                                                  {
                                                    "name": "last_sign_in_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "isOptional": true
                                                  },
                                                  {
                                                    "name": "provider",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  },
                                                  {
                                                    "name": "updated_at",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    },
                                                    "isOptional": true
                                                  },
                                                  {
                                                    "name": "user_id",
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "invited_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "last_sign_in_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "new_email",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "new_phone",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "phone",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "phone_confirmed_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "recovery_sent_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "role",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "updated_at",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          },
                                          {
                                            "name": "user_metadata",
                                            "type": {
                                              "type": "object",
                                              "name": "UserMetadata",
                                              "properties": []
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "literal",
                                  "value": null
                                }
                              ]
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "union",
                              "subTypes": [
                                {
                                  "type": "object",
                                  "name": "User",
                                  "properties": [
                                    {
                                      "name": "action_link",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "app_metadata",
                                      "type": {
                                        "type": "object",
                                        "name": "UserAppMetadata",
                                        "properties": [
                                          {
                                            "name": "provider",
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "isOptional": true
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "name": "aud",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "confirmation_sent_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "confirmed_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "created_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "email",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "email_change_sent_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "email_confirmed_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "factors",
                                      "type": {
                                        "type": "array",
                                        "elemType": {
                                          "type": "object",
                                          "name": "Factor",
                                          "properties": [
                                            {
                                              "name": "created_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "name": "factor_type",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "comment": {
                                                "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                              }
                                            },
                                            {
                                              "name": "friendly_name",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true,
                                              "comment": {
                                                "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                              }
                                            },
                                            {
                                              "name": "id",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "comment": {
                                                "shortText": "ID of the factor."
                                              }
                                            },
                                            {
                                              "name": "status",
                                              "type": {
                                                "type": "union",
                                                "subTypes": [
                                                  {
                                                    "type": "literal",
                                                    "value": "verified"
                                                  },
                                                  {
                                                    "type": "literal",
                                                    "value": "unverified"
                                                  }
                                                ]
                                              },
                                              "comment": {
                                                "shortText": "Factor's status."
                                              }
                                            },
                                            {
                                              "name": "updated_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "id",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "identities",
                                      "type": {
                                        "type": "array",
                                        "elemType": {
                                          "type": "object",
                                          "name": "UserIdentity",
                                          "properties": [
                                            {
                                              "name": "created_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "id",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "name": "identity_data",
                                              "type": {
                                                "type": "index signature",
                                                "keyType": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                },
                                                "valueType": {
                                                  "type": "intrinsic",
                                                  "name": "any"
                                                }
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "identity_id",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "name": "last_sign_in_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "provider",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "name": "updated_at",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "user_id",
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "invited_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "last_sign_in_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "new_email",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "new_phone",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "phone",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "phone_confirmed_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "recovery_sent_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "role",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "updated_at",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "isOptional": true
                                    },
                                    {
                                      "name": "user_metadata",
                                      "type": {
                                        "type": "object",
                                        "name": "UserMetadata",
                                        "properties": []
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "literal",
                                  "value": null
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "session",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Log in a user given a User supplied OTP or TokenHash received through mobile or email."
        }
      },
      "@supabase/auth-js.NavigatorLockAcquireTimeoutError.constructor": {
        "name": "@supabase/auth-js.NavigatorLockAcquireTimeoutError.constructor",
        "params": [
          {
            "name": "message",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "NavigatorLockAcquireTimeoutError"
          }
        }
      },
      "@supabase/auth-js.GoTrueAdminMFAApi.deleteFactor": {
        "name": "@supabase/auth-js.GoTrueAdminMFAApi.deleteFactor",
        "params": [
          {
            "name": "params",
            "type": {
              "name": "AuthMFAAdminDeleteFactorParams",
              "type": "object",
              "properties": [
                {
                  "name": "id",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "comment": {
                    "shortText": "ID of the MFA factor to delete."
                  }
                },
                {
                  "name": "userId",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "comment": {
                    "shortText": "ID of the user whose factor is being deleted."
                  }
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "AuthMFAAdminDeleteFactorResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "id",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "comment": {
                              "shortText": "ID of the factor that was successfully deleted."
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Deletes a factor on a user. This will log the user out of all active\\nsessions if the deleted factor was verified.",
          "tags": [
            {
              "tag": "see",
              "text": "{@link GoTrueMFAApi#unenroll}\\n"
            },
            {
              "tag": "expermental",
              "text": "\\n"
            }
          ]
        }
      },
      "@supabase/auth-js.GoTrueAdminMFAApi.listFactors": {
        "name": "@supabase/auth-js.GoTrueAdminMFAApi.listFactors",
        "params": [
          {
            "name": "params",
            "type": {
              "name": "AuthMFAAdminListFactorsParams",
              "type": "object",
              "properties": [
                {
                  "name": "userId",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "comment": {
                    "shortText": "ID of the user."
                  }
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "AuthMFAAdminListFactorsResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "factors",
                            "type": {
                              "type": "array",
                              "elemType": {
                                "type": "object",
                                "name": "Factor",
                                "properties": [
                                  {
                                    "name": "created_at",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "name": "factor_type",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    },
                                    "comment": {
                                      "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                    }
                                  },
                                  {
                                    "name": "friendly_name",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    },
                                    "isOptional": true,
                                    "comment": {
                                      "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                    }
                                  },
                                  {
                                    "name": "id",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    },
                                    "comment": {
                                      "shortText": "ID of the factor."
                                    }
                                  },
                                  {
                                    "name": "status",
                                    "type": {
                                      "type": "union",
                                      "subTypes": [
                                        {
                                          "type": "literal",
                                          "value": "verified"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "unverified"
                                        }
                                      ]
                                    },
                                    "comment": {
                                      "shortText": "Factor's status."
                                    }
                                  },
                                  {
                                    "name": "updated_at",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  }
                                ]
                              }
                            },
                            "comment": {
                              "shortText": "All factors attached to the user."
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Lists all factors associated to a user."
        }
      },
      "@supabase/auth-js.GoTrueMFAApi.challenge": {
        "name": "@supabase/auth-js.GoTrueMFAApi.challenge",
        "params": [
          {
            "name": "params",
            "type": {
              "name": "MFAChallengeParams",
              "type": "object",
              "properties": [
                {
                  "name": "factorId",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "comment": {
                    "shortText": "ID of the factor to be challenged. Returned in enroll()."
                  }
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "AuthMFAChallengeResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "expires_at",
                            "type": {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            "comment": {
                              "shortText": "Timestamp in UNIX seconds when this challenge will no longer be usable."
                            }
                          },
                          {
                            "name": "id",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "comment": {
                              "shortText": "ID of the newly created challenge."
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Prepares a challenge used to verify that a user has access to a MFA\\nfactor."
        }
      },
      "@supabase/auth-js.GoTrueMFAApi.challengeAndVerify": {
        "name": "@supabase/auth-js.GoTrueMFAApi.challengeAndVerify",
        "params": [
          {
            "name": "params",
            "type": {
              "name": "MFAChallengeAndVerifyParams",
              "type": "object",
              "properties": [
                {
                  "name": "code",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "comment": {
                    "shortText": "Verification code provided by the user."
                  }
                },
                {
                  "name": "factorId",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "comment": {
                    "shortText": "ID of the factor being verified. Returned in enroll()."
                  }
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "AuthMFAVerifyResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "access_token",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "comment": {
                              "shortText": "New access token (JWT) after successful verification."
                            }
                          },
                          {
                            "name": "expires_in",
                            "type": {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            "comment": {
                              "shortText": "Number of seconds in which the access token will expire."
                            }
                          },
                          {
                            "name": "refresh_token",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "comment": {
                              "shortText": "Refresh token you can use to obtain new access tokens when expired."
                            }
                          },
                          {
                            "name": "token_type",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "comment": {
                              "shortText": "Type of token, typically \`Bearer\`."
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "object",
                              "name": "User",
                              "properties": [
                                {
                                  "name": "action_link",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "app_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserAppMetadata",
                                    "properties": [
                                      {
                                        "name": "provider",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "aud",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "confirmation_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "created_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_change_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "factors",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "Factor",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "factor_type",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                          }
                                        },
                                        {
                                          "name": "friendly_name",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true,
                                          "comment": {
                                            "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                          }
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "ID of the factor."
                                          }
                                        },
                                        {
                                          "name": "status",
                                          "type": {
                                            "type": "union",
                                            "subTypes": [
                                              {
                                                "type": "literal",
                                                "value": "verified"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "unverified"
                                              }
                                            ]
                                          },
                                          "comment": {
                                            "shortText": "Factor's status."
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "id",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "identities",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "UserIdentity",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "identity_data",
                                          "type": {
                                            "type": "index signature",
                                            "keyType": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "valueType": {
                                              "type": "intrinsic",
                                              "name": "any"
                                            }
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "identity_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "last_sign_in_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "provider",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "user_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "invited_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "last_sign_in_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "recovery_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "updated_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "user_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserMetadata",
                                    "properties": []
                                  }
                                }
                              ]
                            },
                            "comment": {
                              "shortText": "Updated user profile."
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Helper method which creates a challenge and immediately uses the given code to verify against it thereafter. The verification code is\\nprovided by the user by entering a code seen in their authenticator app."
        }
      },
      "@supabase/auth-js.GoTrueMFAApi.enroll": {
        "name": "@supabase/auth-js.GoTrueMFAApi.enroll",
        "params": [
          {
            "name": "params",
            "type": {
              "name": "MFAEnrollParams",
              "type": "object",
              "properties": [
                {
                  "name": "factorType",
                  "type": {
                    "type": "literal",
                    "value": "totp"
                  },
                  "comment": {
                    "shortText": "The type of factor being enrolled."
                  }
                },
                {
                  "name": "friendlyName",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Human readable name assigned to the factor."
                  }
                },
                {
                  "name": "issuer",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Domain which the user is enrolled with."
                  }
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "AuthMFAEnrollResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "friendly_name",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true,
                            "comment": {
                              "shortText": "Friendly name of the factor, useful for distinguishing between factors"
                            }
                          },
                          {
                            "name": "id",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "comment": {
                              "shortText": "ID of the factor that was just enrolled (in an unverified state)."
                            }
                          },
                          {
                            "name": "totp",
                            "type": {
                              "type": "object",
                              "properties": [
                                {
                                  "name": "qr_code",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "comment": {
                                    "shortText": "Contains a QR code encoding the authenticator URI. You can\\nconvert it to a URL by prepending \`data:image/svg+xml;utf-8,\` to\\nthe value. Avoid logging this value to the console."
                                  }
                                },
                                {
                                  "name": "secret",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "comment": {
                                    "shortText": "The TOTP secret (also encoded in the QR code). Show this secret\\nin a password-style field to the user, in case they are unable to\\nscan the QR code. Avoid logging this value to the console."
                                  }
                                },
                                {
                                  "name": "uri",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "comment": {
                                    "shortText": "The authenticator URI encoded within the QR code, should you need\\nto use it. Avoid loggin this value to the console."
                                  }
                                }
                              ]
                            },
                            "comment": {
                              "shortText": "TOTP enrollment information."
                            }
                          },
                          {
                            "name": "type",
                            "type": {
                              "type": "literal",
                              "value": "totp"
                            },
                            "comment": {
                              "shortText": "Type of MFA factor. Only \`totp\` supported for now."
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Starts the enrollment process for a new Multi-Factor Authentication (MFA)\\nfactor. This method creates a new \`unverified\` factor.\\nTo verify a factor, present the QR code or secret to the user and ask them to add it to their\\nauthenticator app.\\nThe user has to enter the code from their authenticator app to verify it.",
          "text": "Upon verifying a factor, all other sessions are logged out and the current session's authenticator level is promoted to \`aal2\`.\\n\\n"
        }
      },
      "@supabase/auth-js.GoTrueMFAApi.getAuthenticatorAssuranceLevel": {
        "name": "@supabase/auth-js.GoTrueMFAApi.getAuthenticatorAssuranceLevel",
        "params": [],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "AuthMFAGetAuthenticatorAssuranceLevelResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "currentAuthenticationMethods",
                            "type": {
                              "type": "array",
                              "elemType": {
                                "type": "object",
                                "name": "AMREntry",
                                "properties": [
                                  {
                                    "name": "method",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    },
                                    "comment": {
                                      "shortText": "Authentication method name."
                                    }
                                  },
                                  {
                                    "name": "timestamp",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "number"
                                    },
                                    "comment": {
                                      "shortText": "Timestamp when the method was successfully used. Represents number of\\nseconds since 1st January 1970 (UNIX epoch) in UTC."
                                    }
                                  }
                                ]
                              }
                            },
                            "comment": {
                              "shortText": "A list of all authentication methods attached to this session. Use\\nthe information here to detect the last time a user verified a\\nfactor, for example if implementing a step-up scenario."
                            }
                          },
                          {
                            "name": "currentLevel",
                            "type": {
                              "type": "union",
                              "subTypes": [
                                {
                                  "type": "union",
                                  "name": "AuthenticatorAssuranceLevels",
                                  "subTypes": [
                                    {
                                      "type": "literal",
                                      "value": "aal1"
                                    },
                                    {
                                      "type": "literal",
                                      "value": "aal2"
                                    }
                                  ]
                                },
                                {
                                  "type": "literal",
                                  "value": null
                                }
                              ]
                            },
                            "comment": {
                              "shortText": "Current AAL level of the session."
                            }
                          },
                          {
                            "name": "nextLevel",
                            "type": {
                              "type": "union",
                              "subTypes": [
                                {
                                  "type": "union",
                                  "name": "AuthenticatorAssuranceLevels",
                                  "subTypes": [
                                    {
                                      "type": "literal",
                                      "value": "aal1"
                                    },
                                    {
                                      "type": "literal",
                                      "value": "aal2"
                                    }
                                  ]
                                },
                                {
                                  "type": "literal",
                                  "value": null
                                }
                              ]
                            },
                            "comment": {
                              "shortText": "Next possible AAL level for the session. If the next level is higher\\nthan the current one, the user should go through MFA.",
                              "tags": [
                                {
                                  "tag": "see",
                                  "text": "{@link GoTrueMFAApi#challenge}\\n"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Returns the Authenticator Assurance Level (AAL) for the active session.",
          "text": "- \`aal1\` (or \`null\`) means that the user's identity has been verified only\\nwith a conventional login (email+password, OTP, magic link, social login,\\netc.).\\n- \`aal2\` means that the user's identity has been verified both with a conventional login and at least one MFA factor.\\n\\nAlthough this method returns a promise, it's fairly quick (microseconds)\\nand rarely uses the network. You can use this to check whether the current\\nuser needs to be shown a screen to verify their MFA factors.\\n\\n"
        }
      },
      "@supabase/auth-js.GoTrueMFAApi.listFactors": {
        "name": "@supabase/auth-js.GoTrueMFAApi.listFactors",
        "params": [],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "AuthMFAListFactorsResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "all",
                            "type": {
                              "type": "array",
                              "elemType": {
                                "type": "object",
                                "name": "Factor",
                                "properties": [
                                  {
                                    "name": "created_at",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "name": "factor_type",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    },
                                    "comment": {
                                      "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                    }
                                  },
                                  {
                                    "name": "friendly_name",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    },
                                    "isOptional": true,
                                    "comment": {
                                      "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                    }
                                  },
                                  {
                                    "name": "id",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    },
                                    "comment": {
                                      "shortText": "ID of the factor."
                                    }
                                  },
                                  {
                                    "name": "status",
                                    "type": {
                                      "type": "union",
                                      "subTypes": [
                                        {
                                          "type": "literal",
                                          "value": "verified"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "unverified"
                                        }
                                      ]
                                    },
                                    "comment": {
                                      "shortText": "Factor's status."
                                    }
                                  },
                                  {
                                    "name": "updated_at",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  }
                                ]
                              }
                            },
                            "comment": {
                              "shortText": "All available factors (verified and unverified)."
                            }
                          },
                          {
                            "name": "totp",
                            "type": {
                              "type": "array",
                              "elemType": {
                                "type": "object",
                                "name": "Factor",
                                "properties": [
                                  {
                                    "name": "created_at",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "name": "factor_type",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    },
                                    "comment": {
                                      "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                    }
                                  },
                                  {
                                    "name": "friendly_name",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    },
                                    "isOptional": true,
                                    "comment": {
                                      "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                    }
                                  },
                                  {
                                    "name": "id",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    },
                                    "comment": {
                                      "shortText": "ID of the factor."
                                    }
                                  },
                                  {
                                    "name": "status",
                                    "type": {
                                      "type": "union",
                                      "subTypes": [
                                        {
                                          "type": "literal",
                                          "value": "verified"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "unverified"
                                        }
                                      ]
                                    },
                                    "comment": {
                                      "shortText": "Factor's status."
                                    }
                                  },
                                  {
                                    "name": "updated_at",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  }
                                ]
                              }
                            },
                            "comment": {
                              "shortText": "Only verified TOTP factors. (A subset of \`all\`.)"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Returns the list of MFA factors enabled for this user.",
          "tags": [
            {
              "tag": "see",
              "text": "{@link GoTrueMFAApi#enroll}"
            },
            {
              "tag": "see",
              "text": "{@link GoTrueMFAApi#getAuthenticatorAssuranceLevel}"
            },
            {
              "tag": "see",
              "text": "{@link GoTrueClient#getUser}\\n\\n"
            }
          ]
        }
      },
      "@supabase/auth-js.GoTrueMFAApi.unenroll": {
        "name": "@supabase/auth-js.GoTrueMFAApi.unenroll",
        "params": [
          {
            "name": "params",
            "type": {
              "name": "MFAUnenrollParams",
              "type": "object",
              "properties": [
                {
                  "name": "factorId",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "comment": {
                    "shortText": "ID of the factor being unenrolled."
                  }
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "AuthMFAUnenrollResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "id",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "comment": {
                              "shortText": "ID of the factor that was successfully unenrolled."
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Unenroll removes a MFA factor.\\nA user has to have an \`aal2\` authenticator level in order to unenroll a \`verified\` factor."
        }
      },
      "@supabase/auth-js.GoTrueMFAApi.verify": {
        "name": "@supabase/auth-js.GoTrueMFAApi.verify",
        "params": [
          {
            "name": "params",
            "type": {
              "name": "MFAVerifyParams",
              "type": "object",
              "properties": [
                {
                  "name": "challengeId",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "comment": {
                    "shortText": "ID of the challenge being verified. Returned in challenge()."
                  }
                },
                {
                  "name": "code",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "comment": {
                    "shortText": "Verification code provided by the user."
                  }
                },
                {
                  "name": "factorId",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "comment": {
                    "shortText": "ID of the factor being verified. Returned in enroll()."
                  }
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "AuthMFAVerifyResponse",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "access_token",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "comment": {
                              "shortText": "New access token (JWT) after successful verification."
                            }
                          },
                          {
                            "name": "expires_in",
                            "type": {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            "comment": {
                              "shortText": "Number of seconds in which the access token will expire."
                            }
                          },
                          {
                            "name": "refresh_token",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "comment": {
                              "shortText": "Refresh token you can use to obtain new access tokens when expired."
                            }
                          },
                          {
                            "name": "token_type",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "comment": {
                              "shortText": "Type of token, typically \`Bearer\`."
                            }
                          },
                          {
                            "name": "user",
                            "type": {
                              "type": "object",
                              "name": "User",
                              "properties": [
                                {
                                  "name": "action_link",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "app_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserAppMetadata",
                                    "properties": [
                                      {
                                        "name": "provider",
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        "isOptional": true
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "aud",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "confirmation_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "created_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_change_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "email_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "factors",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "Factor",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "factor_type",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                          }
                                        },
                                        {
                                          "name": "friendly_name",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true,
                                          "comment": {
                                            "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                          }
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "comment": {
                                            "shortText": "ID of the factor."
                                          }
                                        },
                                        {
                                          "name": "status",
                                          "type": {
                                            "type": "union",
                                            "subTypes": [
                                              {
                                                "type": "literal",
                                                "value": "verified"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "unverified"
                                              }
                                            ]
                                          },
                                          "comment": {
                                            "shortText": "Factor's status."
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "id",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "name": "identities",
                                  "type": {
                                    "type": "array",
                                    "elemType": {
                                      "type": "object",
                                      "name": "UserIdentity",
                                      "properties": [
                                        {
                                          "name": "created_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "identity_data",
                                          "type": {
                                            "type": "index signature",
                                            "keyType": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            "valueType": {
                                              "type": "intrinsic",
                                              "name": "any"
                                            }
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "identity_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "last_sign_in_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "provider",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "name": "updated_at",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          "isOptional": true
                                        },
                                        {
                                          "name": "user_id",
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "invited_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "last_sign_in_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_email",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "new_phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "phone_confirmed_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "recovery_sent_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "updated_at",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                },
                                {
                                  "name": "user_metadata",
                                  "type": {
                                    "type": "object",
                                    "name": "UserMetadata",
                                    "properties": []
                                  }
                                }
                              ]
                            },
                            "comment": {
                              "shortText": "Updated user profile."
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "AuthError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Verifies a code against a challenge. The verification code is\\nprovided by the user by entering a code seen in their authenticator app."
        }
      },
      "@supabase/auth-js.Subscription.callback": {
        "name": "@supabase/auth-js.Subscription.callback",
        "params": [
          {
            "name": "event",
            "type": {
              "type": "union",
              "name": "AuthChangeEvent",
              "subTypes": [
                {
                  "type": "literal",
                  "value": "INITIAL_SESSION"
                },
                {
                  "type": "literal",
                  "value": "PASSWORD_RECOVERY"
                },
                {
                  "type": "literal",
                  "value": "SIGNED_IN"
                },
                {
                  "type": "literal",
                  "value": "SIGNED_OUT"
                },
                {
                  "type": "literal",
                  "value": "TOKEN_REFRESHED"
                },
                {
                  "type": "literal",
                  "value": "USER_UPDATED"
                },
                {
                  "type": "literal",
                  "value": "MFA_CHALLENGE_VERIFIED"
                }
              ]
            }
          },
          {
            "name": "session",
            "type": {
              "type": "union",
              "subTypes": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "object",
                  "name": "Session",
                  "properties": [
                    {
                      "name": "access_token",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "The access token jwt. It is recommended to set the JWT_EXPIRY to a shorter expiry value."
                      }
                    },
                    {
                      "name": "expires_at",
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "A timestamp of when the token will expire. Returned when a login is confirmed."
                      }
                    },
                    {
                      "name": "expires_in",
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "comment": {
                        "shortText": "The number of seconds until the token expires (since it was issued). Returned when a login is confirmed."
                      }
                    },
                    {
                      "name": "provider_refresh_token",
                      "type": {
                        "type": "union",
                        "subTypes": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ]
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "The oauth provider refresh token. If present, this can be used to refresh the provider_token via the oauth provider's API.\\nNot all oauth providers return a provider refresh token. If the provider_refresh_token is missing, please refer to the oauth provider's documentation for information on how to obtain the provider refresh token."
                      }
                    },
                    {
                      "name": "provider_token",
                      "type": {
                        "type": "union",
                        "subTypes": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ]
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "The oauth provider token. If present, this can be used to make external API requests to the oauth provider used."
                      }
                    },
                    {
                      "name": "refresh_token",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "A one-time used refresh token that never expires."
                      }
                    },
                    {
                      "name": "token_type",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "name": "user",
                      "type": {
                        "type": "object",
                        "name": "User",
                        "properties": [
                          {
                            "name": "action_link",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true
                          },
                          {
                            "name": "app_metadata",
                            "type": {
                              "type": "object",
                              "name": "UserAppMetadata",
                              "properties": [
                                {
                                  "name": "provider",
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "isOptional": true
                                }
                              ]
                            }
                          },
                          {
                            "name": "aud",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "name": "confirmation_sent_at",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true
                          },
                          {
                            "name": "confirmed_at",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true
                          },
                          {
                            "name": "created_at",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "name": "email",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true
                          },
                          {
                            "name": "email_change_sent_at",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true
                          },
                          {
                            "name": "email_confirmed_at",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true
                          },
                          {
                            "name": "factors",
                            "type": {
                              "type": "array",
                              "elemType": {
                                "type": "object",
                                "name": "Factor",
                                "properties": [
                                  {
                                    "name": "created_at",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "name": "factor_type",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    },
                                    "comment": {
                                      "shortText": "Type of factor. Only \`totp\` supported with this version but may change in\\nfuture versions."
                                    }
                                  },
                                  {
                                    "name": "friendly_name",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    },
                                    "isOptional": true,
                                    "comment": {
                                      "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
                                    }
                                  },
                                  {
                                    "name": "id",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    },
                                    "comment": {
                                      "shortText": "ID of the factor."
                                    }
                                  },
                                  {
                                    "name": "status",
                                    "type": {
                                      "type": "union",
                                      "subTypes": [
                                        {
                                          "type": "literal",
                                          "value": "verified"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "unverified"
                                        }
                                      ]
                                    },
                                    "comment": {
                                      "shortText": "Factor's status."
                                    }
                                  },
                                  {
                                    "name": "updated_at",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  }
                                ]
                              }
                            },
                            "isOptional": true
                          },
                          {
                            "name": "id",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "name": "identities",
                            "type": {
                              "type": "array",
                              "elemType": {
                                "type": "object",
                                "name": "UserIdentity",
                                "properties": [
                                  {
                                    "name": "created_at",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    },
                                    "isOptional": true
                                  },
                                  {
                                    "name": "id",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "name": "identity_data",
                                    "type": {
                                      "type": "index signature",
                                      "keyType": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "valueType": {
                                        "type": "intrinsic",
                                        "name": "any"
                                      }
                                    },
                                    "isOptional": true
                                  },
                                  {
                                    "name": "identity_id",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "name": "last_sign_in_at",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    },
                                    "isOptional": true
                                  },
                                  {
                                    "name": "provider",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "name": "updated_at",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    },
                                    "isOptional": true
                                  },
                                  {
                                    "name": "user_id",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  }
                                ]
                              }
                            },
                            "isOptional": true
                          },
                          {
                            "name": "invited_at",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true
                          },
                          {
                            "name": "last_sign_in_at",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true
                          },
                          {
                            "name": "new_email",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true
                          },
                          {
                            "name": "new_phone",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true
                          },
                          {
                            "name": "phone",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true
                          },
                          {
                            "name": "phone_confirmed_at",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true
                          },
                          {
                            "name": "recovery_sent_at",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true
                          },
                          {
                            "name": "role",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true
                          },
                          {
                            "name": "updated_at",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "isOptional": true
                          },
                          {
                            "name": "user_metadata",
                            "type": {
                              "type": "object",
                              "name": "UserMetadata",
                              "properties": []
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "intrinsic",
            "name": "void"
          }
        },
        "comment": {
          "shortText": "The function to call every time there is an event. eg: (eventName) => {}"
        }
      },
      "@supabase/auth-js.Subscription.unsubscribe": {
        "name": "@supabase/auth-js.Subscription.unsubscribe",
        "params": [],
        "ret": {
          "type": {
            "type": "intrinsic",
            "name": "void"
          }
        },
        "comment": {
          "shortText": "Call this to remove the listener."
        }
      }
    }
  },
  {
    "name": "@supabase/postgrest-js",
    "methods": {
      "@supabase/postgrest-js.PostgrestBuilder.constructor": {
        "name": "@supabase/postgrest-js.PostgrestBuilder.constructor",
        "params": [
          {
            "name": "builder"
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Result"
          }
        }
      },
      "@supabase/postgrest-js.PostgrestBuilder.then": {
        "name": "@supabase/postgrest-js.PostgrestBuilder.then",
        "params": [
          {
            "name": "onfulfilled",
            "type": {
              "type": "union",
              "subTypes": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "function",
                  "params": [
                    {
                      "name": "value",
                      "type": {
                        "type": "union",
                        "name": "PostgrestSingleResponse",
                        "subTypes": [
                          {
                            "type": "object",
                            "name": "PostgrestResponseSuccess",
                            "properties": [
                              {
                                "name": "count",
                                "type": {
                                  "type": "union",
                                  "subTypes": [
                                    {
                                      "type": "literal",
                                      "value": null
                                    },
                                    {
                                      "type": "intrinsic",
                                      "name": "number"
                                    }
                                  ]
                                }
                              },
                              {
                                "name": "data",
                                "type": {
                                  "type": "nameOnly",
                                  "name": "T"
                                }
                              },
                              {
                                "name": "error",
                                "type": {
                                  "type": "literal",
                                  "value": null
                                }
                              },
                              {
                                "name": "status",
                                "type": {
                                  "type": "intrinsic",
                                  "name": "number"
                                }
                              },
                              {
                                "name": "statusText",
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            ]
                          },
                          {
                            "type": "object",
                            "name": "PostgrestResponseFailure",
                            "properties": [
                              {
                                "name": "count",
                                "type": {
                                  "type": "literal",
                                  "value": null
                                }
                              },
                              {
                                "name": "data",
                                "type": {
                                  "type": "literal",
                                  "value": null
                                }
                              },
                              {
                                "name": "error",
                                "type": {
                                  "name": "PostgrestError",
                                  "type": "object",
                                  "properties": [
                                    {
                                      "name": "code",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "details",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "hint",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "message",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "name": "status",
                                "type": {
                                  "type": "intrinsic",
                                  "name": "number"
                                }
                              },
                              {
                                "name": "statusText",
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "ret": {
                    "type": {
                      "type": "union",
                      "subTypes": [
                        {
                          "type": "nameOnly",
                          "name": "TResult1"
                        },
                        {
                          "type": "nameOnly",
                          "name": "PromiseLike"
                        }
                      ]
                    }
                  }
                }
              ]
            },
            "isOptional": true
          },
          {
            "name": "onrejected",
            "type": {
              "type": "union",
              "subTypes": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "function",
                  "params": [
                    {
                      "name": "reason",
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "ret": {
                    "type": {
                      "type": "union",
                      "subTypes": [
                        {
                          "type": "nameOnly",
                          "name": "TResult2"
                        },
                        {
                          "type": "nameOnly",
                          "name": "PromiseLike"
                        }
                      ]
                    }
                  }
                }
              ]
            },
            "isOptional": true
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "PromiseLike"
          }
        }
      },
      "@supabase/postgrest-js.PostgrestBuilder.throwOnError": {
        "name": "@supabase/postgrest-js.PostgrestBuilder.throwOnError",
        "params": [],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Result"
          }
        },
        "comment": {
          "shortText": "If there's an error with the query, throwOnError will reject the promise by\\nthrowing the error instead of returning it as part of a successful response.",
          "text": "{@link https://github.com/supabase/supabase-js/issues/92}\\n"
        }
      },
      "@supabase/postgrest-js.PostgrestClient.constructor": {
        "name": "@supabase/postgrest-js.PostgrestClient.constructor",
        "params": [
          {
            "name": "url",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "URL of the PostgREST endpoint"
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "fetch",
                  "type": {
                    "type": "function",
                    "params": [
                      {
                        "name": "input",
                        "type": {
                          "type": "union",
                          "subTypes": [
                            {
                              "type": "nameOnly",
                              "name": "RequestInfo"
                            },
                            {
                              "type": "nameOnly",
                              "name": "URL"
                            }
                          ]
                        }
                      },
                      {
                        "name": "init",
                        "type": {
                          "type": "nameOnly",
                          "name": "RequestInit"
                        },
                        "isOptional": true
                      }
                    ],
                    "ret": {
                      "type": {
                        "type": "promise",
                        "name": "Promise",
                        "awaited": {
                          "type": "nameOnly",
                          "name": "Response"
                        }
                      }
                    },
                    "comment": {
                      "shortText": "Custom fetch\\n"
                    }
                  },
                  "isOptional": true
                },
                {
                  "name": "headers",
                  "type": {
                    "type": "record",
                    "name": "Record",
                    "keyType": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "valueType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Custom headers"
                  }
                },
                {
                  "name": "schema",
                  "type": {
                    "type": "nameOnly",
                    "name": "SchemaName"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Postgres schema to switch to"
                  }
                }
              ]
            },
            "comment": {
              "shortText": "Named parameters"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Database"
          }
        },
        "comment": {
          "shortText": "Creates a PostgREST client."
        }
      },
      "@supabase/postgrest-js.PostgrestClient.from": {
        "name": "@supabase/postgrest-js.PostgrestClient.from",
        "params": [
          {
            "name": "relation",
            "type": {
              "type": "nameOnly",
              "name": "TableName"
            },
            "comment": {
              "shortText": "The table or view name to query\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Perform a query on a table or a view."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "relation",
                "type": {
                  "type": "nameOnly",
                  "name": "ViewName"
                },
                "comment": {
                  "shortText": "The table or view name to query\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Perform a query on a table or a view."
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestClient.rpc": {
        "name": "@supabase/postgrest-js.PostgrestClient.rpc",
        "params": [
          {
            "name": "fn",
            "type": {
              "type": "nameOnly",
              "name": "FnName"
            },
            "comment": {
              "shortText": "The function name to call"
            }
          },
          {
            "name": "args",
            "type": {
              "type": "nameOnly",
              "name": "Fn['Args']"
            },
            "comment": {
              "shortText": "The arguments to pass to the function call"
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "count",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": "exact"
                      },
                      {
                        "type": "literal",
                        "value": "planned"
                      },
                      {
                        "type": "literal",
                        "value": "estimated"
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Count algorithm to use to count rows returned by the\\nfunction. Only applicable for [set-returning\\nfunctions](https://www.postgresql.org/docs/current/functions-srf.html).\\n\\n\`\\"exact\\"\`: Exact but slow count algorithm. Performs a \`COUNT(*)\` under the\\nhood.\\n\\n\`\\"planned\\"\`: Approximated but fast count algorithm. Uses the Postgres\\nstatistics under the hood.\\n\\n\`\\"estimated\\"\`: Uses exact count for low numbers and planned count for high\\nnumbers.\\n"
                  }
                },
                {
                  "name": "get",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "When set to \`true\`, the function will be called with\\nread-only access mode."
                  }
                },
                {
                  "name": "head",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "When set to \`true\`, \`data\` will not be returned.\\nUseful if you only need the count."
                  }
                }
              ]
            },
            "comment": {
              "shortText": "Named parameters"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Perform a function call."
        }
      },
      "@supabase/postgrest-js.PostgrestClient.schema": {
        "name": "@supabase/postgrest-js.PostgrestClient.schema",
        "params": [
          {
            "name": "schema",
            "type": {
              "type": "nameOnly",
              "name": "DynamicSchema"
            },
            "comment": {
              "shortText": "The schema to query\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Database"
          }
        },
        "comment": {
          "shortText": "Select a schema to query or perform an function (rpc) call.",
          "text": "The schema needs to be on the list of exposed schemas inside Supabase.\\n"
        }
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.constructor": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.constructor",
        "params": [
          {
            "name": "builder"
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        }
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.abortSignal": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.abortSignal",
        "params": [
          {
            "name": "signal",
            "type": {
              "type": "nameOnly",
              "name": "AbortSignal"
            },
            "comment": {
              "shortText": "The AbortSignal to use for the fetch request\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Set the AbortSignal for the fetch request."
        }
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.containedBy": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.containedBy",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The jsonb, array, or range column to filter on"
            }
          },
          {
            "name": "value",
            "type": {
              "type": "union",
              "subTypes": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "record",
                  "name": "Record",
                  "keyType": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "valueType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                {
                  "type": "array",
                  "elemType": {
                    "type": "nameOnly",
                    "name": "Row['ColumnName']"
                  }
                }
              ]
            },
            "comment": {
              "shortText": "The jsonb, array, or range value to filter with\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Only relevant for jsonb, array, and range columns. Match only rows where\\nevery element appearing in \`column\` is contained by \`value\`."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The jsonb, array, or range column to filter on"
                }
              },
              {
                "name": "value",
                "type": {
                  "type": "union",
                  "subTypes": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "array",
                      "elemType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    },
                    {
                      "type": "record",
                      "name": "Record",
                      "keyType": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "valueType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  ]
                },
                "comment": {
                  "shortText": "The jsonb, array, or range value to filter with\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Only relevant for jsonb, array, and range columns. Match only rows where\\nevery element appearing in \`column\` is contained by \`value\`."
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.contains": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.contains",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The jsonb, array, or range column to filter on"
            }
          },
          {
            "name": "value",
            "type": {
              "type": "union",
              "subTypes": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "record",
                  "name": "Record",
                  "keyType": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "valueType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                {
                  "type": "array",
                  "elemType": {
                    "type": "nameOnly",
                    "name": "Row['ColumnName']"
                  }
                }
              ]
            },
            "comment": {
              "shortText": "The jsonb, array, or range value to filter with\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Only relevant for jsonb, array, and range columns. Match only rows where\\n\`column\` contains every element appearing in \`value\`."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The jsonb, array, or range column to filter on"
                }
              },
              {
                "name": "value",
                "type": {
                  "type": "union",
                  "subTypes": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "array",
                      "elemType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    },
                    {
                      "type": "record",
                      "name": "Record",
                      "keyType": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "valueType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  ]
                },
                "comment": {
                  "shortText": "The jsonb, array, or range value to filter with\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Only relevant for jsonb, array, and range columns. Match only rows where\\n\`column\` contains every element appearing in \`value\`."
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.csv": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.csv",
        "params": [],
        "ret": {
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        "comment": {
          "shortText": "Return \`data\` as a string in CSV format."
        }
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.eq": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.eq",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The column to filter on"
            }
          },
          {
            "name": "value",
            "type": {
              "type": "nameOnly",
              "name": "NonNullable"
            },
            "comment": {
              "shortText": "The value to filter with\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Match only rows where \`column\` is equal to \`value\`.",
          "text": "To check if the value of \`column\` is NULL, you should use \`.is()\` instead.\\n"
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The column to filter on"
                }
              },
              {
                "name": "value",
                "type": {
                  "type": "nameOnly",
                  "name": "NonNullable"
                },
                "comment": {
                  "shortText": "The value to filter with\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Match only rows where \`column\` is equal to \`value\`.",
              "text": "To check if the value of \`column\` is NULL, you should use \`.is()\` instead.\\n"
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.explain": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.explain",
        "params": [
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "analyze",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "If \`true\`, the query will be executed and the\\nactual run time will be returned\\n"
                  }
                },
                {
                  "name": "buffers",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "If \`true\`, include information on buffer usage\\n"
                  }
                },
                {
                  "name": "format",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": "text"
                      },
                      {
                        "type": "literal",
                        "value": "json"
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The format of the output, can be \`\\"text\\"\` (default)\\nor \`\\"json\\"\`\\n"
                  }
                },
                {
                  "name": "settings",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "If \`true\`, include information on configuration\\nparameters that affect query planning\\n"
                  }
                },
                {
                  "name": "verbose",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "If \`true\`, the query identifier will be returned\\nand \`data\` will include the output columns of the query\\n"
                  }
                },
                {
                  "name": "wal",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "If \`true\`, include information on WAL record generation\\n"
                  }
                }
              ]
            },
            "comment": {
              "shortText": "Named parameters\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "union",
            "subTypes": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "array",
                "elemType": {
                  "type": "record",
                  "name": "Record",
                  "keyType": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "valueType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              }
            ]
          }
        },
        "comment": {
          "shortText": "Return \`data\` as the EXPLAIN plan for the query.",
          "text": "You need to enable the\\n[db_plan_enabled](https://supabase.com/docs/guides/database/debugging-performance#enabling-explain)\\nsetting before using this method.\\n"
        }
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.filter": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.filter",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The column to filter on"
            }
          },
          {
            "name": "operator",
            "type": {
              "type": "union",
              "subTypes": [
                {
                  "type": "nameOnly",
                  "name": "FilterOperator"
                },
                {
                  "type": "literal",
                  "value": "not.eq"
                },
                {
                  "type": "literal",
                  "value": "not.neq"
                },
                {
                  "type": "literal",
                  "value": "not.gt"
                },
                {
                  "type": "literal",
                  "value": "not.gte"
                },
                {
                  "type": "literal",
                  "value": "not.lt"
                },
                {
                  "type": "literal",
                  "value": "not.lte"
                },
                {
                  "type": "literal",
                  "value": "not.like"
                },
                {
                  "type": "literal",
                  "value": "not.ilike"
                },
                {
                  "type": "literal",
                  "value": "not.is"
                },
                {
                  "type": "literal",
                  "value": "not.in"
                },
                {
                  "type": "literal",
                  "value": "not.cs"
                },
                {
                  "type": "literal",
                  "value": "not.cd"
                },
                {
                  "type": "literal",
                  "value": "not.sl"
                },
                {
                  "type": "literal",
                  "value": "not.sr"
                },
                {
                  "type": "literal",
                  "value": "not.nxl"
                },
                {
                  "type": "literal",
                  "value": "not.nxr"
                },
                {
                  "type": "literal",
                  "value": "not.adj"
                },
                {
                  "type": "literal",
                  "value": "not.ov"
                },
                {
                  "type": "literal",
                  "value": "not.fts"
                },
                {
                  "type": "literal",
                  "value": "not.plfts"
                },
                {
                  "type": "literal",
                  "value": "not.phfts"
                },
                {
                  "type": "literal",
                  "value": "not.wfts"
                }
              ]
            },
            "comment": {
              "shortText": "The operator to filter with, following PostgREST syntax"
            }
          },
          {
            "name": "value",
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "comment": {
              "shortText": "The value to filter with, following PostgREST syntax\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Match only rows which satisfy the filter. This is an escape hatch - you\\nshould use the specific filter methods wherever possible.",
          "text": "Unlike most filters, \`opearator\` and \`value\` are used as-is and need to\\nfollow [PostgREST\\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\\nto make sure they are properly sanitized.\\n"
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The column to filter on"
                }
              },
              {
                "name": "operator",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The operator to filter with, following PostgREST syntax"
                }
              },
              {
                "name": "value",
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "comment": {
                  "shortText": "The value to filter with, following PostgREST syntax\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Match only rows which satisfy the filter. This is an escape hatch - you\\nshould use the specific filter methods wherever possible.",
              "text": "Unlike most filters, \`opearator\` and \`value\` are used as-is and need to\\nfollow [PostgREST\\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\\nto make sure they are properly sanitized.\\n"
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.geojson": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.geojson",
        "params": [],
        "ret": {
          "type": {
            "type": "record",
            "name": "Record",
            "keyType": {
              "type": "intrinsic",
              "name": "string"
            },
            "valueType": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        },
        "comment": {
          "shortText": "Return \`data\` as an object in [GeoJSON](https://geojson.org) format."
        }
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.gt": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.gt",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The column to filter on"
            }
          },
          {
            "name": "value",
            "type": {
              "type": "nameOnly",
              "name": "Row['ColumnName']"
            },
            "comment": {
              "shortText": "The value to filter with\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Match only rows where \`column\` is greater than \`value\`."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The column to filter on"
                }
              },
              {
                "name": "value",
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "comment": {
                  "shortText": "The value to filter with\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Match only rows where \`column\` is greater than \`value\`."
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.gte": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.gte",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The column to filter on"
            }
          },
          {
            "name": "value",
            "type": {
              "type": "nameOnly",
              "name": "Row['ColumnName']"
            },
            "comment": {
              "shortText": "The value to filter with\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Match only rows where \`column\` is greater than or equal to \`value\`."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The column to filter on"
                }
              },
              {
                "name": "value",
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "comment": {
                  "shortText": "The value to filter with\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Match only rows where \`column\` is greater than or equal to \`value\`."
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.ilike": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.ilike",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The column to filter on"
            }
          },
          {
            "name": "pattern",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The pattern to match with\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Match only rows where \`column\` matches \`pattern\` case-insensitively."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The column to filter on"
                }
              },
              {
                "name": "pattern",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The pattern to match with\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Match only rows where \`column\` matches \`pattern\` case-insensitively."
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.ilikeAllOf": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.ilikeAllOf",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The column to filter on"
            }
          },
          {
            "name": "patterns",
            "type": {
              "type": "array",
              "elemType": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            "comment": {
              "shortText": "The patterns to match with\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Match only rows where \`column\` matches all of \`patterns\` case-insensitively."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The column to filter on"
                }
              },
              {
                "name": "patterns",
                "type": {
                  "type": "array",
                  "elemType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                "comment": {
                  "shortText": "The patterns to match with\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Match only rows where \`column\` matches all of \`patterns\` case-insensitively."
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.ilikeAnyOf": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.ilikeAnyOf",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The column to filter on"
            }
          },
          {
            "name": "patterns",
            "type": {
              "type": "array",
              "elemType": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            "comment": {
              "shortText": "The patterns to match with\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Match only rows where \`column\` matches any of \`patterns\` case-insensitively."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The column to filter on"
                }
              },
              {
                "name": "patterns",
                "type": {
                  "type": "array",
                  "elemType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                "comment": {
                  "shortText": "The patterns to match with\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Match only rows where \`column\` matches any of \`patterns\` case-insensitively."
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.in": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.in",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The column to filter on"
            }
          },
          {
            "name": "values",
            "type": {
              "type": "array",
              "elemType": {
                "type": "nameOnly",
                "name": "Row['ColumnName']"
              }
            },
            "comment": {
              "shortText": "The values array to filter with\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Match only rows where \`column\` is included in the \`values\` array."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The column to filter on"
                }
              },
              {
                "name": "values",
                "type": {
                  "type": "array",
                  "elemType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                "comment": {
                  "shortText": "The values array to filter with\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Match only rows where \`column\` is included in the \`values\` array."
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.is": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.is",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The column to filter on"
            }
          },
          {
            "name": "value",
            "comment": {
              "shortText": "The value to filter with\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Match only rows where \`column\` IS \`value\`.",
          "text": "For non-boolean columns, this is only relevant for checking if the value of\\n\`column\` is NULL by setting \`value\` to \`null\`.\\n\\nFor boolean columns, you can also set \`value\` to \`true\` or \`false\` and it\\nwill behave the same way as \`.eq()\`.\\n"
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The column to filter on"
                }
              },
              {
                "name": "value",
                "type": {
                  "type": "union",
                  "subTypes": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  ]
                },
                "comment": {
                  "shortText": "The value to filter with\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Match only rows where \`column\` IS \`value\`.",
              "text": "For non-boolean columns, this is only relevant for checking if the value of\\n\`column\` is NULL by setting \`value\` to \`null\`.\\n\\nFor boolean columns, you can also set \`value\` to \`true\` or \`false\` and it\\nwill behave the same way as \`.eq()\`.\\n"
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.like": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.like",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The column to filter on"
            }
          },
          {
            "name": "pattern",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The pattern to match with\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Match only rows where \`column\` matches \`pattern\` case-sensitively."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The column to filter on"
                }
              },
              {
                "name": "pattern",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The pattern to match with\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Match only rows where \`column\` matches \`pattern\` case-sensitively."
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.likeAllOf": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.likeAllOf",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The column to filter on"
            }
          },
          {
            "name": "patterns",
            "type": {
              "type": "array",
              "elemType": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            "comment": {
              "shortText": "The patterns to match with\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Match only rows where \`column\` matches all of \`patterns\` case-sensitively."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The column to filter on"
                }
              },
              {
                "name": "patterns",
                "type": {
                  "type": "array",
                  "elemType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                "comment": {
                  "shortText": "The patterns to match with\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Match only rows where \`column\` matches all of \`patterns\` case-sensitively."
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.likeAnyOf": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.likeAnyOf",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The column to filter on"
            }
          },
          {
            "name": "patterns",
            "type": {
              "type": "array",
              "elemType": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            "comment": {
              "shortText": "The patterns to match with\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Match only rows where \`column\` matches any of \`patterns\` case-sensitively."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The column to filter on"
                }
              },
              {
                "name": "patterns",
                "type": {
                  "type": "array",
                  "elemType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                "comment": {
                  "shortText": "The patterns to match with\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Match only rows where \`column\` matches any of \`patterns\` case-sensitively."
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.limit": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.limit",
        "params": [
          {
            "name": "count",
            "type": {
              "type": "intrinsic",
              "name": "number"
            },
            "comment": {
              "shortText": "The maximum number of rows to return"
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "foreignTable",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Deprecated, use \`options.referencedTable\`\\ninstead\\n"
                  }
                },
                {
                  "name": "referencedTable",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Set this to limit rows of referenced\\ntables instead of the parent table"
                  }
                }
              ]
            },
            "comment": {
              "shortText": "Named parameters"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Limit the query result by \`count\`."
        }
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.lt": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.lt",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The column to filter on"
            }
          },
          {
            "name": "value",
            "type": {
              "type": "nameOnly",
              "name": "Row['ColumnName']"
            },
            "comment": {
              "shortText": "The value to filter with\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Match only rows where \`column\` is less than \`value\`."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The column to filter on"
                }
              },
              {
                "name": "value",
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "comment": {
                  "shortText": "The value to filter with\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Match only rows where \`column\` is less than \`value\`."
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.lte": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.lte",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The column to filter on"
            }
          },
          {
            "name": "value",
            "type": {
              "type": "nameOnly",
              "name": "Row['ColumnName']"
            },
            "comment": {
              "shortText": "The value to filter with\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Match only rows where \`column\` is less than or equal to \`value\`."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The column to filter on"
                }
              },
              {
                "name": "value",
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "comment": {
                  "shortText": "The value to filter with\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Match only rows where \`column\` is less than or equal to \`value\`."
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.match": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.match",
        "params": [
          {
            "name": "query",
            "type": {
              "type": "record",
              "name": "Record",
              "keyType": {
                "type": "nameOnly",
                "name": "ColumnName"
              },
              "valueType": {
                "type": "nameOnly",
                "name": "Row['ColumnName']"
              }
            },
            "comment": {
              "shortText": "The object to filter with, with column names as keys mapped\\nto their filter values\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Match only rows where each column in \`query\` keys is equal to its\\nassociated value. Shorthand for multiple \`.eq()\`s."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "query",
                "type": {
                  "type": "record",
                  "name": "Record",
                  "keyType": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "valueType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                "comment": {
                  "shortText": "The object to filter with, with column names as keys mapped\\nto their filter values\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Match only rows where each column in \`query\` keys is equal to its\\nassociated value. Shorthand for multiple \`.eq()\`s."
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.maybeSingle": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.maybeSingle",
        "params": [],
        "ret": {
          "type": {
            "type": "union",
            "subTypes": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "nameOnly",
                "name": "ResultOne"
              }
            ]
          }
        },
        "comment": {
          "shortText": "Return \`data\` as a single object instead of an array of objects.",
          "text": "Query result must be zero or one row (e.g. using \`.limit(1)\`), otherwise\\nthis returns an error.\\n"
        }
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.neq": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.neq",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The column to filter on"
            }
          },
          {
            "name": "value",
            "type": {
              "type": "nameOnly",
              "name": "Row['ColumnName']"
            },
            "comment": {
              "shortText": "The value to filter with\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Match only rows where \`column\` is not equal to \`value\`."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The column to filter on"
                }
              },
              {
                "name": "value",
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "comment": {
                  "shortText": "The value to filter with\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Match only rows where \`column\` is not equal to \`value\`."
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.not": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.not",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The column to filter on"
            }
          },
          {
            "name": "operator",
            "type": {
              "type": "nameOnly",
              "name": "FilterOperator"
            },
            "comment": {
              "shortText": "The operator to be negated to filter with, following\\nPostgREST syntax"
            }
          },
          {
            "name": "value",
            "type": {
              "type": "nameOnly",
              "name": "Row['ColumnName']"
            },
            "comment": {
              "shortText": "The value to filter with, following PostgREST syntax\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Match only rows which doesn't satisfy the filter.",
          "text": "Unlike most filters, \`opearator\` and \`value\` are used as-is and need to\\nfollow [PostgREST\\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\\nto make sure they are properly sanitized.\\n"
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The column to filter on"
                }
              },
              {
                "name": "operator",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The operator to be negated to filter with, following\\nPostgREST syntax"
                }
              },
              {
                "name": "value",
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "comment": {
                  "shortText": "The value to filter with, following PostgREST syntax\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Match only rows which doesn't satisfy the filter.",
              "text": "Unlike most filters, \`opearator\` and \`value\` are used as-is and need to\\nfollow [PostgREST\\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\\nto make sure they are properly sanitized.\\n"
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.or": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.or",
        "params": [
          {
            "name": "filters",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The filters to use, following PostgREST syntax"
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "foreignTable",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Deprecated, use \`referencedTable\` instead\\n"
                  }
                },
                {
                  "name": "referencedTable",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Set this to filter on referenced tables\\ninstead of the parent table"
                  }
                }
              ]
            },
            "comment": {
              "shortText": "Named parameters"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Match only rows which satisfy at least one of the filters.",
          "text": "Unlike most filters, \`filters\` is used as-is and needs to follow [PostgREST\\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\\nto make sure it's properly sanitized.\\n\\nIt's currently not possible to do an \`.or()\` filter across multiple tables.\\n"
        }
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.order": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.order",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The column to order by"
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "ascending",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "If \`true\`, the result will be in ascending order"
                  }
                },
                {
                  "name": "nullsFirst",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "If \`true\`, \`null\`s appear first. If \`false\`,\\n\`null\`s appear last."
                  }
                },
                {
                  "name": "referencedTable",
                  "type": {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Set this to order a referenced table by\\nits columns"
                  }
                }
              ]
            },
            "isOptional": true,
            "comment": {
              "shortText": "Named parameters"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Order the query result by \`column\`.",
          "text": "You can call this method multiple times to order by multiple columns.\\n\\nYou can order referenced tables, but it only affects the ordering of the\\nparent table if you use \`!inner\` in the query.\\n"
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The column to order by"
                }
              },
              {
                "name": "options",
                "type": {
                  "type": "object",
                  "properties": [
                    {
                      "name": "ascending",
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "If \`true\`, the result will be in ascending order"
                      }
                    },
                    {
                      "name": "nullsFirst",
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "If \`true\`, \`null\`s appear first. If \`false\`,\\n\`null\`s appear last."
                      }
                    },
                    {
                      "name": "referencedTable",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "Set this to order a referenced table by\\nits columns"
                      }
                    }
                  ]
                },
                "isOptional": true,
                "comment": {
                  "shortText": "Named parameters"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Order the query result by \`column\`.",
              "text": "You can call this method multiple times to order by multiple columns.\\n\\nYou can order referenced tables, but it only affects the ordering of the\\nparent table if you use \`!inner\` in the query.\\n"
            }
          },
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "nameOnly",
                  "name": "ColumnName"
                },
                "comment": {
                  "shortText": "The column to order by"
                }
              },
              {
                "name": "options",
                "type": {
                  "type": "object",
                  "properties": [
                    {
                      "name": "ascending",
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "isOptional": true
                    },
                    {
                      "name": "foreignTable",
                      "type": {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      "isOptional": true
                    },
                    {
                      "name": "nullsFirst",
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "isOptional": true
                    }
                  ]
                },
                "isOptional": true,
                "comment": {
                  "shortText": "Named parameters"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Order the query result by \`column\`.",
              "text": "You can call this method multiple times to order by multiple columns.\\n\\nYou can order referenced tables, but it only affects the ordering of the\\nparent table if you use \`!inner\` in the query.\\n",
              "tags": [
                {
                  "tag": "deprecated",
                  "text": "Use \`options.referencedTable\` instead of \`options.foreignTable\`\\n"
                }
              ]
            }
          },
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The column to order by"
                }
              },
              {
                "name": "options",
                "type": {
                  "type": "object",
                  "properties": [
                    {
                      "name": "ascending",
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "isOptional": true
                    },
                    {
                      "name": "foreignTable",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "isOptional": true
                    },
                    {
                      "name": "nullsFirst",
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "isOptional": true
                    }
                  ]
                },
                "isOptional": true,
                "comment": {
                  "shortText": "Named parameters"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Order the query result by \`column\`.",
              "text": "You can call this method multiple times to order by multiple columns.\\n\\nYou can order referenced tables, but it only affects the ordering of the\\nparent table if you use \`!inner\` in the query.\\n",
              "tags": [
                {
                  "tag": "deprecated",
                  "text": "Use \`options.referencedTable\` instead of \`options.foreignTable\`\\n"
                }
              ]
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.overlaps": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.overlaps",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The array or range column to filter on"
            }
          },
          {
            "name": "value",
            "type": {
              "type": "union",
              "subTypes": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "array",
                  "elemType": {
                    "type": "nameOnly",
                    "name": "Row['ColumnName']"
                  }
                }
              ]
            },
            "comment": {
              "shortText": "The array or range value to filter with\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Only relevant for array and range columns. Match only rows where\\n\`column\` and \`value\` have an element in common."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The array or range column to filter on"
                }
              },
              {
                "name": "value",
                "type": {
                  "type": "union",
                  "subTypes": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "array",
                      "elemType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  ]
                },
                "comment": {
                  "shortText": "The array or range value to filter with\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Only relevant for array and range columns. Match only rows where\\n\`column\` and \`value\` have an element in common."
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.range": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.range",
        "params": [
          {
            "name": "from",
            "type": {
              "type": "intrinsic",
              "name": "number"
            },
            "comment": {
              "shortText": "The starting index from which to limit the result"
            }
          },
          {
            "name": "to",
            "type": {
              "type": "intrinsic",
              "name": "number"
            },
            "comment": {
              "shortText": "The last index to which to limit the result"
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "foreignTable",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Deprecated, use \`options.referencedTable\`\\ninstead\\n"
                  }
                },
                {
                  "name": "referencedTable",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Set this to limit rows of referenced\\ntables instead of the parent table"
                  }
                }
              ]
            },
            "comment": {
              "shortText": "Named parameters"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Limit the query result by starting at an offset (\`from\`) and ending at the offset (\`from + to\`).\\nOnly records within this range are returned.\\nThis respects the query order and if there is no order clause the range could behave unexpectedly.\\nThe \`from\` and \`to\` values are 0-based and inclusive: \`range(1, 3)\` will include the second, third\\nand fourth rows of the query."
        }
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.rangeAdjacent": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.rangeAdjacent",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The range column to filter on"
            }
          },
          {
            "name": "range",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The range to filter with\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Only relevant for range columns. Match only rows where \`column\` is\\nmutually exclusive to \`range\` and there can be no element between the two\\nranges."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The range column to filter on"
                }
              },
              {
                "name": "range",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The range to filter with\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Only relevant for range columns. Match only rows where \`column\` is\\nmutually exclusive to \`range\` and there can be no element between the two\\nranges."
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.rangeGt": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.rangeGt",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The range column to filter on"
            }
          },
          {
            "name": "range",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The range to filter with\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Only relevant for range columns. Match only rows where every element in\\n\`column\` is greater than any element in \`range\`."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The range column to filter on"
                }
              },
              {
                "name": "range",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The range to filter with\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Only relevant for range columns. Match only rows where every element in\\n\`column\` is greater than any element in \`range\`."
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.rangeGte": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.rangeGte",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The range column to filter on"
            }
          },
          {
            "name": "range",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The range to filter with\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Only relevant for range columns. Match only rows where every element in\\n\`column\` is either contained in \`range\` or greater than any element in\\n\`range\`."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The range column to filter on"
                }
              },
              {
                "name": "range",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The range to filter with\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Only relevant for range columns. Match only rows where every element in\\n\`column\` is either contained in \`range\` or greater than any element in\\n\`range\`."
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.rangeLt": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.rangeLt",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The range column to filter on"
            }
          },
          {
            "name": "range",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The range to filter with\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Only relevant for range columns. Match only rows where every element in\\n\`column\` is less than any element in \`range\`."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The range column to filter on"
                }
              },
              {
                "name": "range",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The range to filter with\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Only relevant for range columns. Match only rows where every element in\\n\`column\` is less than any element in \`range\`."
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.rangeLte": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.rangeLte",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The range column to filter on"
            }
          },
          {
            "name": "range",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The range to filter with\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Only relevant for range columns. Match only rows where every element in\\n\`column\` is either contained in \`range\` or less than any element in\\n\`range\`."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The range column to filter on"
                }
              },
              {
                "name": "range",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The range to filter with\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Only relevant for range columns. Match only rows where every element in\\n\`column\` is either contained in \`range\` or less than any element in\\n\`range\`."
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.returns": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.returns",
        "params": [],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Override the type of the returned \`data\`."
        }
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.rollback": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.rollback",
        "params": [],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Rollback the query.",
          "text": "\`data\` will still be returned, but the query is not committed.\\n"
        }
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.select": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.select",
        "params": [
          {
            "name": "columns",
            "type": {
              "type": "nameOnly",
              "name": "Query"
            },
            "isOptional": true,
            "comment": {
              "shortText": "The columns to retrieve, separated by commas\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Perform a SELECT on the query result.",
          "text": "By default, \`.insert()\`, \`.update()\`, \`.upsert()\`, and \`.delete()\` do not\\nreturn modified rows. By calling this method, modified rows are returned in\\n\`data\`.\\n"
        }
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.single": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.single",
        "params": [],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "ResultOne"
          }
        },
        "comment": {
          "shortText": "Return \`data\` as a single object instead of an array of objects.",
          "text": "Query result must be one row (e.g. using \`.limit(1)\`), otherwise this\\nreturns an error.\\n"
        }
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.textSearch": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.textSearch",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The text or tsvector column to filter on"
            }
          },
          {
            "name": "query",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The query text to match with"
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "config",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The text search configuration to use"
                  }
                },
                {
                  "name": "type",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": "plain"
                      },
                      {
                        "type": "literal",
                        "value": "phrase"
                      },
                      {
                        "type": "literal",
                        "value": "websearch"
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Change how the \`query\` text is interpreted\\n"
                  }
                }
              ]
            },
            "isOptional": true,
            "comment": {
              "shortText": "Named parameters"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Only relevant for text and tsvector columns. Match only rows where\\n\`column\` matches the query string in \`query\`."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The text or tsvector column to filter on"
                }
              },
              {
                "name": "query",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The query text to match with"
                }
              },
              {
                "name": "options",
                "type": {
                  "type": "object",
                  "properties": [
                    {
                      "name": "config",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "The text search configuration to use"
                      }
                    },
                    {
                      "name": "type",
                      "type": {
                        "type": "union",
                        "subTypes": [
                          {
                            "type": "literal",
                            "value": "plain"
                          },
                          {
                            "type": "literal",
                            "value": "phrase"
                          },
                          {
                            "type": "literal",
                            "value": "websearch"
                          }
                        ]
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "Change how the \`query\` text is interpreted\\n"
                      }
                    }
                  ]
                },
                "isOptional": true,
                "comment": {
                  "shortText": "Named parameters"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Only relevant for text and tsvector columns. Match only rows where\\n\`column\` matches the query string in \`query\`."
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.then": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.then",
        "params": [
          {
            "name": "onfulfilled",
            "type": {
              "type": "union",
              "subTypes": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "function",
                  "params": [
                    {
                      "name": "value",
                      "type": {
                        "type": "union",
                        "name": "PostgrestSingleResponse",
                        "subTypes": [
                          {
                            "type": "object",
                            "name": "PostgrestResponseSuccess",
                            "properties": [
                              {
                                "name": "count",
                                "type": {
                                  "type": "union",
                                  "subTypes": [
                                    {
                                      "type": "literal",
                                      "value": null
                                    },
                                    {
                                      "type": "intrinsic",
                                      "name": "number"
                                    }
                                  ]
                                }
                              },
                              {
                                "name": "data",
                                "type": {
                                  "type": "nameOnly",
                                  "name": "T"
                                }
                              },
                              {
                                "name": "error",
                                "type": {
                                  "type": "literal",
                                  "value": null
                                }
                              },
                              {
                                "name": "status",
                                "type": {
                                  "type": "intrinsic",
                                  "name": "number"
                                }
                              },
                              {
                                "name": "statusText",
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            ]
                          },
                          {
                            "type": "object",
                            "name": "PostgrestResponseFailure",
                            "properties": [
                              {
                                "name": "count",
                                "type": {
                                  "type": "literal",
                                  "value": null
                                }
                              },
                              {
                                "name": "data",
                                "type": {
                                  "type": "literal",
                                  "value": null
                                }
                              },
                              {
                                "name": "error",
                                "type": {
                                  "name": "PostgrestError",
                                  "type": "object",
                                  "properties": [
                                    {
                                      "name": "code",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "details",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "hint",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "message",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "name": "status",
                                "type": {
                                  "type": "intrinsic",
                                  "name": "number"
                                }
                              },
                              {
                                "name": "statusText",
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "ret": {
                    "type": {
                      "type": "union",
                      "subTypes": [
                        {
                          "type": "nameOnly",
                          "name": "TResult1"
                        },
                        {
                          "type": "nameOnly",
                          "name": "PromiseLike"
                        }
                      ]
                    }
                  }
                }
              ]
            },
            "isOptional": true
          },
          {
            "name": "onrejected",
            "type": {
              "type": "union",
              "subTypes": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "function",
                  "params": [
                    {
                      "name": "reason",
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "ret": {
                    "type": {
                      "type": "union",
                      "subTypes": [
                        {
                          "type": "nameOnly",
                          "name": "TResult2"
                        },
                        {
                          "type": "nameOnly",
                          "name": "PromiseLike"
                        }
                      ]
                    }
                  }
                }
              ]
            },
            "isOptional": true
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "PromiseLike"
          }
        }
      },
      "@supabase/postgrest-js.PostgrestFilterBuilder.throwOnError": {
        "name": "@supabase/postgrest-js.PostgrestFilterBuilder.throwOnError",
        "params": [],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "If there's an error with the query, throwOnError will reject the promise by\\nthrowing the error instead of returning it as part of a successful response.",
          "text": "{@link https://github.com/supabase/supabase-js/issues/92}\\n"
        }
      },
      "@supabase/postgrest-js.PostgrestQueryBuilder.constructor": {
        "name": "@supabase/postgrest-js.PostgrestQueryBuilder.constructor",
        "params": [
          {
            "name": "url",
            "type": {
              "type": "nameOnly",
              "name": "URL"
            }
          },
          {
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "fetch",
                  "type": {
                    "type": "function",
                    "params": [
                      {
                        "name": "input",
                        "type": {
                          "type": "union",
                          "subTypes": [
                            {
                              "type": "nameOnly",
                              "name": "RequestInfo"
                            },
                            {
                              "type": "nameOnly",
                              "name": "URL"
                            }
                          ]
                        }
                      },
                      {
                        "name": "init",
                        "type": {
                          "type": "nameOnly",
                          "name": "RequestInit"
                        },
                        "isOptional": true
                      }
                    ],
                    "ret": {
                      "type": {
                        "type": "promise",
                        "name": "Promise",
                        "awaited": {
                          "type": "nameOnly",
                          "name": "Response"
                        }
                      }
                    }
                  },
                  "isOptional": true
                },
                {
                  "name": "headers",
                  "type": {
                    "type": "record",
                    "name": "Record",
                    "keyType": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "valueType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  "isOptional": true
                },
                {
                  "name": "schema",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        }
      },
      "@supabase/postgrest-js.PostgrestQueryBuilder.delete": {
        "name": "@supabase/postgrest-js.PostgrestQueryBuilder.delete",
        "params": [
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "count",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": "exact"
                      },
                      {
                        "type": "literal",
                        "value": "planned"
                      },
                      {
                        "type": "literal",
                        "value": "estimated"
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Count algorithm to use to count deleted rows.\\n\\n\`\\"exact\\"\`: Exact but slow count algorithm. Performs a \`COUNT(*)\` under the\\nhood.\\n\\n\`\\"planned\\"\`: Approximated but fast count algorithm. Uses the Postgres\\nstatistics under the hood.\\n\\n\`\\"estimated\\"\`: Uses exact count for low numbers and planned count for high\\nnumbers.\\n"
                  }
                }
              ]
            },
            "comment": {
              "shortText": "Named parameters\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Perform a DELETE on the table or view.",
          "text": "By default, deleted rows are not returned. To return it, chain the call\\nwith \`.select()\` after filters.\\n"
        }
      },
      "@supabase/postgrest-js.PostgrestQueryBuilder.insert": {
        "name": "@supabase/postgrest-js.PostgrestQueryBuilder.insert",
        "params": [
          {
            "name": "values",
            "type": {
              "type": "nameOnly",
              "name": "Row"
            },
            "comment": {
              "shortText": "The values to insert. Pass an object to insert a single row\\nor an array to insert multiple rows.\\n"
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "count",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": "exact"
                      },
                      {
                        "type": "literal",
                        "value": "planned"
                      },
                      {
                        "type": "literal",
                        "value": "estimated"
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Count algorithm to use to count inserted rows.\\n\\n\`\\"exact\\"\`: Exact but slow count algorithm. Performs a \`COUNT(*)\` under the\\nhood.\\n\\n\`\\"planned\\"\`: Approximated but fast count algorithm. Uses the Postgres\\nstatistics under the hood.\\n\\n\`\\"estimated\\"\`: Uses exact count for low numbers and planned count for high\\nnumbers.\\n"
                  }
                }
              ]
            },
            "isOptional": true,
            "comment": {
              "shortText": "Named parameters\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Perform an INSERT into the table or view.",
          "text": "By default, inserted rows are not returned. To return it, chain the call\\nwith \`.select()\`.\\n"
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "values",
                "type": {
                  "type": "array",
                  "elemType": {
                    "type": "nameOnly",
                    "name": "Row"
                  }
                },
                "comment": {
                  "shortText": "The values to insert. Pass an object to insert a single row\\nor an array to insert multiple rows.\\n"
                }
              },
              {
                "name": "options",
                "type": {
                  "type": "object",
                  "properties": [
                    {
                      "name": "count",
                      "type": {
                        "type": "union",
                        "subTypes": [
                          {
                            "type": "literal",
                            "value": "exact"
                          },
                          {
                            "type": "literal",
                            "value": "planned"
                          },
                          {
                            "type": "literal",
                            "value": "estimated"
                          }
                        ]
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "Count algorithm to use to count inserted rows.\\n\\n\`\\"exact\\"\`: Exact but slow count algorithm. Performs a \`COUNT(*)\` under the\\nhood.\\n\\n\`\\"planned\\"\`: Approximated but fast count algorithm. Uses the Postgres\\nstatistics under the hood.\\n\\n\`\\"estimated\\"\`: Uses exact count for low numbers and planned count for high\\nnumbers.\\n"
                      }
                    },
                    {
                      "name": "defaultToNull",
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "Make missing fields default to \`null\`.\\nOtherwise, use the default value for the column. Only applies for bulk\\ninserts.\\n"
                      }
                    }
                  ]
                },
                "isOptional": true,
                "comment": {
                  "shortText": "Named parameters\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Perform an INSERT into the table or view.",
              "text": "By default, inserted rows are not returned. To return it, chain the call\\nwith \`.select()\`.\\n"
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestQueryBuilder.select": {
        "name": "@supabase/postgrest-js.PostgrestQueryBuilder.select",
        "params": [
          {
            "name": "columns",
            "type": {
              "type": "nameOnly",
              "name": "Query"
            },
            "isOptional": true,
            "comment": {
              "shortText": "The columns to retrieve, separated by commas. Columns can be renamed when returned with \`customName:columnName\`\\n"
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "count",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": "exact"
                      },
                      {
                        "type": "literal",
                        "value": "planned"
                      },
                      {
                        "type": "literal",
                        "value": "estimated"
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Count algorithm to use to count rows in the table or view.\\n\\n\`\\"exact\\"\`: Exact but slow count algorithm. Performs a \`COUNT(*)\` under the\\nhood.\\n\\n\`\\"planned\\"\`: Approximated but fast count algorithm. Uses the Postgres\\nstatistics under the hood.\\n\\n\`\\"estimated\\"\`: Uses exact count for low numbers and planned count for high\\nnumbers.\\n"
                  }
                },
                {
                  "name": "head",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "When set to \`true\`, \`data\` will not be returned.\\nUseful if you only need the count.\\n"
                  }
                }
              ]
            },
            "comment": {
              "shortText": "Named parameters\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Perform a SELECT query on the table or view."
        }
      },
      "@supabase/postgrest-js.PostgrestQueryBuilder.update": {
        "name": "@supabase/postgrest-js.PostgrestQueryBuilder.update",
        "params": [
          {
            "name": "values",
            "type": {
              "type": "nameOnly",
              "name": "Row"
            },
            "comment": {
              "shortText": "The values to update with\\n"
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "count",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": "exact"
                      },
                      {
                        "type": "literal",
                        "value": "planned"
                      },
                      {
                        "type": "literal",
                        "value": "estimated"
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Count algorithm to use to count updated rows.\\n\\n\`\\"exact\\"\`: Exact but slow count algorithm. Performs a \`COUNT(*)\` under the\\nhood.\\n\\n\`\\"planned\\"\`: Approximated but fast count algorithm. Uses the Postgres\\nstatistics under the hood.\\n\\n\`\\"estimated\\"\`: Uses exact count for low numbers and planned count for high\\nnumbers.\\n"
                  }
                }
              ]
            },
            "comment": {
              "shortText": "Named parameters\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Perform an UPDATE on the table or view.",
          "text": "By default, updated rows are not returned. To return it, chain the call\\nwith \`.select()\` after filters.\\n"
        }
      },
      "@supabase/postgrest-js.PostgrestQueryBuilder.upsert": {
        "name": "@supabase/postgrest-js.PostgrestQueryBuilder.upsert",
        "params": [
          {
            "name": "values",
            "type": {
              "type": "nameOnly",
              "name": "Row"
            },
            "comment": {
              "shortText": "The values to upsert with. Pass an object to upsert a\\nsingle row or an array to upsert multiple rows.\\n"
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "count",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": "exact"
                      },
                      {
                        "type": "literal",
                        "value": "planned"
                      },
                      {
                        "type": "literal",
                        "value": "estimated"
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Count algorithm to use to count upserted rows.\\n\\n\`\\"exact\\"\`: Exact but slow count algorithm. Performs a \`COUNT(*)\` under the\\nhood.\\n\\n\`\\"planned\\"\`: Approximated but fast count algorithm. Uses the Postgres\\nstatistics under the hood.\\n\\n\`\\"estimated\\"\`: Uses exact count for low numbers and planned count for high\\nnumbers.\\n"
                  }
                },
                {
                  "name": "ignoreDuplicates",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "If \`true\`, duplicate rows are ignored. If\\n\`false\`, duplicate rows are merged with existing rows.\\n"
                  }
                },
                {
                  "name": "onConflict",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Comma-separated UNIQUE column(s) to specify how\\nduplicate rows are determined. Two rows are duplicates if all the\\n\`onConflict\` columns are equal.\\n"
                  }
                }
              ]
            },
            "isOptional": true,
            "comment": {
              "shortText": "Named parameters\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Perform an UPSERT on the table or view. Depending on the column(s) passed\\nto \`onConflict\`, \`.upsert()\` allows you to perform the equivalent of\\n\`.insert()\` if a row with the corresponding \`onConflict\` columns doesn't\\nexist, or if it does exist, perform an alternative action depending on\\n\`ignoreDuplicates\`.",
          "text": "By default, upserted rows are not returned. To return it, chain the call\\nwith \`.select()\`.\\n"
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "values",
                "type": {
                  "type": "array",
                  "elemType": {
                    "type": "nameOnly",
                    "name": "Row"
                  }
                },
                "comment": {
                  "shortText": "The values to upsert with. Pass an object to upsert a\\nsingle row or an array to upsert multiple rows.\\n"
                }
              },
              {
                "name": "options",
                "type": {
                  "type": "object",
                  "properties": [
                    {
                      "name": "count",
                      "type": {
                        "type": "union",
                        "subTypes": [
                          {
                            "type": "literal",
                            "value": "exact"
                          },
                          {
                            "type": "literal",
                            "value": "planned"
                          },
                          {
                            "type": "literal",
                            "value": "estimated"
                          }
                        ]
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "Count algorithm to use to count upserted rows.\\n\\n\`\\"exact\\"\`: Exact but slow count algorithm. Performs a \`COUNT(*)\` under the\\nhood.\\n\\n\`\\"planned\\"\`: Approximated but fast count algorithm. Uses the Postgres\\nstatistics under the hood.\\n\\n\`\\"estimated\\"\`: Uses exact count for low numbers and planned count for high\\nnumbers.\\n"
                      }
                    },
                    {
                      "name": "defaultToNull",
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "Make missing fields default to \`null\`.\\nOtherwise, use the default value for the column. This only applies when\\ninserting new rows, not when merging with existing rows under\\n\`ignoreDuplicates: false\`. This also only applies when doing bulk upserts.\\n"
                      }
                    },
                    {
                      "name": "ignoreDuplicates",
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "If \`true\`, duplicate rows are ignored. If\\n\`false\`, duplicate rows are merged with existing rows.\\n"
                      }
                    },
                    {
                      "name": "onConflict",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "Comma-separated UNIQUE column(s) to specify how\\nduplicate rows are determined. Two rows are duplicates if all the\\n\`onConflict\` columns are equal.\\n"
                      }
                    }
                  ]
                },
                "isOptional": true,
                "comment": {
                  "shortText": "Named parameters\\n"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Perform an UPSERT on the table or view. Depending on the column(s) passed\\nto \`onConflict\`, \`.upsert()\` allows you to perform the equivalent of\\n\`.insert()\` if a row with the corresponding \`onConflict\` columns doesn't\\nexist, or if it does exist, perform an alternative action depending on\\n\`ignoreDuplicates\`.",
              "text": "By default, upserted rows are not returned. To return it, chain the call\\nwith \`.select()\`.\\n"
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestTransformBuilder.constructor": {
        "name": "@supabase/postgrest-js.PostgrestTransformBuilder.constructor",
        "params": [
          {
            "name": "builder"
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        }
      },
      "@supabase/postgrest-js.PostgrestTransformBuilder.abortSignal": {
        "name": "@supabase/postgrest-js.PostgrestTransformBuilder.abortSignal",
        "params": [
          {
            "name": "signal",
            "type": {
              "type": "nameOnly",
              "name": "AbortSignal"
            },
            "comment": {
              "shortText": "The AbortSignal to use for the fetch request\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Set the AbortSignal for the fetch request."
        }
      },
      "@supabase/postgrest-js.PostgrestTransformBuilder.csv": {
        "name": "@supabase/postgrest-js.PostgrestTransformBuilder.csv",
        "params": [],
        "ret": {
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        "comment": {
          "shortText": "Return \`data\` as a string in CSV format."
        }
      },
      "@supabase/postgrest-js.PostgrestTransformBuilder.explain": {
        "name": "@supabase/postgrest-js.PostgrestTransformBuilder.explain",
        "params": [
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "analyze",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "If \`true\`, the query will be executed and the\\nactual run time will be returned\\n"
                  }
                },
                {
                  "name": "buffers",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "If \`true\`, include information on buffer usage\\n"
                  }
                },
                {
                  "name": "format",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": "text"
                      },
                      {
                        "type": "literal",
                        "value": "json"
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The format of the output, can be \`\\"text\\"\` (default)\\nor \`\\"json\\"\`\\n"
                  }
                },
                {
                  "name": "settings",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "If \`true\`, include information on configuration\\nparameters that affect query planning\\n"
                  }
                },
                {
                  "name": "verbose",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "If \`true\`, the query identifier will be returned\\nand \`data\` will include the output columns of the query\\n"
                  }
                },
                {
                  "name": "wal",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "If \`true\`, include information on WAL record generation\\n"
                  }
                }
              ]
            },
            "comment": {
              "shortText": "Named parameters\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "union",
            "subTypes": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "array",
                "elemType": {
                  "type": "record",
                  "name": "Record",
                  "keyType": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "valueType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              }
            ]
          }
        },
        "comment": {
          "shortText": "Return \`data\` as the EXPLAIN plan for the query.",
          "text": "You need to enable the\\n[db_plan_enabled](https://supabase.com/docs/guides/database/debugging-performance#enabling-explain)\\nsetting before using this method.\\n"
        }
      },
      "@supabase/postgrest-js.PostgrestTransformBuilder.geojson": {
        "name": "@supabase/postgrest-js.PostgrestTransformBuilder.geojson",
        "params": [],
        "ret": {
          "type": {
            "type": "record",
            "name": "Record",
            "keyType": {
              "type": "intrinsic",
              "name": "string"
            },
            "valueType": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        },
        "comment": {
          "shortText": "Return \`data\` as an object in [GeoJSON](https://geojson.org) format."
        }
      },
      "@supabase/postgrest-js.PostgrestTransformBuilder.limit": {
        "name": "@supabase/postgrest-js.PostgrestTransformBuilder.limit",
        "params": [
          {
            "name": "count",
            "type": {
              "type": "intrinsic",
              "name": "number"
            },
            "comment": {
              "shortText": "The maximum number of rows to return"
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "foreignTable",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Deprecated, use \`options.referencedTable\`\\ninstead\\n"
                  }
                },
                {
                  "name": "referencedTable",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Set this to limit rows of referenced\\ntables instead of the parent table"
                  }
                }
              ]
            },
            "comment": {
              "shortText": "Named parameters"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Limit the query result by \`count\`."
        }
      },
      "@supabase/postgrest-js.PostgrestTransformBuilder.maybeSingle": {
        "name": "@supabase/postgrest-js.PostgrestTransformBuilder.maybeSingle",
        "params": [],
        "ret": {
          "type": {
            "type": "union",
            "subTypes": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "nameOnly",
                "name": "ResultOne"
              }
            ]
          }
        },
        "comment": {
          "shortText": "Return \`data\` as a single object instead of an array of objects.",
          "text": "Query result must be zero or one row (e.g. using \`.limit(1)\`), otherwise\\nthis returns an error.\\n"
        }
      },
      "@supabase/postgrest-js.PostgrestTransformBuilder.order": {
        "name": "@supabase/postgrest-js.PostgrestTransformBuilder.order",
        "params": [
          {
            "name": "column",
            "type": {
              "type": "nameOnly",
              "name": "ColumnName"
            },
            "comment": {
              "shortText": "The column to order by"
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "ascending",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "If \`true\`, the result will be in ascending order"
                  }
                },
                {
                  "name": "nullsFirst",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "If \`true\`, \`null\`s appear first. If \`false\`,\\n\`null\`s appear last."
                  }
                },
                {
                  "name": "referencedTable",
                  "type": {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Set this to order a referenced table by\\nits columns"
                  }
                }
              ]
            },
            "isOptional": true,
            "comment": {
              "shortText": "Named parameters"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Order the query result by \`column\`.",
          "text": "You can call this method multiple times to order by multiple columns.\\n\\nYou can order referenced tables, but it only affects the ordering of the\\nparent table if you use \`!inner\` in the query.\\n"
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The column to order by"
                }
              },
              {
                "name": "options",
                "type": {
                  "type": "object",
                  "properties": [
                    {
                      "name": "ascending",
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "If \`true\`, the result will be in ascending order"
                      }
                    },
                    {
                      "name": "nullsFirst",
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "If \`true\`, \`null\`s appear first. If \`false\`,\\n\`null\`s appear last."
                      }
                    },
                    {
                      "name": "referencedTable",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "Set this to order a referenced table by\\nits columns"
                      }
                    }
                  ]
                },
                "isOptional": true,
                "comment": {
                  "shortText": "Named parameters"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Order the query result by \`column\`.",
              "text": "You can call this method multiple times to order by multiple columns.\\n\\nYou can order referenced tables, but it only affects the ordering of the\\nparent table if you use \`!inner\` in the query.\\n"
            }
          },
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "nameOnly",
                  "name": "ColumnName"
                },
                "comment": {
                  "shortText": "The column to order by"
                }
              },
              {
                "name": "options",
                "type": {
                  "type": "object",
                  "properties": [
                    {
                      "name": "ascending",
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "isOptional": true
                    },
                    {
                      "name": "foreignTable",
                      "type": {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      "isOptional": true
                    },
                    {
                      "name": "nullsFirst",
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "isOptional": true
                    }
                  ]
                },
                "isOptional": true,
                "comment": {
                  "shortText": "Named parameters"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Order the query result by \`column\`.",
              "text": "You can call this method multiple times to order by multiple columns.\\n\\nYou can order referenced tables, but it only affects the ordering of the\\nparent table if you use \`!inner\` in the query.\\n",
              "tags": [
                {
                  "tag": "deprecated",
                  "text": "Use \`options.referencedTable\` instead of \`options.foreignTable\`\\n"
                }
              ]
            }
          },
          {
            "params": [
              {
                "name": "column",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "comment": {
                  "shortText": "The column to order by"
                }
              },
              {
                "name": "options",
                "type": {
                  "type": "object",
                  "properties": [
                    {
                      "name": "ascending",
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "isOptional": true
                    },
                    {
                      "name": "foreignTable",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "isOptional": true
                    },
                    {
                      "name": "nullsFirst",
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "isOptional": true
                    }
                  ]
                },
                "isOptional": true,
                "comment": {
                  "shortText": "Named parameters"
                }
              }
            ],
            "ret": {
              "type": {
                "type": "nameOnly",
                "name": "Schema"
              }
            },
            "comment": {
              "shortText": "Order the query result by \`column\`.",
              "text": "You can call this method multiple times to order by multiple columns.\\n\\nYou can order referenced tables, but it only affects the ordering of the\\nparent table if you use \`!inner\` in the query.\\n",
              "tags": [
                {
                  "tag": "deprecated",
                  "text": "Use \`options.referencedTable\` instead of \`options.foreignTable\`\\n"
                }
              ]
            }
          }
        ]
      },
      "@supabase/postgrest-js.PostgrestTransformBuilder.range": {
        "name": "@supabase/postgrest-js.PostgrestTransformBuilder.range",
        "params": [
          {
            "name": "from",
            "type": {
              "type": "intrinsic",
              "name": "number"
            },
            "comment": {
              "shortText": "The starting index from which to limit the result"
            }
          },
          {
            "name": "to",
            "type": {
              "type": "intrinsic",
              "name": "number"
            },
            "comment": {
              "shortText": "The last index to which to limit the result"
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "foreignTable",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Deprecated, use \`options.referencedTable\`\\ninstead\\n"
                  }
                },
                {
                  "name": "referencedTable",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Set this to limit rows of referenced\\ntables instead of the parent table"
                  }
                }
              ]
            },
            "comment": {
              "shortText": "Named parameters"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Limit the query result by starting at an offset (\`from\`) and ending at the offset (\`from + to\`).\\nOnly records within this range are returned.\\nThis respects the query order and if there is no order clause the range could behave unexpectedly.\\nThe \`from\` and \`to\` values are 0-based and inclusive: \`range(1, 3)\` will include the second, third\\nand fourth rows of the query."
        }
      },
      "@supabase/postgrest-js.PostgrestTransformBuilder.returns": {
        "name": "@supabase/postgrest-js.PostgrestTransformBuilder.returns",
        "params": [],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Override the type of the returned \`data\`."
        }
      },
      "@supabase/postgrest-js.PostgrestTransformBuilder.rollback": {
        "name": "@supabase/postgrest-js.PostgrestTransformBuilder.rollback",
        "params": [],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Rollback the query.",
          "text": "\`data\` will still be returned, but the query is not committed.\\n"
        }
      },
      "@supabase/postgrest-js.PostgrestTransformBuilder.select": {
        "name": "@supabase/postgrest-js.PostgrestTransformBuilder.select",
        "params": [
          {
            "name": "columns",
            "type": {
              "type": "nameOnly",
              "name": "Query"
            },
            "isOptional": true,
            "comment": {
              "shortText": "The columns to retrieve, separated by commas\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "Perform a SELECT on the query result.",
          "text": "By default, \`.insert()\`, \`.update()\`, \`.upsert()\`, and \`.delete()\` do not\\nreturn modified rows. By calling this method, modified rows are returned in\\n\`data\`.\\n"
        }
      },
      "@supabase/postgrest-js.PostgrestTransformBuilder.single": {
        "name": "@supabase/postgrest-js.PostgrestTransformBuilder.single",
        "params": [],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "ResultOne"
          }
        },
        "comment": {
          "shortText": "Return \`data\` as a single object instead of an array of objects.",
          "text": "Query result must be one row (e.g. using \`.limit(1)\`), otherwise this\\nreturns an error.\\n"
        }
      },
      "@supabase/postgrest-js.PostgrestTransformBuilder.then": {
        "name": "@supabase/postgrest-js.PostgrestTransformBuilder.then",
        "params": [
          {
            "name": "onfulfilled",
            "type": {
              "type": "union",
              "subTypes": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "function",
                  "params": [
                    {
                      "name": "value",
                      "type": {
                        "type": "union",
                        "name": "PostgrestSingleResponse",
                        "subTypes": [
                          {
                            "type": "object",
                            "name": "PostgrestResponseSuccess",
                            "properties": [
                              {
                                "name": "count",
                                "type": {
                                  "type": "union",
                                  "subTypes": [
                                    {
                                      "type": "literal",
                                      "value": null
                                    },
                                    {
                                      "type": "intrinsic",
                                      "name": "number"
                                    }
                                  ]
                                }
                              },
                              {
                                "name": "data",
                                "type": {
                                  "type": "nameOnly",
                                  "name": "T"
                                }
                              },
                              {
                                "name": "error",
                                "type": {
                                  "type": "literal",
                                  "value": null
                                }
                              },
                              {
                                "name": "status",
                                "type": {
                                  "type": "intrinsic",
                                  "name": "number"
                                }
                              },
                              {
                                "name": "statusText",
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            ]
                          },
                          {
                            "type": "object",
                            "name": "PostgrestResponseFailure",
                            "properties": [
                              {
                                "name": "count",
                                "type": {
                                  "type": "literal",
                                  "value": null
                                }
                              },
                              {
                                "name": "data",
                                "type": {
                                  "type": "literal",
                                  "value": null
                                }
                              },
                              {
                                "name": "error",
                                "type": {
                                  "name": "PostgrestError",
                                  "type": "object",
                                  "properties": [
                                    {
                                      "name": "code",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "details",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "hint",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "name": "message",
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "name": "status",
                                "type": {
                                  "type": "intrinsic",
                                  "name": "number"
                                }
                              },
                              {
                                "name": "statusText",
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "ret": {
                    "type": {
                      "type": "union",
                      "subTypes": [
                        {
                          "type": "nameOnly",
                          "name": "TResult1"
                        },
                        {
                          "type": "nameOnly",
                          "name": "PromiseLike"
                        }
                      ]
                    }
                  }
                }
              ]
            },
            "isOptional": true
          },
          {
            "name": "onrejected",
            "type": {
              "type": "union",
              "subTypes": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "function",
                  "params": [
                    {
                      "name": "reason",
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "ret": {
                    "type": {
                      "type": "union",
                      "subTypes": [
                        {
                          "type": "nameOnly",
                          "name": "TResult2"
                        },
                        {
                          "type": "nameOnly",
                          "name": "PromiseLike"
                        }
                      ]
                    }
                  }
                }
              ]
            },
            "isOptional": true
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "PromiseLike"
          }
        }
      },
      "@supabase/postgrest-js.PostgrestTransformBuilder.throwOnError": {
        "name": "@supabase/postgrest-js.PostgrestTransformBuilder.throwOnError",
        "params": [],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "Schema"
          }
        },
        "comment": {
          "shortText": "If there's an error with the query, throwOnError will reject the promise by\\nthrowing the error instead of returning it as part of a successful response.",
          "text": "{@link https://github.com/supabase/supabase-js/issues/92}\\n"
        }
      }
    }
  },
  {
    "name": "@supabase/realtime-js",
    "methods": {
      "@supabase/realtime-js.RealtimeChannel.constructor": {
        "name": "@supabase/realtime-js.RealtimeChannel.constructor",
        "params": [
          {
            "name": "topic",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "name": "params",
            "type": {
              "name": "RealtimeChannelOptions",
              "type": "object",
              "properties": [
                {
                  "name": "config",
                  "type": {
                    "type": "object",
                    "properties": [
                      {
                        "name": "broadcast",
                        "type": {
                          "type": "object",
                          "properties": [
                            {
                              "name": "ack",
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              "isOptional": true
                            },
                            {
                              "name": "self",
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              "isOptional": true
                            }
                          ]
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "self option enables client to receive message it broadcast\\nack option instructs server to acknowledge that broadcast message was received"
                        }
                      },
                      {
                        "name": "presence",
                        "type": {
                          "type": "object",
                          "properties": [
                            {
                              "name": "key",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              "isOptional": true
                            }
                          ]
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "key option is used to track presence payload across clients"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "name": "socket"
          }
        ]
      },
      "@supabase/realtime-js.RealtimeChannel._fetchWithTimeout": {
        "name": "@supabase/realtime-js.RealtimeChannel._fetchWithTimeout",
        "params": [
          {
            "name": "url",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "name": "options",
            "type": {
              "type": "index signature",
              "keyType": {
                "type": "intrinsic",
                "name": "string"
              },
              "valueType": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          },
          {
            "name": "timeout",
            "type": {
              "type": "intrinsic",
              "name": "number"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "nameOnly",
              "name": "Response"
            }
          }
        }
      },
      "@supabase/realtime-js.RealtimeChannel.on": {
        "name": "@supabase/realtime-js.RealtimeChannel.on",
        "params": [
          {
            "name": "type",
            "type": {
              "type": "literal",
              "value": "presence"
            }
          },
          {
            "name": "filter",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "event",
                  "type": {
                    "type": "literal",
                    "value": "sync"
                  }
                }
              ]
            }
          },
          {
            "name": "callback",
            "type": {
              "type": "function",
              "params": [],
              "ret": {
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            }
          }
        ],
        "comment": {
          "shortText": "Creates an event handler that listens to changes."
        },
        "altSignatures": [
          {
            "params": [
              {
                "name": "type",
                "type": {
                  "type": "literal",
                  "value": "presence"
                }
              },
              {
                "name": "filter",
                "type": {
                  "type": "object",
                  "properties": [
                    {
                      "name": "event",
                      "type": {
                        "type": "literal",
                        "value": "join"
                      }
                    }
                  ]
                }
              },
              {
                "name": "callback",
                "type": {
                  "type": "function",
                  "params": [
                    {
                      "name": "payload",
                      "type": {
                        "name": "RealtimePresenceJoinPayload",
                        "type": "object",
                        "properties": [
                          {
                            "name": "currentPresences",
                            "type": {
                              "type": "array",
                              "elemType": {
                                "type": "nameOnly",
                                "name": "Presence"
                              }
                            }
                          },
                          {
                            "name": "event"
                          },
                          {
                            "name": "key",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "name": "newPresences",
                            "type": {
                              "type": "array",
                              "elemType": {
                                "type": "nameOnly",
                                "name": "Presence"
                              }
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "ret": {
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                }
              }
            ]
          },
          {
            "params": [
              {
                "name": "type",
                "type": {
                  "type": "literal",
                  "value": "presence"
                }
              },
              {
                "name": "filter",
                "type": {
                  "type": "object",
                  "properties": [
                    {
                      "name": "event",
                      "type": {
                        "type": "literal",
                        "value": "leave"
                      }
                    }
                  ]
                }
              },
              {
                "name": "callback",
                "type": {
                  "type": "function",
                  "params": [
                    {
                      "name": "payload",
                      "type": {
                        "name": "RealtimePresenceLeavePayload",
                        "type": "object",
                        "properties": [
                          {
                            "name": "currentPresences",
                            "type": {
                              "type": "array",
                              "elemType": {
                                "type": "nameOnly",
                                "name": "Presence"
                              }
                            }
                          },
                          {
                            "name": "event"
                          },
                          {
                            "name": "key",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "name": "leftPresences",
                            "type": {
                              "type": "array",
                              "elemType": {
                                "type": "nameOnly",
                                "name": "Presence"
                              }
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "ret": {
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                }
              }
            ]
          },
          {
            "params": [
              {
                "name": "type",
                "type": {
                  "type": "literal",
                  "value": "postgres_changes"
                }
              },
              {
                "name": "filter",
                "type": {
                  "name": "RealtimePostgresChangesFilter",
                  "type": "object",
                  "properties": [
                    {
                      "name": "event",
                      "type": {
                        "type": "nameOnly",
                        "name": "T"
                      },
                      "comment": {
                        "shortText": "The type of database change to listen to."
                      }
                    },
                    {
                      "name": "filter",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "Receive database changes when filter is matched."
                      }
                    },
                    {
                      "name": "schema",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "The database schema to listen to."
                      }
                    },
                    {
                      "name": "table",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "The database table to listen to."
                      }
                    }
                  ]
                }
              },
              {
                "name": "callback",
                "type": {
                  "type": "function",
                  "params": [
                    {
                      "name": "payload",
                      "type": {
                        "type": "union",
                        "name": "RealtimePostgresChangesPayload",
                        "subTypes": [
                          null,
                          null,
                          null
                        ]
                      }
                    }
                  ],
                  "ret": {
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                }
              }
            ]
          },
          {
            "params": [
              {
                "name": "type",
                "type": {
                  "type": "literal",
                  "value": "postgres_changes"
                }
              },
              {
                "name": "filter",
                "type": {
                  "name": "RealtimePostgresChangesFilter",
                  "type": "object",
                  "properties": [
                    {
                      "name": "event",
                      "type": {
                        "type": "nameOnly",
                        "name": "T"
                      },
                      "comment": {
                        "shortText": "The type of database change to listen to."
                      }
                    },
                    {
                      "name": "filter",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "Receive database changes when filter is matched."
                      }
                    },
                    {
                      "name": "schema",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "The database schema to listen to."
                      }
                    },
                    {
                      "name": "table",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "The database table to listen to."
                      }
                    }
                  ]
                }
              },
              {
                "name": "callback",
                "type": {
                  "type": "function",
                  "params": [
                    {
                      "name": "payload",
                      "type": {
                        "type": "nameOnly",
                        "name": "RealtimePostgresInsertPayload"
                      }
                    }
                  ],
                  "ret": {
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                }
              }
            ]
          },
          {
            "params": [
              {
                "name": "type",
                "type": {
                  "type": "literal",
                  "value": "postgres_changes"
                }
              },
              {
                "name": "filter",
                "type": {
                  "name": "RealtimePostgresChangesFilter",
                  "type": "object",
                  "properties": [
                    {
                      "name": "event",
                      "type": {
                        "type": "nameOnly",
                        "name": "T"
                      },
                      "comment": {
                        "shortText": "The type of database change to listen to."
                      }
                    },
                    {
                      "name": "filter",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "Receive database changes when filter is matched."
                      }
                    },
                    {
                      "name": "schema",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "The database schema to listen to."
                      }
                    },
                    {
                      "name": "table",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "The database table to listen to."
                      }
                    }
                  ]
                }
              },
              {
                "name": "callback",
                "type": {
                  "type": "function",
                  "params": [
                    {
                      "name": "payload",
                      "type": {
                        "type": "nameOnly",
                        "name": "RealtimePostgresUpdatePayload"
                      }
                    }
                  ],
                  "ret": {
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                }
              }
            ]
          },
          {
            "params": [
              {
                "name": "type",
                "type": {
                  "type": "literal",
                  "value": "postgres_changes"
                }
              },
              {
                "name": "filter",
                "type": {
                  "name": "RealtimePostgresChangesFilter",
                  "type": "object",
                  "properties": [
                    {
                      "name": "event",
                      "type": {
                        "type": "nameOnly",
                        "name": "T"
                      },
                      "comment": {
                        "shortText": "The type of database change to listen to."
                      }
                    },
                    {
                      "name": "filter",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "Receive database changes when filter is matched."
                      }
                    },
                    {
                      "name": "schema",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "comment": {
                        "shortText": "The database schema to listen to."
                      }
                    },
                    {
                      "name": "table",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "isOptional": true,
                      "comment": {
                        "shortText": "The database table to listen to."
                      }
                    }
                  ]
                }
              },
              {
                "name": "callback",
                "type": {
                  "type": "function",
                  "params": [
                    {
                      "name": "payload",
                      "type": {
                        "type": "nameOnly",
                        "name": "RealtimePostgresDeletePayload"
                      }
                    }
                  ],
                  "ret": {
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                }
              }
            ]
          },
          {
            "params": [
              {
                "name": "type",
                "type": {
                  "type": "literal",
                  "value": "broadcast"
                },
                "comment": {
                  "shortText": "One of \\"broadcast\\", \\"presence\\", or \\"postgres_changes\\"."
                }
              },
              {
                "name": "filter",
                "type": {
                  "type": "object",
                  "properties": [
                    {
                      "name": "event",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ]
                },
                "comment": {
                  "shortText": "Custom object specific to the Realtime feature detailing which payloads to receive."
                }
              },
              {
                "name": "callback",
                "type": {
                  "type": "function",
                  "params": [
                    {
                      "name": "payload",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "event",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "name": "type",
                            "type": {
                              "type": "literal",
                              "value": "broadcast"
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "ret": {
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                },
                "comment": {
                  "shortText": "Function to be invoked when event handler is triggered.\\n"
                }
              }
            ],
            "comment": {
              "shortText": "The following is placed here to display on supabase.com/docs/reference/javascript/subscribe."
            }
          },
          {
            "params": [
              {
                "name": "type",
                "type": {
                  "type": "literal",
                  "value": "broadcast"
                }
              },
              {
                "name": "filter",
                "type": {
                  "type": "object",
                  "properties": [
                    {
                      "name": "event",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ]
                }
              },
              {
                "name": "callback",
                "type": {
                  "type": "function",
                  "params": [
                    {
                      "name": "payload",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "event",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "name": "payload",
                            "type": {
                              "type": "nameOnly",
                              "name": "T"
                            }
                          },
                          {
                            "name": "type",
                            "type": {
                              "type": "literal",
                              "value": "broadcast"
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "ret": {
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                }
              }
            ]
          }
        ]
      },
      "@supabase/realtime-js.RealtimeChannel.presenceState": {
        "name": "@supabase/realtime-js.RealtimeChannel.presenceState",
        "params": [],
        "ret": {
          "type": {
            "name": "RealtimePresenceState",
            "type": "index signature",
            "keyType": {
              "type": "intrinsic",
              "name": "string"
            },
            "valueType": {
              "type": "array",
              "elemType": {
                "type": "nameOnly",
                "name": "Presence"
              }
            }
          }
        }
      },
      "@supabase/realtime-js.RealtimeChannel.send": {
        "name": "@supabase/realtime-js.RealtimeChannel.send",
        "params": [
          {
            "name": "args",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "event",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "comment": {
                    "shortText": "The name of the event being sent"
                  }
                },
                {
                  "name": "payload",
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Payload to be sent"
                  }
                },
                {
                  "name": "type",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": "presence"
                      },
                      {
                        "type": "literal",
                        "value": "broadcast"
                      },
                      {
                        "type": "literal",
                        "value": "postgres_changes"
                      }
                    ]
                  },
                  "comment": {
                    "shortText": "The type of event to send"
                  }
                }
              ]
            },
            "comment": {
              "shortText": "Arguments to send to channel"
            }
          },
          {
            "name": "opts",
            "type": {
              "type": "index signature",
              "keyType": {
                "type": "intrinsic",
                "name": "string"
              },
              "valueType": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            "comment": {
              "shortText": "Options to be used during the send process\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "RealtimeChannelSendResponse",
              "subTypes": [
                {
                  "type": "literal",
                  "value": "ok"
                },
                {
                  "type": "literal",
                  "value": "timed out"
                },
                {
                  "type": "literal",
                  "value": "error"
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Sends a message into the channel."
        }
      },
      "@supabase/realtime-js.RealtimeChannel.subscribe": {
        "name": "@supabase/realtime-js.RealtimeChannel.subscribe",
        "params": [
          {
            "name": "callback",
            "type": {
              "type": "function",
              "params": [
                {
                  "name": "status",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": "SUBSCRIBED"
                      },
                      {
                        "type": "literal",
                        "value": "TIMED_OUT"
                      },
                      {
                        "type": "literal",
                        "value": "CLOSED"
                      },
                      {
                        "type": "literal",
                        "value": "CHANNEL_ERROR"
                      }
                    ]
                  }
                },
                {
                  "name": "err",
                  "type": {
                    "type": "nameOnly",
                    "name": "Error"
                  },
                  "isOptional": true
                }
              ],
              "ret": {
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            },
            "isOptional": true
          },
          {
            "name": "timeout",
            "type": {
              "type": "intrinsic",
              "name": "number"
            }
          }
        ],
        "comment": {
          "shortText": "Subscribe registers your client with the server"
        }
      },
      "@supabase/realtime-js.RealtimeChannel.track": {
        "name": "@supabase/realtime-js.RealtimeChannel.track",
        "params": [
          {
            "name": "payload",
            "type": {
              "type": "index signature",
              "keyType": {
                "type": "intrinsic",
                "name": "string"
              },
              "valueType": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          },
          {
            "name": "opts",
            "type": {
              "type": "index signature",
              "keyType": {
                "type": "intrinsic",
                "name": "string"
              },
              "valueType": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "RealtimeChannelSendResponse",
              "subTypes": [
                {
                  "type": "literal",
                  "value": "ok"
                },
                {
                  "type": "literal",
                  "value": "timed out"
                },
                {
                  "type": "literal",
                  "value": "error"
                }
              ]
            }
          }
        }
      },
      "@supabase/realtime-js.RealtimeChannel.unsubscribe": {
        "name": "@supabase/realtime-js.RealtimeChannel.unsubscribe",
        "params": [
          {
            "name": "timeout",
            "type": {
              "type": "intrinsic",
              "name": "number"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "literal",
                  "value": "error"
                },
                {
                  "type": "literal",
                  "value": "ok"
                },
                {
                  "type": "literal",
                  "value": "timed out"
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Leaves the channel.",
          "text": "Unsubscribes from server events, and instructs channel to terminate on server.\\nTriggers onClose() hooks.\\n\\nTo receive leave acknowledgements, use the a \`receive\` hook to bind to the server ack, ie:\\nchannel.unsubscribe().receive(\\"ok\\", () => alert(\\"left!\\") )\\n"
        }
      },
      "@supabase/realtime-js.RealtimeChannel.untrack": {
        "name": "@supabase/realtime-js.RealtimeChannel.untrack",
        "params": [
          {
            "name": "opts",
            "type": {
              "type": "index signature",
              "keyType": {
                "type": "intrinsic",
                "name": "string"
              },
              "valueType": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "RealtimeChannelSendResponse",
              "subTypes": [
                {
                  "type": "literal",
                  "value": "ok"
                },
                {
                  "type": "literal",
                  "value": "timed out"
                },
                {
                  "type": "literal",
                  "value": "error"
                }
              ]
            }
          }
        }
      },
      "@supabase/realtime-js.RealtimeChannel.updateJoinPayload": {
        "name": "@supabase/realtime-js.RealtimeChannel.updateJoinPayload",
        "params": [
          {
            "name": "payload",
            "type": {
              "type": "index signature",
              "keyType": {
                "type": "intrinsic",
                "name": "string"
              },
              "valueType": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          }
        ],
        "ret": {
          "type": {
            "type": "intrinsic",
            "name": "void"
          }
        }
      },
      "@supabase/realtime-js.RealtimeClient.constructor": {
        "name": "@supabase/realtime-js.RealtimeClient.constructor",
        "params": [
          {
            "name": "endPoint",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The string WebSocket endpoint, ie, \\"ws://example.com/socket\\", \\"wss://example.com\\", \\"/socket\\" (inherited host & protocol)"
            }
          },
          {
            "name": "options",
            "type": {
              "name": "RealtimeClientOptions",
              "type": "object",
              "properties": [
                {
                  "name": "decode",
                  "type": {
                    "type": "nameOnly",
                    "name": "Function"
                  },
                  "isOptional": true
                },
                {
                  "name": "encode",
                  "type": {
                    "type": "nameOnly",
                    "name": "Function"
                  },
                  "isOptional": true
                },
                {
                  "name": "fetch",
                  "type": {
                    "type": "nameOnly",
                    "name": "Fetch"
                  },
                  "isOptional": true
                },
                {
                  "name": "headers",
                  "type": {
                    "type": "index signature",
                    "keyType": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "valueType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  "isOptional": true
                },
                {
                  "name": "heartbeatIntervalMs",
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  },
                  "isOptional": true
                },
                {
                  "name": "log_level",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": "info"
                      },
                      {
                        "type": "literal",
                        "value": "debug"
                      },
                      {
                        "type": "literal",
                        "value": "warn"
                      },
                      {
                        "type": "literal",
                        "value": "error"
                      }
                    ]
                  },
                  "isOptional": true
                },
                {
                  "name": "logger",
                  "type": {
                    "type": "nameOnly",
                    "name": "Function"
                  },
                  "isOptional": true
                },
                {
                  "name": "params",
                  "type": {
                    "type": "index signature",
                    "keyType": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "valueType": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  },
                  "isOptional": true
                },
                {
                  "name": "reconnectAfterMs",
                  "type": {
                    "type": "nameOnly",
                    "name": "Function"
                  },
                  "isOptional": true
                },
                {
                  "name": "timeout",
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  },
                  "isOptional": true
                },
                {
                  "name": "transport",
                  "type": {
                    "type": "nameOnly",
                    "name": "WebSocketLikeConstructor"
                  },
                  "isOptional": true
                }
              ]
            },
            "isOptional": true
          }
        ],
        "comment": {
          "shortText": "Initializes the Socket."
        }
      },
      "@supabase/realtime-js.RealtimeClient.channel": {
        "name": "@supabase/realtime-js.RealtimeClient.channel",
        "params": [
          {
            "name": "topic",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "name": "params",
            "type": {
              "name": "RealtimeChannelOptions",
              "type": "object",
              "properties": [
                {
                  "name": "config",
                  "type": {
                    "type": "object",
                    "properties": [
                      {
                        "name": "broadcast",
                        "type": {
                          "type": "object",
                          "properties": [
                            {
                              "name": "ack",
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              "isOptional": true
                            },
                            {
                              "name": "self",
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              "isOptional": true
                            }
                          ]
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "self option enables client to receive message it broadcast\\nack option instructs server to acknowledge that broadcast message was received"
                        }
                      },
                      {
                        "name": "presence",
                        "type": {
                          "type": "object",
                          "properties": [
                            {
                              "name": "key",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              "isOptional": true
                            }
                          ]
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "key option is used to track presence payload across clients"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      },
      "@supabase/realtime-js.RealtimeClient.connect": {
        "name": "@supabase/realtime-js.RealtimeClient.connect",
        "params": [],
        "ret": {
          "type": {
            "type": "intrinsic",
            "name": "void"
          }
        },
        "comment": {
          "shortText": "Connects the socket, unless already connected."
        }
      },
      "@supabase/realtime-js.RealtimeClient.connectionState": {
        "name": "@supabase/realtime-js.RealtimeClient.connectionState",
        "params": [],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "CONNECTION_STATE"
          }
        },
        "comment": {
          "shortText": "Returns the current state of the socket."
        }
      },
      "@supabase/realtime-js.RealtimeClient.disconnect": {
        "name": "@supabase/realtime-js.RealtimeClient.disconnect",
        "params": [
          {
            "name": "code",
            "type": {
              "type": "intrinsic",
              "name": "number"
            },
            "isOptional": true,
            "comment": {
              "shortText": "A numeric status code to send on disconnect."
            }
          },
          {
            "name": "reason",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "isOptional": true,
            "comment": {
              "shortText": "A custom reason for the disconnect.\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "intrinsic",
            "name": "void"
          }
        },
        "comment": {
          "shortText": "Disconnects the socket."
        }
      },
      "@supabase/realtime-js.RealtimeClient.getChannels": {
        "name": "@supabase/realtime-js.RealtimeClient.getChannels",
        "params": [],
        "ret": {
          "type": {
            "type": "array"
          }
        },
        "comment": {
          "shortText": "Returns all created channels"
        }
      },
      "@supabase/realtime-js.RealtimeClient.isConnected": {
        "name": "@supabase/realtime-js.RealtimeClient.isConnected",
        "params": [],
        "ret": {
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        "comment": {
          "shortText": "Returns \`true\` is the connection is open."
        }
      },
      "@supabase/realtime-js.RealtimeClient.log": {
        "name": "@supabase/realtime-js.RealtimeClient.log",
        "params": [
          {
            "name": "kind",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "name": "msg",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "name": "data",
            "type": {
              "type": "intrinsic",
              "name": "any"
            },
            "isOptional": true
          }
        ],
        "ret": {
          "type": {
            "type": "intrinsic",
            "name": "void"
          }
        },
        "comment": {
          "shortText": "Logs the message.",
          "text": "For customized logging, \`this.logger\` can be overridden.\\n"
        }
      },
      "@supabase/realtime-js.RealtimeClient.push": {
        "name": "@supabase/realtime-js.RealtimeClient.push",
        "params": [
          {
            "name": "data",
            "type": {
              "name": "RealtimeMessage",
              "type": "object",
              "properties": [
                {
                  "name": "event",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "name": "join_ref",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true
                },
                {
                  "name": "payload",
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "name": "ref",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "name": "topic",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "intrinsic",
            "name": "void"
          }
        },
        "comment": {
          "shortText": "Push out a message if the socket is connected.",
          "text": "If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.\\n"
        }
      },
      "@supabase/realtime-js.RealtimeClient.removeAllChannels": {
        "name": "@supabase/realtime-js.RealtimeClient.removeAllChannels",
        "params": [],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "array",
              "elemType": {
                "type": "union",
                "name": "RealtimeRemoveChannelResponse",
                "subTypes": [
                  {
                    "type": "literal",
                    "value": "ok"
                  },
                  {
                    "type": "literal",
                    "value": "timed out"
                  },
                  {
                    "type": "literal",
                    "value": "error"
                  }
                ]
              }
            }
          }
        },
        "comment": {
          "shortText": "Unsubscribes and removes all channels"
        }
      },
      "@supabase/realtime-js.RealtimeClient.removeChannel": {
        "name": "@supabase/realtime-js.RealtimeClient.removeChannel",
        "params": [
          {
            "name": "channel",
            "comment": {
              "shortText": "A RealtimeChannel instance\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "RealtimeRemoveChannelResponse",
              "subTypes": [
                {
                  "type": "literal",
                  "value": "ok"
                },
                {
                  "type": "literal",
                  "value": "timed out"
                },
                {
                  "type": "literal",
                  "value": "error"
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Unsubscribes and removes a single channel"
        }
      },
      "@supabase/realtime-js.RealtimeClient.setAuth": {
        "name": "@supabase/realtime-js.RealtimeClient.setAuth",
        "params": [
          {
            "name": "token",
            "type": {
              "type": "union",
              "subTypes": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "intrinsic",
                  "name": "string"
                }
              ]
            },
            "comment": {
              "shortText": "A JWT string.\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "intrinsic",
            "name": "void"
          }
        },
        "comment": {
          "shortText": "Sets the JWT access token used for channel subscription authorization and Realtime RLS."
        }
      },
      "@supabase/realtime-js.RealtimePresence.constructor": {
        "name": "@supabase/realtime-js.RealtimePresence.constructor",
        "params": [
          {
            "name": "channel",
            "comment": {
              "shortText": "The RealtimeChannel"
            }
          },
          {
            "name": "opts",
            "type": {
              "type": "nameOnly",
              "name": "@types/phoenix.PresenceOpts"
            },
            "isOptional": true,
            "comment": {
              "shortText": "The options,\\n       for example \`{events: {state: 'state', diff: 'diff'}}\`\\n"
            }
          }
        ],
        "comment": {
          "shortText": "Initializes the Presence."
        }
      }
    }
  },
  {
    "name": "@supabase/storage-js",
    "methods": {
      "@supabase/storage-js.index.StorageApiError.constructor": {
        "name": "@supabase/storage-js.index.StorageApiError.constructor",
        "params": [
          {
            "name": "message",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "name": "status",
            "type": {
              "type": "intrinsic",
              "name": "number"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "StorageApiError"
          }
        }
      },
      "@supabase/storage-js.index.StorageApiError.toJSON": {
        "name": "@supabase/storage-js.index.StorageApiError.toJSON",
        "params": [],
        "ret": {
          "type": {
            "type": "object",
            "properties": [
              {
                "name": "message",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "name": "name",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "name": "status",
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                }
              }
            ]
          }
        }
      },
      "@supabase/storage-js.index.StorageClient.constructor": {
        "name": "@supabase/storage-js.index.StorageClient.constructor",
        "params": [
          {
            "name": "url",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "name": "headers",
            "type": {
              "type": "index signature",
              "keyType": {
                "type": "intrinsic",
                "name": "string"
              },
              "valueType": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          },
          {
            "name": "fetch",
            "type": {
              "type": "function",
              "params": [
                {
                  "name": "input",
                  "type": {
                    "type": "nameOnly",
                    "name": "RequestInfo"
                  }
                },
                {
                  "name": "init",
                  "type": {
                    "type": "nameOnly",
                    "name": "RequestInit"
                  },
                  "isOptional": true
                }
              ],
              "ret": {
                "type": {
                  "type": "promise",
                  "name": "Promise",
                  "awaited": {
                    "type": "nameOnly",
                    "name": "Response"
                  }
                }
              }
            },
            "isOptional": true
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "StorageClient"
          }
        }
      },
      "@supabase/storage-js.index.StorageClient.createBucket": {
        "name": "@supabase/storage-js.index.StorageClient.createBucket",
        "params": [
          {
            "name": "id",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "A unique identifier for the bucket you are creating."
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "allowedMimeTypes",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "array",
                        "elemType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "specifies the allowed mime types that this bucket can accept during upload.\\nThe default value is null, which allows files with all mime types to be uploaded.\\nEach mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png."
                  }
                },
                {
                  "name": "fileSizeLimit",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "specifies the max file size in bytes that can be uploaded to this bucket.\\nThe global file size limit takes precedence over this value.\\nThe default value is null, which doesn't set a per bucket file size limit."
                  }
                },
                {
                  "name": "public",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "comment": {
                    "shortText": "The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private."
                  }
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "name": "name",
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "StorageError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Creates a new Storage bucket",
          "returns": "newly created bucket id\\n"
        }
      },
      "@supabase/storage-js.index.StorageClient.deleteBucket": {
        "name": "@supabase/storage-js.index.StorageClient.deleteBucket",
        "params": [
          {
            "name": "id",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The unique identifier of the bucket you would like to delete.\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "message",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "StorageError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\\nYou must first \`empty()\` the bucket."
        }
      },
      "@supabase/storage-js.index.StorageClient.emptyBucket": {
        "name": "@supabase/storage-js.index.StorageClient.emptyBucket",
        "params": [
          {
            "name": "id",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The unique identifier of the bucket you would like to empty.\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "message",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "StorageError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Removes all objects inside a single bucket."
        }
      },
      "@supabase/storage-js.index.StorageClient.from": {
        "name": "@supabase/storage-js.index.StorageClient.from",
        "params": [
          {
            "name": "id",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The bucket id to operate on.\\n"
            }
          }
        ],
        "comment": {
          "shortText": "Perform file operation in a bucket."
        }
      },
      "@supabase/storage-js.index.StorageClient.getBucket": {
        "name": "@supabase/storage-js.index.StorageClient.getBucket",
        "params": [
          {
            "name": "id",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The unique identifier of the bucket you would like to retrieve.\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "name": "Bucket",
                        "properties": [
                          {
                            "name": "allowed_mime_types",
                            "type": {
                              "type": "array",
                              "elemType": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            "isOptional": true
                          },
                          {
                            "name": "created_at",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "name": "file_size_limit",
                            "type": {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            "isOptional": true
                          },
                          {
                            "name": "id",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "name": "name",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "name": "owner",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "name": "public",
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "name": "updated_at",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "StorageError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Retrieves the details of an existing Storage bucket."
        }
      },
      "@supabase/storage-js.index.StorageClient.listBuckets": {
        "name": "@supabase/storage-js.index.StorageClient.listBuckets",
        "params": [],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "array",
                        "elemType": {
                          "type": "object",
                          "name": "Bucket",
                          "properties": [
                            {
                              "name": "allowed_mime_types",
                              "type": {
                                "type": "array",
                                "elemType": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              },
                              "isOptional": true
                            },
                            {
                              "name": "created_at",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "name": "file_size_limit",
                              "type": {
                                "type": "intrinsic",
                                "name": "number"
                              },
                              "isOptional": true
                            },
                            {
                              "name": "id",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "name": "name",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "name": "owner",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "name": "public",
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "name": "updated_at",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "StorageError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Retrieves the details of all Storage buckets within an existing project."
        }
      },
      "@supabase/storage-js.index.StorageClient.updateBucket": {
        "name": "@supabase/storage-js.index.StorageClient.updateBucket",
        "params": [
          {
            "name": "id",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "A unique identifier for the bucket you are updating."
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "allowedMimeTypes",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "array",
                        "elemType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "specifies the allowed mime types that this bucket can accept during upload.\\nThe default value is null, which allows files with all mime types to be uploaded.\\nEach mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\\n"
                  }
                },
                {
                  "name": "fileSizeLimit",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "specifies the max file size in bytes that can be uploaded to this bucket.\\nThe global file size limit takes precedence over this value.\\nThe default value is null, which doesn't set a per bucket file size limit."
                  }
                },
                {
                  "name": "public",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "comment": {
                    "shortText": "The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations."
                  }
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "message",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "StorageError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Updates a Storage bucket"
        }
      },
      "@supabase/storage-js.index.StorageError.constructor": {
        "name": "@supabase/storage-js.index.StorageError.constructor",
        "params": [
          {
            "name": "message",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "StorageError"
          }
        }
      },
      "@supabase/storage-js.index.StorageUnknownError.constructor": {
        "name": "@supabase/storage-js.index.StorageUnknownError.constructor",
        "params": [
          {
            "name": "message",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "name": "originalError",
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "StorageUnknownError"
          }
        }
      },
      "@supabase/storage-js.packages/StorageBucketApi.default.constructor": {
        "name": "@supabase/storage-js.packages/StorageBucketApi.default.constructor",
        "params": [
          {
            "name": "url",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "name": "headers",
            "type": {
              "type": "index signature",
              "keyType": {
                "type": "intrinsic",
                "name": "string"
              },
              "valueType": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          },
          {
            "name": "fetch",
            "type": {
              "type": "function",
              "params": [
                {
                  "name": "input",
                  "type": {
                    "type": "nameOnly",
                    "name": "RequestInfo"
                  }
                },
                {
                  "name": "init",
                  "type": {
                    "type": "nameOnly",
                    "name": "RequestInit"
                  },
                  "isOptional": true
                }
              ],
              "ret": {
                "type": {
                  "type": "promise",
                  "name": "Promise",
                  "awaited": {
                    "type": "nameOnly",
                    "name": "Response"
                  }
                }
              }
            },
            "isOptional": true
          }
        ]
      },
      "@supabase/storage-js.packages/StorageBucketApi.default.createBucket": {
        "name": "@supabase/storage-js.packages/StorageBucketApi.default.createBucket",
        "params": [
          {
            "name": "id",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "A unique identifier for the bucket you are creating."
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "allowedMimeTypes",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "array",
                        "elemType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "specifies the allowed mime types that this bucket can accept during upload.\\nThe default value is null, which allows files with all mime types to be uploaded.\\nEach mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png."
                  }
                },
                {
                  "name": "fileSizeLimit",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "specifies the max file size in bytes that can be uploaded to this bucket.\\nThe global file size limit takes precedence over this value.\\nThe default value is null, which doesn't set a per bucket file size limit."
                  }
                },
                {
                  "name": "public",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "comment": {
                    "shortText": "The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private."
                  }
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "name": "name",
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "StorageError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Creates a new Storage bucket",
          "returns": "newly created bucket id\\n"
        }
      },
      "@supabase/storage-js.packages/StorageBucketApi.default.deleteBucket": {
        "name": "@supabase/storage-js.packages/StorageBucketApi.default.deleteBucket",
        "params": [
          {
            "name": "id",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The unique identifier of the bucket you would like to delete.\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "message",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "StorageError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\\nYou must first \`empty()\` the bucket."
        }
      },
      "@supabase/storage-js.packages/StorageBucketApi.default.emptyBucket": {
        "name": "@supabase/storage-js.packages/StorageBucketApi.default.emptyBucket",
        "params": [
          {
            "name": "id",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The unique identifier of the bucket you would like to empty.\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "message",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "StorageError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Removes all objects inside a single bucket."
        }
      },
      "@supabase/storage-js.packages/StorageBucketApi.default.getBucket": {
        "name": "@supabase/storage-js.packages/StorageBucketApi.default.getBucket",
        "params": [
          {
            "name": "id",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The unique identifier of the bucket you would like to retrieve.\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "name": "Bucket",
                        "properties": [
                          {
                            "name": "allowed_mime_types",
                            "type": {
                              "type": "array",
                              "elemType": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            "isOptional": true
                          },
                          {
                            "name": "created_at",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "name": "file_size_limit",
                            "type": {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            "isOptional": true
                          },
                          {
                            "name": "id",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "name": "name",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "name": "owner",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "name": "public",
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "name": "updated_at",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "StorageError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Retrieves the details of an existing Storage bucket."
        }
      },
      "@supabase/storage-js.packages/StorageBucketApi.default.listBuckets": {
        "name": "@supabase/storage-js.packages/StorageBucketApi.default.listBuckets",
        "params": [],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "array",
                        "elemType": {
                          "type": "object",
                          "name": "Bucket",
                          "properties": [
                            {
                              "name": "allowed_mime_types",
                              "type": {
                                "type": "array",
                                "elemType": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              },
                              "isOptional": true
                            },
                            {
                              "name": "created_at",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "name": "file_size_limit",
                              "type": {
                                "type": "intrinsic",
                                "name": "number"
                              },
                              "isOptional": true
                            },
                            {
                              "name": "id",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "name": "name",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "name": "owner",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "name": "public",
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "name": "updated_at",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "StorageError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Retrieves the details of all Storage buckets within an existing project."
        }
      },
      "@supabase/storage-js.packages/StorageBucketApi.default.updateBucket": {
        "name": "@supabase/storage-js.packages/StorageBucketApi.default.updateBucket",
        "params": [
          {
            "name": "id",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "A unique identifier for the bucket you are updating."
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "allowedMimeTypes",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "array",
                        "elemType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "specifies the allowed mime types that this bucket can accept during upload.\\nThe default value is null, which allows files with all mime types to be uploaded.\\nEach mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\\n"
                  }
                },
                {
                  "name": "fileSizeLimit",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "specifies the max file size in bytes that can be uploaded to this bucket.\\nThe global file size limit takes precedence over this value.\\nThe default value is null, which doesn't set a per bucket file size limit."
                  }
                },
                {
                  "name": "public",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "comment": {
                    "shortText": "The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations."
                  }
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "message",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "StorageError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Updates a Storage bucket"
        }
      },
      "@supabase/storage-js.packages/StorageFileApi.default.constructor": {
        "name": "@supabase/storage-js.packages/StorageFileApi.default.constructor",
        "params": [
          {
            "name": "url",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "name": "headers",
            "type": {
              "type": "index signature",
              "keyType": {
                "type": "intrinsic",
                "name": "string"
              },
              "valueType": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          },
          {
            "name": "bucketId",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "isOptional": true
          },
          {
            "name": "fetch",
            "type": {
              "type": "function",
              "params": [
                {
                  "name": "input",
                  "type": {
                    "type": "nameOnly",
                    "name": "RequestInfo"
                  }
                },
                {
                  "name": "init",
                  "type": {
                    "type": "nameOnly",
                    "name": "RequestInit"
                  },
                  "isOptional": true
                }
              ],
              "ret": {
                "type": {
                  "type": "promise",
                  "name": "Promise",
                  "awaited": {
                    "type": "nameOnly",
                    "name": "Response"
                  }
                }
              }
            },
            "isOptional": true
          }
        ]
      },
      "@supabase/storage-js.packages/StorageFileApi.default.copy": {
        "name": "@supabase/storage-js.packages/StorageFileApi.default.copy",
        "params": [
          {
            "name": "fromPath",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The original file path, including the current file name. For example \`folder/image.png\`."
            }
          },
          {
            "name": "toPath",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The new file path, including the new file name. For example \`folder/image-copy.png\`.\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "path",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "StorageError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Copies an existing file to a new path in the same bucket."
        }
      },
      "@supabase/storage-js.packages/StorageFileApi.default.createSignedUploadUrl": {
        "name": "@supabase/storage-js.packages/StorageFileApi.default.createSignedUploadUrl",
        "params": [
          {
            "name": "path",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The file path, including the current file name. For example \`folder/image.png\`.\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "path",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "name": "signedUrl",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "name": "token",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "StorageError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Creates a signed upload URL.\\nSigned upload URLs can be used to upload files to the bucket without further authentication.\\nThey are valid for 2 hours."
        }
      },
      "@supabase/storage-js.packages/StorageFileApi.default.createSignedUrl": {
        "name": "@supabase/storage-js.packages/StorageFileApi.default.createSignedUrl",
        "params": [
          {
            "name": "path",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The file path, including the current file name. For example \`folder/image.png\`."
            }
          },
          {
            "name": "expiresIn",
            "type": {
              "type": "intrinsic",
              "name": "number"
            },
            "comment": {
              "shortText": "The number of seconds until the signed URL expires. For example, \`60\` for a URL which is valid for one minute."
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "download",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename."
                  }
                },
                {
                  "name": "transform",
                  "type": {
                    "type": "object",
                    "name": "TransformOptions",
                    "properties": [
                      {
                        "name": "format",
                        "type": {
                          "type": "literal",
                          "value": "origin"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "Specify the format of the image requested.",
                          "text": "When using 'origin' we force the format to be the same as the original image.\\nWhen this option is not passed in, images are optimized to modern image formats like Webp.\\n"
                        }
                      },
                      {
                        "name": "height",
                        "type": {
                          "type": "intrinsic",
                          "name": "number"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "The height of the image in pixels."
                        }
                      },
                      {
                        "name": "quality",
                        "type": {
                          "type": "intrinsic",
                          "name": "number"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "Set the quality of the returned image.\\nA number from 20 to 100, with 100 being the highest quality.\\nDefaults to 80"
                        }
                      },
                      {
                        "name": "resize",
                        "type": {
                          "type": "union",
                          "subTypes": [
                            {
                              "type": "literal",
                              "value": "cover"
                            },
                            {
                              "type": "literal",
                              "value": "contain"
                            },
                            {
                              "type": "literal",
                              "value": "fill"
                            }
                          ]
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "The resize mode can be cover, contain or fill. Defaults to cover.\\nCover resizes the image to maintain it's aspect ratio while filling the entire width and height.\\nContain resizes the image to maintain it's aspect ratio while fitting the entire image within the width and height.\\nFill resizes the image to fill the entire width and height. If the object's aspect ratio does not match the width and height, the image will be stretched to fit."
                        }
                      },
                      {
                        "name": "width",
                        "type": {
                          "type": "intrinsic",
                          "name": "number"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "The width of the image in pixels."
                        }
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Transform the asset before serving it to the client.\\n"
                  }
                }
              ]
            },
            "isOptional": true
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "signedUrl",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "StorageError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Creates a signed URL. Use a signed URL to share a file for a fixed amount of time."
        }
      },
      "@supabase/storage-js.packages/StorageFileApi.default.createSignedUrls": {
        "name": "@supabase/storage-js.packages/StorageFileApi.default.createSignedUrls",
        "params": [
          {
            "name": "paths",
            "type": {
              "type": "array",
              "elemType": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            "comment": {
              "shortText": "The file paths to be downloaded, including the current file names. For example \`['folder/image.png', 'folder2/image2.png']\`."
            }
          },
          {
            "name": "expiresIn",
            "type": {
              "type": "intrinsic",
              "name": "number"
            },
            "comment": {
              "shortText": "The number of seconds until the signed URLs expire. For example, \`60\` for URLs which are valid for one minute."
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "download",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    ]
                  },
                  "comment": {
                    "shortText": "triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\\n"
                  }
                }
              ]
            },
            "isOptional": true
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "array",
                        "elemType": {
                          "type": "object",
                          "properties": [
                            {
                              "name": "error",
                              "type": {
                                "type": "union",
                                "subTypes": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ]
                              }
                            },
                            {
                              "name": "path",
                              "type": {
                                "type": "union",
                                "subTypes": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ]
                              }
                            },
                            {
                              "name": "signedUrl",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "StorageError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Creates multiple signed URLs. Use a signed URL to share a file for a fixed amount of time."
        }
      },
      "@supabase/storage-js.packages/StorageFileApi.default.download": {
        "name": "@supabase/storage-js.packages/StorageFileApi.default.download",
        "params": [
          {
            "name": "path",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The full path and file name of the file to be downloaded. For example \`folder/image.png\`."
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "transform",
                  "type": {
                    "type": "object",
                    "name": "TransformOptions",
                    "properties": [
                      {
                        "name": "format",
                        "type": {
                          "type": "literal",
                          "value": "origin"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "Specify the format of the image requested.",
                          "text": "When using 'origin' we force the format to be the same as the original image.\\nWhen this option is not passed in, images are optimized to modern image formats like Webp.\\n"
                        }
                      },
                      {
                        "name": "height",
                        "type": {
                          "type": "intrinsic",
                          "name": "number"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "The height of the image in pixels."
                        }
                      },
                      {
                        "name": "quality",
                        "type": {
                          "type": "intrinsic",
                          "name": "number"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "Set the quality of the returned image.\\nA number from 20 to 100, with 100 being the highest quality.\\nDefaults to 80"
                        }
                      },
                      {
                        "name": "resize",
                        "type": {
                          "type": "union",
                          "subTypes": [
                            {
                              "type": "literal",
                              "value": "cover"
                            },
                            {
                              "type": "literal",
                              "value": "contain"
                            },
                            {
                              "type": "literal",
                              "value": "fill"
                            }
                          ]
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "The resize mode can be cover, contain or fill. Defaults to cover.\\nCover resizes the image to maintain it's aspect ratio while filling the entire width and height.\\nContain resizes the image to maintain it's aspect ratio while fitting the entire image within the width and height.\\nFill resizes the image to fill the entire width and height. If the object's aspect ratio does not match the width and height, the image will be stretched to fit."
                        }
                      },
                      {
                        "name": "width",
                        "type": {
                          "type": "intrinsic",
                          "name": "number"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "The width of the image in pixels."
                        }
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Transform the asset before serving it to the client.\\n"
                  }
                }
              ]
            },
            "isOptional": true
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "nameOnly",
                        "name": "Blob"
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "StorageError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Downloads a file from a private bucket. For public buckets, make a request to the URL returned from \`getPublicUrl\` instead."
        }
      },
      "@supabase/storage-js.packages/StorageFileApi.default.getPublicUrl": {
        "name": "@supabase/storage-js.packages/StorageFileApi.default.getPublicUrl",
        "params": [
          {
            "name": "path",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The path and name of the file to generate the public URL for. For example \`folder/image.png\`."
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "download",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename."
                  }
                },
                {
                  "name": "transform",
                  "type": {
                    "type": "object",
                    "name": "TransformOptions",
                    "properties": [
                      {
                        "name": "format",
                        "type": {
                          "type": "literal",
                          "value": "origin"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "Specify the format of the image requested.",
                          "text": "When using 'origin' we force the format to be the same as the original image.\\nWhen this option is not passed in, images are optimized to modern image formats like Webp.\\n"
                        }
                      },
                      {
                        "name": "height",
                        "type": {
                          "type": "intrinsic",
                          "name": "number"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "The height of the image in pixels."
                        }
                      },
                      {
                        "name": "quality",
                        "type": {
                          "type": "intrinsic",
                          "name": "number"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "Set the quality of the returned image.\\nA number from 20 to 100, with 100 being the highest quality.\\nDefaults to 80"
                        }
                      },
                      {
                        "name": "resize",
                        "type": {
                          "type": "union",
                          "subTypes": [
                            {
                              "type": "literal",
                              "value": "cover"
                            },
                            {
                              "type": "literal",
                              "value": "contain"
                            },
                            {
                              "type": "literal",
                              "value": "fill"
                            }
                          ]
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "The resize mode can be cover, contain or fill. Defaults to cover.\\nCover resizes the image to maintain it's aspect ratio while filling the entire width and height.\\nContain resizes the image to maintain it's aspect ratio while fitting the entire image within the width and height.\\nFill resizes the image to fill the entire width and height. If the object's aspect ratio does not match the width and height, the image will be stretched to fit."
                        }
                      },
                      {
                        "name": "width",
                        "type": {
                          "type": "intrinsic",
                          "name": "number"
                        },
                        "isOptional": true,
                        "comment": {
                          "shortText": "The width of the image in pixels."
                        }
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Transform the asset before serving it to the client.\\n"
                  }
                }
              ]
            },
            "isOptional": true
          }
        ],
        "ret": {
          "type": {
            "type": "object",
            "properties": [
              {
                "name": "data",
                "type": {
                  "type": "object",
                  "properties": [
                    {
                      "name": "publicUrl",
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "comment": {
          "shortText": "A simple convenience function to get the URL for an asset in a public bucket. If you do not want to use this function, you can construct the public URL by concatenating the bucket URL with the path to the asset.\\nThis function does not verify if the bucket is public. If a public URL is created for a bucket which is not public, you will not be able to download the asset."
        }
      },
      "@supabase/storage-js.packages/StorageFileApi.default.list": {
        "name": "@supabase/storage-js.packages/StorageFileApi.default.list",
        "params": [
          {
            "name": "path",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "isOptional": true,
            "comment": {
              "shortText": "The folder path.\\n"
            }
          },
          {
            "name": "options",
            "type": {
              "type": "object",
              "name": "SearchOptions",
              "properties": [
                {
                  "name": "limit",
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": " The number of files you want to be returned."
                  }
                },
                {
                  "name": "offset",
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The starting position."
                  }
                },
                {
                  "name": "search",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The search string to filter files by."
                  }
                },
                {
                  "name": "sortBy",
                  "type": {
                    "type": "object",
                    "name": "SortBy",
                    "properties": [
                      {
                        "name": "column",
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        "isOptional": true
                      },
                      {
                        "name": "order",
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        "isOptional": true
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The column to sort by. Can be any column inside a FileObject."
                  }
                }
              ]
            },
            "isOptional": true
          },
          {
            "name": "parameters",
            "type": {
              "type": "object",
              "name": "FetchParameters",
              "properties": [
                {
                  "name": "signal",
                  "type": {
                    "type": "nameOnly",
                    "name": "AbortSignal"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Pass in an AbortController's signal to cancel the request."
                  }
                }
              ]
            },
            "isOptional": true
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "array",
                        "elemType": {
                          "type": "object",
                          "name": "FileObject",
                          "properties": [
                            {
                              "name": "bucket_id",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "name": "buckets",
                              "type": {
                                "type": "object",
                                "name": "Bucket",
                                "properties": [
                                  {
                                    "name": "allowed_mime_types",
                                    "type": {
                                      "type": "array",
                                      "elemType": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    "isOptional": true
                                  },
                                  {
                                    "name": "created_at",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "name": "file_size_limit",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "number"
                                    },
                                    "isOptional": true
                                  },
                                  {
                                    "name": "id",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "name": "name",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "name": "owner",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "name": "public",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "boolean"
                                    }
                                  },
                                  {
                                    "name": "updated_at",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "name": "created_at",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "name": "id",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "name": "last_accessed_at",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "name": "metadata",
                              "type": {
                                "type": "record",
                                "name": "Record",
                                "keyType": {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                "valueType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            },
                            {
                              "name": "name",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "name": "owner",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "name": "updated_at",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "StorageError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Lists all the files within a bucket."
        }
      },
      "@supabase/storage-js.packages/StorageFileApi.default.move": {
        "name": "@supabase/storage-js.packages/StorageFileApi.default.move",
        "params": [
          {
            "name": "fromPath",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The original file path, including the current file name. For example \`folder/image.png\`."
            }
          },
          {
            "name": "toPath",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The new file path, including the new file name. For example \`folder/image-new.png\`.\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "message",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "StorageError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Moves an existing file to a new path in the same bucket."
        }
      },
      "@supabase/storage-js.packages/StorageFileApi.default.remove": {
        "name": "@supabase/storage-js.packages/StorageFileApi.default.remove",
        "params": [
          {
            "name": "paths",
            "type": {
              "type": "array",
              "elemType": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            "comment": {
              "shortText": "An array of files to delete, including the path and file name. For example [\`'folder/image.png'\`].\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "array",
                        "elemType": {
                          "type": "object",
                          "name": "FileObject",
                          "properties": [
                            {
                              "name": "bucket_id",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "name": "buckets",
                              "type": {
                                "type": "object",
                                "name": "Bucket",
                                "properties": [
                                  {
                                    "name": "allowed_mime_types",
                                    "type": {
                                      "type": "array",
                                      "elemType": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    "isOptional": true
                                  },
                                  {
                                    "name": "created_at",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "name": "file_size_limit",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "number"
                                    },
                                    "isOptional": true
                                  },
                                  {
                                    "name": "id",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "name": "name",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "name": "owner",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "name": "public",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "boolean"
                                    }
                                  },
                                  {
                                    "name": "updated_at",
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "name": "created_at",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "name": "id",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "name": "last_accessed_at",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "name": "metadata",
                              "type": {
                                "type": "record",
                                "name": "Record",
                                "keyType": {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                "valueType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            },
                            {
                              "name": "name",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "name": "owner",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "name": "updated_at",
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "StorageError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Deletes files within the same bucket"
        }
      },
      "@supabase/storage-js.packages/StorageFileApi.default.update": {
        "name": "@supabase/storage-js.packages/StorageFileApi.default.update",
        "params": [
          {
            "name": "path",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The relative file path. Should be of the format \`folder/subfolder/filename.png\`. The bucket must already exist before attempting to update."
            }
          },
          {
            "name": "fileBody",
            "type": {
              "type": "union",
              "subTypes": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "nameOnly",
                  "name": "ArrayBuffer"
                },
                {
                  "type": "nameOnly",
                  "name": "ArrayBufferView"
                },
                {
                  "type": "nameOnly",
                  "name": "Blob"
                },
                {
                  "type": "nameOnly",
                  "name": "@types/node.Buffer"
                },
                {
                  "type": "nameOnly",
                  "name": "File"
                },
                {
                  "type": "nameOnly",
                  "name": "FormData"
                },
                {
                  "type": "nameOnly",
                  "name": "@types/node.NodeJS.ReadableStream"
                },
                {
                  "type": "nameOnly",
                  "name": "ReadableStream"
                },
                {
                  "type": "nameOnly",
                  "name": "URLSearchParams"
                }
              ]
            },
            "comment": {
              "shortText": "The body of the file to be stored in the bucket.\\n"
            }
          },
          {
            "name": "fileOptions",
            "type": {
              "type": "object",
              "name": "FileOptions",
              "properties": [
                {
                  "name": "cacheControl",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The number of seconds the asset is cached in the browser and in the Supabase CDN. This is set in the \`Cache-Control: max-age=<seconds>\` header. Defaults to 3600 seconds."
                  }
                },
                {
                  "name": "contentType",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "the \`Content-Type\` header value. Should be specified if using a \`fileBody\` that is neither \`Blob\` nor \`File\` nor \`FormData\`, otherwise will default to \`text/plain;charset=UTF-8\`."
                  }
                },
                {
                  "name": "duplex",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The duplex option is a string parameter that enables or disables duplex streaming, allowing for both reading and writing data in the same stream. It can be passed as an option to the fetch() method."
                  }
                },
                {
                  "name": "upsert",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "When upsert is set to true, the file is overwritten if it exists. When set to false, an error is thrown if the object already exists. Defaults to false."
                  }
                }
              ]
            },
            "isOptional": true
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "fullPath",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "name": "id",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "name": "path",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "StorageError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Replaces an existing file at the specified path with a new one."
        }
      },
      "@supabase/storage-js.packages/StorageFileApi.default.upload": {
        "name": "@supabase/storage-js.packages/StorageFileApi.default.upload",
        "params": [
          {
            "name": "path",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The file path, including the file name. Should be of the format \`folder/subfolder/filename.png\`. The bucket must already exist before attempting to upload."
            }
          },
          {
            "name": "fileBody",
            "type": {
              "type": "nameOnly",
              "name": "FileBody"
            },
            "comment": {
              "shortText": "The body of the file to be stored in the bucket.\\n"
            }
          },
          {
            "name": "fileOptions",
            "type": {
              "type": "object",
              "name": "FileOptions",
              "properties": [
                {
                  "name": "cacheControl",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The number of seconds the asset is cached in the browser and in the Supabase CDN. This is set in the \`Cache-Control: max-age=<seconds>\` header. Defaults to 3600 seconds."
                  }
                },
                {
                  "name": "contentType",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "the \`Content-Type\` header value. Should be specified if using a \`fileBody\` that is neither \`Blob\` nor \`File\` nor \`FormData\`, otherwise will default to \`text/plain;charset=UTF-8\`."
                  }
                },
                {
                  "name": "duplex",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The duplex option is a string parameter that enables or disables duplex streaming, allowing for both reading and writing data in the same stream. It can be passed as an option to the fetch() method."
                  }
                },
                {
                  "name": "upsert",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "When upsert is set to true, the file is overwritten if it exists. When set to false, an error is thrown if the object already exists. Defaults to false."
                  }
                }
              ]
            },
            "isOptional": true
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "fullPath",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "name": "id",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "name": "path",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "nameOnly",
                        "name": "StorageError"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Uploads a file to an existing bucket."
        }
      },
      "@supabase/storage-js.packages/StorageFileApi.default.uploadToSignedUrl": {
        "name": "@supabase/storage-js.packages/StorageFileApi.default.uploadToSignedUrl",
        "params": [
          {
            "name": "path",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The file path, including the file name. Should be of the format \`folder/subfolder/filename.png\`. The bucket must already exist before attempting to upload."
            }
          },
          {
            "name": "token",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The token generated from \`createSignedUploadUrl\`"
            }
          },
          {
            "name": "fileBody",
            "type": {
              "type": "nameOnly",
              "name": "FileBody"
            },
            "comment": {
              "shortText": "The body of the file to be stored in the bucket.\\n"
            }
          },
          {
            "name": "fileOptions",
            "type": {
              "type": "object",
              "name": "FileOptions",
              "properties": [
                {
                  "name": "cacheControl",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The number of seconds the asset is cached in the browser and in the Supabase CDN. This is set in the \`Cache-Control: max-age=<seconds>\` header. Defaults to 3600 seconds."
                  }
                },
                {
                  "name": "contentType",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "the \`Content-Type\` header value. Should be specified if using a \`fileBody\` that is neither \`Blob\` nor \`File\` nor \`FormData\`, otherwise will default to \`text/plain;charset=UTF-8\`."
                  }
                },
                {
                  "name": "duplex",
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The duplex option is a string parameter that enables or disables duplex streaming, allowing for both reading and writing data in the same stream. It can be passed as an option to the fetch() method."
                  }
                },
                {
                  "name": "upsert",
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "When upsert is set to true, the file is overwritten if it exists. When set to false, an error is thrown if the object already exists. Defaults to false."
                  }
                }
              ]
            },
            "isOptional": true
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "subTypes": [
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "object",
                        "properties": [
                          {
                            "name": "fullPath",
                            "type": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          },
                          {
                            "name": "path",
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": [
                    {
                      "name": "data",
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "name": "error",
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "comment": {
          "shortText": "Upload a file with a token generated from \`createSignedUploadUrl\`."
        }
      }
    }
  },
  {
    "name": "@supabase/functions-js",
    "methods": {
      "@supabase/functions-js.FunctionsClient.constructor": {
        "name": "@supabase/functions-js.FunctionsClient.constructor",
        "params": [
          {
            "name": "url",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "type": {
              "type": "object",
              "properties": [
                {
                  "name": "customFetch",
                  "type": {
                    "type": "function",
                    "params": [
                      {
                        "name": "input",
                        "type": {
                          "type": "union",
                          "subTypes": [
                            {
                              "type": "nameOnly",
                              "name": "RequestInfo"
                            },
                            {
                              "type": "nameOnly",
                              "name": "URL"
                            }
                          ]
                        }
                      },
                      {
                        "name": "init",
                        "type": {
                          "type": "nameOnly",
                          "name": "RequestInit"
                        },
                        "isOptional": true
                      }
                    ],
                    "ret": {
                      "type": {
                        "type": "promise",
                        "name": "Promise",
                        "awaited": {
                          "type": "nameOnly",
                          "name": "Response"
                        }
                      }
                    }
                  },
                  "isOptional": true
                },
                {
                  "name": "headers",
                  "type": {
                    "type": "record",
                    "name": "Record",
                    "keyType": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "valueType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  "isOptional": true
                },
                {
                  "name": "region",
                  "isOptional": true
                }
              ]
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "FunctionsClient"
          }
        }
      },
      "@supabase/functions-js.FunctionsClient.invoke": {
        "name": "@supabase/functions-js.FunctionsClient.invoke",
        "params": [
          {
            "name": "functionName",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "The name of the Function to invoke."
            }
          },
          {
            "name": "options",
            "type": {
              "name": "FunctionInvokeOptions",
              "type": "object",
              "properties": [
                {
                  "name": "body",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "nameOnly",
                        "name": "File"
                      },
                      {
                        "type": "nameOnly",
                        "name": "Blob"
                      },
                      {
                        "type": "nameOnly",
                        "name": "ArrayBuffer"
                      },
                      {
                        "type": "nameOnly",
                        "name": "FormData"
                      },
                      {
                        "type": "nameOnly",
                        "name": "ReadableStream"
                      },
                      {
                        "type": "record",
                        "name": "Record",
                        "keyType": {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        "valueType": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The body of the request."
                  }
                },
                {
                  "name": "headers",
                  "type": {
                    "type": "index signature",
                    "keyType": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "valueType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "Object representing the headers to send with the request."
                  }
                },
                {
                  "name": "method",
                  "type": {
                    "type": "union",
                    "subTypes": [
                      {
                        "type": "literal",
                        "value": "POST"
                      },
                      {
                        "type": "literal",
                        "value": "GET"
                      },
                      {
                        "type": "literal",
                        "value": "PUT"
                      },
                      {
                        "type": "literal",
                        "value": "PATCH"
                      },
                      {
                        "type": "literal",
                        "value": "DELETE"
                      }
                    ]
                  },
                  "isOptional": true,
                  "comment": {
                    "shortText": "The HTTP verb of the request"
                  }
                },
                {
                  "name": "region",
                  "isOptional": true,
                  "comment": {
                    "shortText": "The Region to invoke the function in."
                  }
                }
              ]
            },
            "comment": {
              "shortText": "Options for invoking the Function.\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "promise",
            "name": "Promise",
            "awaited": {
              "type": "union",
              "name": "FunctionsResponse",
              "subTypes": []
            }
          }
        },
        "comment": {
          "shortText": "Invokes a function"
        }
      },
      "@supabase/functions-js.FunctionsClient.setAuth": {
        "name": "@supabase/functions-js.FunctionsClient.setAuth",
        "params": [
          {
            "name": "token",
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "comment": {
              "shortText": "the new jwt token sent in the authorisation header\\n"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "intrinsic",
            "name": "void"
          }
        },
        "comment": {
          "shortText": "Updates the authorization header"
        }
      },
      "@supabase/functions-js.FunctionsError.constructor": {
        "name": "@supabase/functions-js.FunctionsError.constructor",
        "params": [
          {
            "name": "message",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "name": "name",
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "name": "context",
            "type": {
              "type": "intrinsic",
              "name": "any"
            },
            "isOptional": true
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "FunctionsError"
          }
        }
      },
      "@supabase/functions-js.FunctionsFetchError.constructor": {
        "name": "@supabase/functions-js.FunctionsFetchError.constructor",
        "params": [
          {
            "name": "context",
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "FunctionsFetchError"
          }
        }
      },
      "@supabase/functions-js.FunctionsHttpError.constructor": {
        "name": "@supabase/functions-js.FunctionsHttpError.constructor",
        "params": [
          {
            "name": "context",
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "FunctionsHttpError"
          }
        }
      },
      "@supabase/functions-js.FunctionsRelayError.constructor": {
        "name": "@supabase/functions-js.FunctionsRelayError.constructor",
        "params": [
          {
            "name": "context",
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "ret": {
          "type": {
            "type": "nameOnly",
            "name": "FunctionsRelayError"
          }
        }
      }
    }
  }
]"
`;
