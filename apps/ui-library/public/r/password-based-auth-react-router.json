{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "password-based-auth-react-router",
  "type": "registry:block",
  "title": "Password Based Auth flow for React Router and Supabase",
  "description": "Password Based Auth flow for React Router and Supabase",
  "dependencies": [
    "@supabase/ssr@latest",
    "@react-router/dev@latest",
    "@react-router/fs-routes@latest",
    "@supabase/supabase-js@latest"
  ],
  "registryDependencies": [
    "button",
    "card",
    "input",
    "label"
  ],
  "files": [
    {
      "path": "registry/default/blocks/password-based-auth-react-router/app/routes.ts",
      "content": "import { type RouteConfig } from '@react-router/dev/routes'\nimport { flatRoutes } from '@react-router/fs-routes'\n\nexport default flatRoutes() satisfies RouteConfig\n",
      "type": "registry:page",
      "target": "app/routes.ts"
    },
    {
      "path": "registry/default/blocks/password-based-auth-react-router/app/routes/sign-in.tsx",
      "content": "import { redirect } from 'react-router'\nimport { Form, Link, useActionData, useNavigation } from 'react-router'\nimport type { ActionFunctionArgs } from 'react-router'\nimport { createClient } from '@/registry/default/clients/react-router/lib/supabase.server'\nimport { Input } from '@/registry/default/components/ui/input'\nimport { Label } from '@/registry/default/components/ui/label'\nimport { Button } from '@/registry/default/components/ui/button'\nimport { FormMessage } from '../../components/FormMessage'\n\nexport const action = async ({ request }: ActionFunctionArgs) => {\n  const { supabase, headers } = createClient(request)\n  const formData = await request.formData()\n\n  const { error } = await supabase.auth.signInWithPassword({\n    email: formData.get('email') as string,\n    password: formData.get('password') as string,\n  })\n\n  if (error) {\n    return { success: false, error: error.message }\n  }\n\n  // Redirect to home page after successful sign-in\n  return redirect('/', { headers })\n}\n\nconst SignIn = () => {\n  const actionData = useActionData<typeof action>()\n  const navigation = useNavigation()\n  const isSubmitting = navigation.state === 'submitting'\n\n  return (\n    <div className=\"max-w-md mx-auto mt-24\">\n      <Form method=\"post\" className=\"flex-1 flex flex-col min-w-64\">\n        <h1 className=\"text-2xl font-medium\">Sign in</h1>\n        <p className=\"text-sm text-foreground\">\n          Don&apos;t have an account?{' '}\n          <Link className=\"text-foreground font-medium underline\" to=\"/sign-up\">\n            Sign up\n          </Link>\n        </p>\n        <div className=\"flex flex-col gap-2 [&>input]:mb-3 mt-8\">\n          <Label htmlFor=\"email\">Email</Label>\n          <Input name=\"email\" placeholder=\"you@example.com\" required />\n          <div className=\"flex justify-between items-center\">\n            <Label htmlFor=\"password\">Password</Label>\n            <Link className=\"text-xs text-foreground underline\" to=\"/forgot-password\">\n              Forgot Password?\n            </Link>\n          </div>\n          <Input type=\"password\" name=\"password\" placeholder=\"Your password\" required />\n          <Button disabled={isSubmitting}>{isSubmitting ? 'Signing in...' : 'Sign in'}</Button>\n\n          {actionData?.error && <FormMessage message={actionData.error} />}\n        </div>\n      </Form>\n    </div>\n  )\n}\n\nexport default SignIn\n",
      "type": "registry:page",
      "target": "app/routes/sign-in.tsx"
    },
    {
      "path": "registry/default/blocks/password-based-auth-react-router/app/routes/sign-up.tsx",
      "content": "import { Form, Link, useActionData, useNavigation } from 'react-router'\nimport type { ActionFunctionArgs } from 'react-router'\nimport { Input } from '@/registry/default/components/ui/input'\nimport { Button } from '@/registry/default/components/ui/button'\nimport { Label } from '@/registry/default/components/ui/label'\nimport { FormMessage } from '../../components/FormMessage'\nimport { createClient } from '@/registry/default/clients/react-router/lib/supabase.server'\n\nexport const action = async ({ request }: ActionFunctionArgs) => {\n  const { supabase } = createClient(request)\n  const formData = await request.formData()\n\n  const { error } = await supabase.auth.signUp({\n    email: formData.get('email') as string,\n    password: formData.get('password') as string,\n  })\n\n  if (error) {\n    return { success: false, error: error.message }\n  }\n\n  return {\n    success: true,\n    error: null,\n    message: 'Success! Please check your email for further instructions.',\n  }\n}\n\nexport const SignUp = () => {\n  const actionData = useActionData<typeof action>()\n  const navigation = useNavigation()\n  const isSubmitting = navigation.state === 'submitting'\n\n  return (\n    <div className=\"max-w-md mx-auto mt-24\">\n      <Form method=\"post\" className=\"flex-1 flex flex-col min-w-64\">\n        <h1 className=\"text-2xl font-medium\">Sign up</h1>\n        <p className=\"text-sm text-foreground\">\n          Already have an account?{' '}\n          <Link className=\"text-foreground font-medium underline\" to=\"/sign-in\">\n            Sign in\n          </Link>\n        </p>\n        <div className=\"flex flex-col gap-2 [&>input]:mb-3 mt-8\">\n          <Label htmlFor=\"email\">Email</Label>\n          <Input name=\"email\" placeholder=\"you@example.com\" required />\n          <div className=\"flex justify-between items-center\">\n            <Label htmlFor=\"password\">Password</Label>\n          </div>\n          <Input type=\"password\" name=\"password\" placeholder=\"Your password\" required />\n          <Button disabled={isSubmitting}>{isSubmitting ? 'Signing up...' : 'Sign up'}</Button>\n\n          {!actionData?.success && actionData?.error && <FormMessage message={actionData.error} />}\n          {actionData?.success && (\n            <FormMessage message={'Success! check your email for further instructions.'} />\n          )}\n        </div>\n      </Form>\n    </div>\n  )\n}\n\nexport default SignUp\n",
      "type": "registry:page",
      "target": "app/routes/sign-up.tsx"
    },
    {
      "path": "registry/default/blocks/password-based-auth-react-router/app/routes/sign-out.tsx",
      "content": "import type { ActionFunctionArgs } from 'react-router'\nimport { redirect } from 'react-router'\nimport { createClient } from '@/registry/default/clients/react-router/lib/supabase.server'\n\nexport async function action({ request }: ActionFunctionArgs) {\n  const { supabase, headers } = createClient(request)\n\n  const { error } = await supabase.auth.signOut()\n\n  if (error) {\n    console.error(error)\n    return { success: false, error: error.message }\n  }\n\n  // Redirect to dashboard or home page after successful sign-in\n  return redirect('/', { headers })\n}\n",
      "type": "registry:page",
      "target": "app/routes/sign-out.tsx"
    },
    {
      "path": "registry/default/blocks/password-based-auth-react-router/app/routes/forgot-password.tsx",
      "content": "import { type ActionFunctionArgs, Form, data, useActionData } from 'react-router'\nimport { AuthApiError } from '@supabase/supabase-js'\nimport { createClient } from '@/registry/default/clients/react-router/lib/supabase.server'\nimport { Input } from '@/registry/default/components/ui/input'\nimport { Button } from '@/registry/default/components/ui/button'\n\nexport const action = async ({ request }: ActionFunctionArgs) => {\n  const formData = await request.formData()\n  const email = formData.get('email') as string\n\n  if (!email) {\n    return data({\n      message: 'Please provide an email',\n      errors: { email: 'Email is required' },\n      data: { email: '' },\n    })\n  }\n\n  const { supabase, headers } = createClient(request)\n  const origin = new URL(request.url).origin\n\n  // Send the actual reset password email\n  const { error } = await supabase.auth.resetPasswordForEmail(email, {\n    redirectTo: `${origin}/auth/confirm?next=/update-password`,\n  })\n\n  if (error) {\n    if (error instanceof AuthApiError && error.status === 400) {\n      return data(\n        {\n          message: 'Invalid credentials.',\n          errors: { email: 'Invalid email address' },\n          data: { email },\n        },\n        { headers }\n      )\n    }\n    return data(\n      {\n        message: error.message,\n        errors: { email: error.message },\n        data: { email },\n      },\n      { headers }\n    )\n  }\n\n  return data(\n    {\n      message: 'Please check your email for a password reset link to log into the website.',\n      errors: {},\n      data: { email: '' },\n    },\n    { headers }\n  )\n}\n\nexport default function ForgotPassword() {\n  const actionData = useActionData<typeof action>()\n\n  return (\n    <div className=\"max-w-md mx-auto mt-24\">\n      {actionData?.message ? (\n        <div className={`alert-error mb-10`}>{actionData?.message}</div>\n      ) : null}\n      <h2 className=\"font-semibold text-xl mb-4\">Forgot Password</h2>\n      <p className=\"mb-4\">Reset your password using your email address</p>\n      <Form method=\"post\">\n        <div className=\"form-control\">\n          <Input\n            id=\"email\"\n            name=\"email\"\n            type=\"text\"\n            placeholder=\"you@example.com\"\n            defaultValue={actionData?.data?.email}\n            className=\"input input-bordered\"\n          />\n        </div>\n        {actionData?.errors &&\n          Object.values(actionData.errors).map((error, index) =>\n            error ? (\n              <div key={index} className=\"text-error mt-1\">\n                {error as string}\n              </div>\n            ) : null\n          )}\n        <div className=\"form-control mt-6\">\n          <Button className=\"btn btn-primary no-animation\">Send</Button>\n        </div>\n      </Form>\n    </div>\n  )\n}\n",
      "type": "registry:page",
      "target": "app/routes/forgot-password.tsx"
    },
    {
      "path": "registry/default/blocks/password-based-auth-react-router/app/routes/update-password.tsx",
      "content": "import { redirect } from 'react-router'\nimport { Form, useActionData } from 'react-router'\nimport type { ActionFunctionArgs } from 'react-router'\n\nimport { Input } from '@/registry/default/components/ui/input'\nimport { Button } from '@/registry/default/components/ui/button'\nimport { createClient } from '@/registry/default/clients/react-router/lib/supabase.server'\n\nexport const action = async ({ request }: ActionFunctionArgs) => {\n  const { supabase, headers } = createClient(request)\n  const formData = await request.formData()\n  const password = formData.get('password') as string\n\n  const { error } = await supabase.auth.updateUser({\n    password: password,\n  })\n\n  if (error) {\n    return { success: false, error: error.message }\n  }\n\n  // Redirect to sign-in page after successful password update\n  return redirect('/sign-in', { headers })\n}\n\nconst ForgotPassword = () => {\n  const actionData = useActionData<typeof action>()\n\n  return (\n    <div className=\"max-w-md mx-auto mt-24\">\n      <p>Update your password</p>\n      <Form method=\"post\" className=\"grid gap-4 mt-4\">\n        <Input type=\"password\" name=\"password\" placeholder=\"Password\" required />\n        <br />\n        <Button type=\"submit\">Update password</Button>\n      </Form>\n      {actionData?.error && <p style={{ color: 'red' }}>{actionData.error}</p>}\n    </div>\n  )\n}\n\nexport default ForgotPassword\n",
      "type": "registry:page",
      "target": "app/routes/update-password.tsx"
    },
    {
      "path": "registry/default/clients/react/lib/supabase/client.ts",
      "content": "import { createClient as createSupabaseClient } from '@supabase/supabase-js'\n\nexport function createClient() {\n  return createSupabaseClient(process.env.VITE_SUPABASE_URL!, process.env.VITE_SUPABASE_ANON_KEY!)\n}\n",
      "type": "registry:lib"
    }
  ]
}