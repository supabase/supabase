{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "social-auth-react",
  "type": "registry:block",
  "title": "Social Auth flow for React and Supabase",
  "description": "Social Auth flow for React and Supabase",
  "dependencies": [
    "@supabase/supabase-js@latest"
  ],
  "registryDependencies": [
    "button",
    "card"
  ],
  "files": [
    {
      "path": "registry/default/blocks/social-auth-react/components/login-form.tsx",
      "content": "'use client'\r\n\r\nimport { cn } from '@/lib/utils'\r\nimport { createClient } from '@/registry/default/clients/nextjs/lib/supabase/client'\r\nimport { Button } from '@/registry/default/components/ui/button'\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from '@/registry/default/components/ui/card'\r\nimport { useState } from 'react'\r\n\r\nexport function LoginForm({ className, ...props }: React.ComponentPropsWithoutRef<'div'>) {\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const handleSocialLogin = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    const supabase = createClient()\r\n    setIsLoading(true)\r\n    setError(null)\r\n\r\n    try {\r\n      const { error } = await supabase.auth.signInWithOAuth({\r\n        provider: 'github',\r\n      })\r\n\r\n      if (error) throw error\r\n      location.href = '/protected'\r\n    } catch (error: unknown) {\r\n      setError(error instanceof Error ? error.message : 'An error occurred')\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={cn('flex flex-col gap-6', className)} {...props}>\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"text-2xl\">Welcome!</CardTitle>\r\n          <CardDescription>Sign in to your account to continue</CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <form onSubmit={handleSocialLogin}>\r\n            <div className=\"flex flex-col gap-6\">\r\n              {error && <p className=\"text-sm text-destructive-500\">{error}</p>}\r\n              <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\r\n                {isLoading ? 'Logging in...' : 'Continue with GitHub'}\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n",
      "type": "registry:component"
    },
    {
      "path": "registry/default/clients/react/lib/supabase/client.ts",
      "content": "import { createClient as createSupabaseClient } from '@supabase/supabase-js'\r\n\r\nexport function createClient() {\r\n  return createSupabaseClient(\r\n    import.meta.env.VITE_SUPABASE_URL!,\r\n    import.meta.env.VITE_SUPABASE_PUBLISHABLE_OR_ANON_KEY!\r\n  )\r\n}\r\n",
      "type": "registry:lib"
    }
  ],
  "envVars": {
    "VITE_SUPABASE_URL": "",
    "VITE_SUPABASE_PUBLISHABLE_OR_ANON_KEY": ""
  },
  "docs": "You'll need to set the following environment variables in your project: `VITE_SUPABASE_URL` and `VITE_SUPABASE_PUBLISHABLE_OR_ANON_KEY`."
}